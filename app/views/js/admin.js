/******/ (function(modules) { // webpackBootstrap
/******/ 	// The module cache
/******/ 	var installedModules = {};

/******/ 	// The require function
/******/ 	function __webpack_require__(moduleId) {

/******/ 		// Check if module is in cache
/******/ 		if(installedModules[moduleId])
/******/ 			return installedModules[moduleId].exports;

/******/ 		// Create a new module (and put it into the cache)
/******/ 		var module = installedModules[moduleId] = {
/******/ 			exports: {},
/******/ 			id: moduleId,
/******/ 			loaded: false
/******/ 		};

/******/ 		// Execute the module function
/******/ 		modules[moduleId].call(module.exports, module, module.exports, __webpack_require__);

/******/ 		// Flag the module as loaded
/******/ 		module.loaded = true;

/******/ 		// Return the exports of the module
/******/ 		return module.exports;
/******/ 	}


/******/ 	// expose the modules object (__webpack_modules__)
/******/ 	__webpack_require__.m = modules;

/******/ 	// expose the module cache
/******/ 	__webpack_require__.c = installedModules;

/******/ 	// __webpack_public_path__
/******/ 	__webpack_require__.p = "";

/******/ 	// Load entry module and return exports
/******/ 	return __webpack_require__(0);
/******/ })
/************************************************************************/
/******/ ([
/* 0 */
/***/ function(module, exports, __webpack_require__) {

	module.exports = __webpack_require__(1);


/***/ },
/* 1 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';

	var _index = __webpack_require__(2);

	var _index2 = _interopRequireDefault(_index);

	var _module = __webpack_require__(44);

	var _module2 = _interopRequireDefault(_module);

	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

	/**
	 * Created by zajac on 27.12.2016.
	 */
	angular.module('academicms.admin', [_index2.default, _module2.default]);

/***/ },
/* 2 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';

	Object.defineProperty(exports, "__esModule", {
	    value: true
	});

	__webpack_require__(3);

	__webpack_require__(4);

	__webpack_require__(5);

	__webpack_require__(6);

	__webpack_require__(8);

	__webpack_require__(11);

	var _RedirectServices = __webpack_require__(13);

	var _RedirectServices2 = _interopRequireDefault(_RedirectServices);

	var _AuthenticationServices = __webpack_require__(14);

	var _AuthenticationServices2 = _interopRequireDefault(_AuthenticationServices);

	var _ConfirmModalDirective = __webpack_require__(15);

	var _ConfirmModalDirective2 = _interopRequireDefault(_ConfirmModalDirective);

	var _InterceptorConfig = __webpack_require__(18);

	var _InterceptorConfig2 = _interopRequireDefault(_InterceptorConfig);

	var _ResponseInterceptor = __webpack_require__(19);

	var _ResponseInterceptor2 = _interopRequireDefault(_ResponseInterceptor);

	var _ErrorServices = __webpack_require__(20);

	var _ErrorServices2 = _interopRequireDefault(_ErrorServices);

	var _AngularBusyConfig = __webpack_require__(21);

	var _AngularBusyConfig2 = _interopRequireDefault(_AngularBusyConfig);

	var _ManageEmployeesServices = __webpack_require__(22);

	var _ManageEmployeesServices2 = _interopRequireDefault(_ManageEmployeesServices);

	var _DashTileComponent = __webpack_require__(23);

	var _DashTileComponent2 = _interopRequireDefault(_DashTileComponent);

	var _EmployeeItemComponent = __webpack_require__(26);

	var _EmployeeItemComponent2 = _interopRequireDefault(_EmployeeItemComponent);

	__webpack_require__(29);

	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

	exports.default = angular.module('academicms.common', ['ui.router', 'ui.bootstrap', 'ngAnimate', 'angular-busy', 'ngFileUpload']).factory('AuthenticationServices', _AuthenticationServices2.default).factory('RedirectServices', _RedirectServices2.default).directive('confirmModal', _ConfirmModalDirective2.default).component('dashTile', _DashTileComponent2.default).component('employeeItem', _EmployeeItemComponent2.default).config(['$locationProvider', function ($locationProvider) {
	    $locationProvider.hashPrefix('');
	}]).config(['$urlRouterProvider', function ($urlRouterProvider) {
	    return $urlRouterProvider.otherwise("/");
	}]).config(_InterceptorConfig2.default).config(_AngularBusyConfig2.default).factory('ResponseInterceptor', _ResponseInterceptor2.default).factory('ErrorServices', _ErrorServices2.default).factory('ManageEmployeesServices', _ManageEmployeesServices2.default).name;

	//----------
	//import '../vendor/angular/angular';

/***/ },
/* 3 */
/***/ function(module, exports) {

	"use strict";

	/**
	 * State-based routing for AngularJS
	 * @version v0.3.2
	 * @link http://angular-ui.github.com/
	 * @license MIT License, http://www.opensource.org/licenses/MIT
	 */

	/* commonjs package manager support (eg componentjs) */
	if (typeof module !== "undefined" && typeof exports !== "undefined" && module.exports === exports) {
	  module.exports = 'ui.router';
	}

	(function (window, angular, undefined) {
	  /*jshint globalstrict:true*/
	  /*global angular:false*/
	  'use strict';

	  var isDefined = angular.isDefined,
	      isFunction = angular.isFunction,
	      isString = angular.isString,
	      isObject = angular.isObject,
	      isArray = angular.isArray,
	      forEach = angular.forEach,
	      extend = angular.extend,
	      copy = angular.copy,
	      toJson = angular.toJson;

	  function inherit(parent, extra) {
	    return extend(new (extend(function () {}, { prototype: parent }))(), extra);
	  }

	  function merge(dst) {
	    forEach(arguments, function (obj) {
	      if (obj !== dst) {
	        forEach(obj, function (value, key) {
	          if (!dst.hasOwnProperty(key)) dst[key] = value;
	        });
	      }
	    });
	    return dst;
	  }

	  /**
	   * Finds the common ancestor path between two states.
	   *
	   * @param {Object} first The first state.
	   * @param {Object} second The second state.
	   * @return {Array} Returns an array of state names in descending order, not including the root.
	   */
	  function ancestors(first, second) {
	    var path = [];

	    for (var n in first.path) {
	      if (first.path[n] !== second.path[n]) break;
	      path.push(first.path[n]);
	    }
	    return path;
	  }

	  /**
	   * IE8-safe wrapper for `Object.keys()`.
	   *
	   * @param {Object} object A JavaScript object.
	   * @return {Array} Returns the keys of the object as an array.
	   */
	  function objectKeys(object) {
	    if (Object.keys) {
	      return Object.keys(object);
	    }
	    var result = [];

	    forEach(object, function (val, key) {
	      result.push(key);
	    });
	    return result;
	  }

	  /**
	   * IE8-safe wrapper for `Array.prototype.indexOf()`.
	   *
	   * @param {Array} array A JavaScript array.
	   * @param {*} value A value to search the array for.
	   * @return {Number} Returns the array index value of `value`, or `-1` if not present.
	   */
	  function indexOf(array, value) {
	    if (Array.prototype.indexOf) {
	      return array.indexOf(value, Number(arguments[2]) || 0);
	    }
	    var len = array.length >>> 0,
	        from = Number(arguments[2]) || 0;
	    from = from < 0 ? Math.ceil(from) : Math.floor(from);

	    if (from < 0) from += len;

	    for (; from < len; from++) {
	      if (from in array && array[from] === value) return from;
	    }
	    return -1;
	  }

	  /**
	   * Merges a set of parameters with all parameters inherited between the common parents of the
	   * current state and a given destination state.
	   *
	   * @param {Object} currentParams The value of the current state parameters ($stateParams).
	   * @param {Object} newParams The set of parameters which will be composited with inherited params.
	   * @param {Object} $current Internal definition of object representing the current state.
	   * @param {Object} $to Internal definition of object representing state to transition to.
	   */
	  function inheritParams(currentParams, newParams, $current, $to) {
	    var parents = ancestors($current, $to),
	        parentParams,
	        inherited = {},
	        inheritList = [];

	    for (var i in parents) {
	      if (!parents[i] || !parents[i].params) continue;
	      parentParams = objectKeys(parents[i].params);
	      if (!parentParams.length) continue;

	      for (var j in parentParams) {
	        if (indexOf(inheritList, parentParams[j]) >= 0) continue;
	        inheritList.push(parentParams[j]);
	        inherited[parentParams[j]] = currentParams[parentParams[j]];
	      }
	    }
	    return extend({}, inherited, newParams);
	  }

	  /**
	   * Performs a non-strict comparison of the subset of two objects, defined by a list of keys.
	   *
	   * @param {Object} a The first object.
	   * @param {Object} b The second object.
	   * @param {Array} keys The list of keys within each object to compare. If the list is empty or not specified,
	   *                     it defaults to the list of keys in `a`.
	   * @return {Boolean} Returns `true` if the keys match, otherwise `false`.
	   */
	  function equalForKeys(a, b, keys) {
	    if (!keys) {
	      keys = [];
	      for (var n in a) {
	        keys.push(n);
	      } // Used instead of Object.keys() for IE8 compatibility
	    }

	    for (var i = 0; i < keys.length; i++) {
	      var k = keys[i];
	      if (a[k] != b[k]) return false; // Not '===', values aren't necessarily normalized
	    }
	    return true;
	  }

	  /**
	   * Returns the subset of an object, based on a list of keys.
	   *
	   * @param {Array} keys
	   * @param {Object} values
	   * @return {Boolean} Returns a subset of `values`.
	   */
	  function filterByKeys(keys, values) {
	    var filtered = {};

	    forEach(keys, function (name) {
	      filtered[name] = values[name];
	    });
	    return filtered;
	  }

	  // like _.indexBy
	  // when you know that your index values will be unique, or you want last-one-in to win
	  function indexBy(array, propName) {
	    var result = {};
	    forEach(array, function (item) {
	      result[item[propName]] = item;
	    });
	    return result;
	  }

	  // extracted from underscore.js
	  // Return a copy of the object only containing the whitelisted properties.
	  function pick(obj) {
	    var copy = {};
	    var keys = Array.prototype.concat.apply(Array.prototype, Array.prototype.slice.call(arguments, 1));
	    forEach(keys, function (key) {
	      if (key in obj) copy[key] = obj[key];
	    });
	    return copy;
	  }

	  // extracted from underscore.js
	  // Return a copy of the object omitting the blacklisted properties.
	  function omit(obj) {
	    var copy = {};
	    var keys = Array.prototype.concat.apply(Array.prototype, Array.prototype.slice.call(arguments, 1));
	    for (var key in obj) {
	      if (indexOf(keys, key) == -1) copy[key] = obj[key];
	    }
	    return copy;
	  }

	  function pluck(collection, key) {
	    var result = isArray(collection) ? [] : {};

	    forEach(collection, function (val, i) {
	      result[i] = isFunction(key) ? key(val) : val[key];
	    });
	    return result;
	  }

	  function filter(collection, callback) {
	    var array = isArray(collection);
	    var result = array ? [] : {};
	    forEach(collection, function (val, i) {
	      if (callback(val, i)) {
	        result[array ? result.length : i] = val;
	      }
	    });
	    return result;
	  }

	  function map(collection, callback) {
	    var result = isArray(collection) ? [] : {};

	    forEach(collection, function (val, i) {
	      result[i] = callback(val, i);
	    });
	    return result;
	  }

	  // issue #2676 #2889
	  function silenceUncaughtInPromise(promise) {
	    return promise.then(undefined, function () {}) && promise;
	  }

	  /**
	   * @ngdoc overview
	   * @name ui.router.util
	   *
	   * @description
	   * # ui.router.util sub-module
	   *
	   * This module is a dependency of other sub-modules. Do not include this module as a dependency
	   * in your angular app (use {@link ui.router} module instead).
	   *
	   */
	  angular.module('ui.router.util', ['ng']);

	  /**
	   * @ngdoc overview
	   * @name ui.router.router
	   * 
	   * @requires ui.router.util
	   *
	   * @description
	   * # ui.router.router sub-module
	   *
	   * This module is a dependency of other sub-modules. Do not include this module as a dependency
	   * in your angular app (use {@link ui.router} module instead).
	   */
	  angular.module('ui.router.router', ['ui.router.util']);

	  /**
	   * @ngdoc overview
	   * @name ui.router.state
	   * 
	   * @requires ui.router.router
	   * @requires ui.router.util
	   *
	   * @description
	   * # ui.router.state sub-module
	   *
	   * This module is a dependency of the main ui.router module. Do not include this module as a dependency
	   * in your angular app (use {@link ui.router} module instead).
	   * 
	   */
	  angular.module('ui.router.state', ['ui.router.router', 'ui.router.util']);

	  /**
	   * @ngdoc overview
	   * @name ui.router
	   *
	   * @requires ui.router.state
	   *
	   * @description
	   * # ui.router
	   * 
	   * ## The main module for ui.router 
	   * There are several sub-modules included with the ui.router module, however only this module is needed
	   * as a dependency within your angular app. The other modules are for organization purposes. 
	   *
	   * The modules are:
	   * * ui.router - the main "umbrella" module
	   * * ui.router.router - 
	   * 
	   * *You'll need to include **only** this module as the dependency within your angular app.*
	   * 
	   * <pre>
	   * <!doctype html>
	   * <html ng-app="myApp">
	   * <head>
	   *   <script src="js/angular.js"></script>
	   *   <!-- Include the ui-router script -->
	   *   <script src="js/angular-ui-router.min.js"></script>
	   *   <script>
	   *     // ...and add 'ui.router' as a dependency
	   *     var myApp = angular.module('myApp', ['ui.router']);
	   *   </script>
	   * </head>
	   * <body>
	   * </body>
	   * </html>
	   * </pre>
	   */
	  angular.module('ui.router', ['ui.router.state']);

	  angular.module('ui.router.compat', ['ui.router']);

	  /**
	   * @ngdoc object
	   * @name ui.router.util.$resolve
	   *
	   * @requires $q
	   * @requires $injector
	   *
	   * @description
	   * Manages resolution of (acyclic) graphs of promises.
	   */
	  $Resolve.$inject = ['$q', '$injector'];
	  function $Resolve($q, $injector) {

	    var VISIT_IN_PROGRESS = 1,
	        VISIT_DONE = 2,
	        NOTHING = {},
	        NO_DEPENDENCIES = [],
	        NO_LOCALS = NOTHING,
	        NO_PARENT = extend($q.when(NOTHING), { $$promises: NOTHING, $$values: NOTHING });

	    /**
	     * @ngdoc function
	     * @name ui.router.util.$resolve#study
	     * @methodOf ui.router.util.$resolve
	     *
	     * @description
	     * Studies a set of invocables that are likely to be used multiple times.
	     * <pre>
	     * $resolve.study(invocables)(locals, parent, self)
	     * </pre>
	     * is equivalent to
	     * <pre>
	     * $resolve.resolve(invocables, locals, parent, self)
	     * </pre>
	     * but the former is more efficient (in fact `resolve` just calls `study` 
	     * internally).
	     *
	     * @param {object} invocables Invocable objects
	     * @return {function} a function to pass in locals, parent and self
	     */
	    this.study = function (invocables) {
	      if (!isObject(invocables)) throw new Error("'invocables' must be an object");
	      var invocableKeys = objectKeys(invocables || {});

	      // Perform a topological sort of invocables to build an ordered plan
	      var plan = [],
	          cycle = [],
	          visited = {};
	      function visit(value, key) {
	        if (visited[key] === VISIT_DONE) return;

	        cycle.push(key);
	        if (visited[key] === VISIT_IN_PROGRESS) {
	          cycle.splice(0, indexOf(cycle, key));
	          throw new Error("Cyclic dependency: " + cycle.join(" -> "));
	        }
	        visited[key] = VISIT_IN_PROGRESS;

	        if (isString(value)) {
	          plan.push(key, [function () {
	            return $injector.get(value);
	          }], NO_DEPENDENCIES);
	        } else {
	          var params = $injector.annotate(value);
	          forEach(params, function (param) {
	            if (param !== key && invocables.hasOwnProperty(param)) visit(invocables[param], param);
	          });
	          plan.push(key, value, params);
	        }

	        cycle.pop();
	        visited[key] = VISIT_DONE;
	      }
	      forEach(invocables, visit);
	      invocables = cycle = visited = null; // plan is all that's required

	      function isResolve(value) {
	        return isObject(value) && value.then && value.$$promises;
	      }

	      return function (locals, parent, self) {
	        if (isResolve(locals) && self === undefined) {
	          self = parent;parent = locals;locals = null;
	        }
	        if (!locals) locals = NO_LOCALS;else if (!isObject(locals)) {
	          throw new Error("'locals' must be an object");
	        }
	        if (!parent) parent = NO_PARENT;else if (!isResolve(parent)) {
	          throw new Error("'parent' must be a promise returned by $resolve.resolve()");
	        }

	        // To complete the overall resolution, we have to wait for the parent
	        // promise and for the promise for each invokable in our plan.
	        var resolution = $q.defer(),
	            result = resolution.promise,
	            promises = result.$$promises = {},
	            values = extend({}, locals),
	            wait = 1 + plan.length / 3,
	            merged = false;

	        function done() {
	          // Merge parent values we haven't got yet and publish our own $$values
	          if (! --wait) {
	            if (!merged) merge(values, parent.$$values);
	            result.$$values = values;
	            result.$$promises = result.$$promises || true; // keep for isResolve()
	            delete result.$$inheritedValues;
	            resolution.resolve(values);
	          }
	        }

	        function fail(reason) {
	          result.$$failure = reason;
	          resolution.reject(reason);
	        }

	        // Short-circuit if parent has already failed
	        if (isDefined(parent.$$failure)) {
	          fail(parent.$$failure);
	          return result;
	        }

	        if (parent.$$inheritedValues) {
	          merge(values, omit(parent.$$inheritedValues, invocableKeys));
	        }

	        // Merge parent values if the parent has already resolved, or merge
	        // parent promises and wait if the parent resolve is still in progress.
	        extend(promises, parent.$$promises);
	        if (parent.$$values) {
	          merged = merge(values, omit(parent.$$values, invocableKeys));
	          result.$$inheritedValues = omit(parent.$$values, invocableKeys);
	          done();
	        } else {
	          if (parent.$$inheritedValues) {
	            result.$$inheritedValues = omit(parent.$$inheritedValues, invocableKeys);
	          }
	          parent.then(done, fail);
	        }

	        // Process each invocable in the plan, but ignore any where a local of the same name exists.
	        for (var i = 0, ii = plan.length; i < ii; i += 3) {
	          if (locals.hasOwnProperty(plan[i])) done();else invoke(plan[i], plan[i + 1], plan[i + 2]);
	        }

	        function invoke(key, invocable, params) {
	          // Create a deferred for this invocation. Failures will propagate to the resolution as well.
	          var invocation = $q.defer(),
	              waitParams = 0;
	          function onfailure(reason) {
	            invocation.reject(reason);
	            fail(reason);
	          }
	          // Wait for any parameter that we have a promise for (either from parent or from this
	          // resolve; in that case study() will have made sure it's ordered before us in the plan).
	          forEach(params, function (dep) {
	            if (promises.hasOwnProperty(dep) && !locals.hasOwnProperty(dep)) {
	              waitParams++;
	              promises[dep].then(function (result) {
	                values[dep] = result;
	                if (! --waitParams) proceed();
	              }, onfailure);
	            }
	          });
	          if (!waitParams) proceed();
	          function proceed() {
	            if (isDefined(result.$$failure)) return;
	            try {
	              invocation.resolve($injector.invoke(invocable, self, values));
	              invocation.promise.then(function (result) {
	                values[key] = result;
	                done();
	              }, onfailure);
	            } catch (e) {
	              onfailure(e);
	            }
	          }
	          // Publish promise synchronously; invocations further down in the plan may depend on it.
	          promises[key] = invocation.promise;
	        }

	        return result;
	      };
	    };

	    /**
	     * @ngdoc function
	     * @name ui.router.util.$resolve#resolve
	     * @methodOf ui.router.util.$resolve
	     *
	     * @description
	     * Resolves a set of invocables. An invocable is a function to be invoked via 
	     * `$injector.invoke()`, and can have an arbitrary number of dependencies. 
	     * An invocable can either return a value directly,
	     * or a `$q` promise. If a promise is returned it will be resolved and the 
	     * resulting value will be used instead. Dependencies of invocables are resolved 
	     * (in this order of precedence)
	     *
	     * - from the specified `locals`
	     * - from another invocable that is part of this `$resolve` call
	     * - from an invocable that is inherited from a `parent` call to `$resolve` 
	     *   (or recursively
	     * - from any ancestor `$resolve` of that parent).
	     *
	     * The return value of `$resolve` is a promise for an object that contains 
	     * (in this order of precedence)
	     *
	     * - any `locals` (if specified)
	     * - the resolved return values of all injectables
	     * - any values inherited from a `parent` call to `$resolve` (if specified)
	     *
	     * The promise will resolve after the `parent` promise (if any) and all promises 
	     * returned by injectables have been resolved. If any invocable 
	     * (or `$injector.invoke`) throws an exception, or if a promise returned by an 
	     * invocable is rejected, the `$resolve` promise is immediately rejected with the 
	     * same error. A rejection of a `parent` promise (if specified) will likewise be 
	     * propagated immediately. Once the `$resolve` promise has been rejected, no 
	     * further invocables will be called.
	     * 
	     * Cyclic dependencies between invocables are not permitted and will cause `$resolve`
	     * to throw an error. As a special case, an injectable can depend on a parameter 
	     * with the same name as the injectable, which will be fulfilled from the `parent` 
	     * injectable of the same name. This allows inherited values to be decorated. 
	     * Note that in this case any other injectable in the same `$resolve` with the same
	     * dependency would see the decorated value, not the inherited value.
	     *
	     * Note that missing dependencies -- unlike cyclic dependencies -- will cause an 
	     * (asynchronous) rejection of the `$resolve` promise rather than a (synchronous) 
	     * exception.
	     *
	     * Invocables are invoked eagerly as soon as all dependencies are available. 
	     * This is true even for dependencies inherited from a `parent` call to `$resolve`.
	     *
	     * As a special case, an invocable can be a string, in which case it is taken to 
	     * be a service name to be passed to `$injector.get()`. This is supported primarily 
	     * for backwards-compatibility with the `resolve` property of `$routeProvider` 
	     * routes.
	     *
	     * @param {object} invocables functions to invoke or 
	     * `$injector` services to fetch.
	     * @param {object} locals  values to make available to the injectables
	     * @param {object} parent  a promise returned by another call to `$resolve`.
	     * @param {object} self  the `this` for the invoked methods
	     * @return {object} Promise for an object that contains the resolved return value
	     * of all invocables, as well as any inherited and local values.
	     */
	    this.resolve = function (invocables, locals, parent, self) {
	      return this.study(invocables)(locals, parent, self);
	    };
	  }

	  angular.module('ui.router.util').service('$resolve', $Resolve);

	  /**
	   * @ngdoc object
	   * @name ui.router.util.$templateFactory
	   *
	   * @requires $http
	   * @requires $templateCache
	   * @requires $injector
	   *
	   * @description
	   * Service. Manages loading of templates.
	   */
	  $TemplateFactory.$inject = ['$http', '$templateCache', '$injector'];
	  function $TemplateFactory($http, $templateCache, $injector) {

	    /**
	     * @ngdoc function
	     * @name ui.router.util.$templateFactory#fromConfig
	     * @methodOf ui.router.util.$templateFactory
	     *
	     * @description
	     * Creates a template from a configuration object. 
	     *
	     * @param {object} config Configuration object for which to load a template. 
	     * The following properties are search in the specified order, and the first one 
	     * that is defined is used to create the template:
	     *
	     * @param {string|object} config.template html string template or function to 
	     * load via {@link ui.router.util.$templateFactory#fromString fromString}.
	     * @param {string|object} config.templateUrl url to load or a function returning 
	     * the url to load via {@link ui.router.util.$templateFactory#fromUrl fromUrl}.
	     * @param {Function} config.templateProvider function to invoke via 
	     * {@link ui.router.util.$templateFactory#fromProvider fromProvider}.
	     * @param {object} params  Parameters to pass to the template function.
	     * @param {object} locals Locals to pass to `invoke` if the template is loaded 
	     * via a `templateProvider`. Defaults to `{ params: params }`.
	     *
	     * @return {string|object}  The template html as a string, or a promise for 
	     * that string,or `null` if no template is configured.
	     */
	    this.fromConfig = function (config, params, locals) {
	      return isDefined(config.template) ? this.fromString(config.template, params) : isDefined(config.templateUrl) ? this.fromUrl(config.templateUrl, params) : isDefined(config.templateProvider) ? this.fromProvider(config.templateProvider, params, locals) : null;
	    };

	    /**
	     * @ngdoc function
	     * @name ui.router.util.$templateFactory#fromString
	     * @methodOf ui.router.util.$templateFactory
	     *
	     * @description
	     * Creates a template from a string or a function returning a string.
	     *
	     * @param {string|object} template html template as a string or function that 
	     * returns an html template as a string.
	     * @param {object} params Parameters to pass to the template function.
	     *
	     * @return {string|object} The template html as a string, or a promise for that 
	     * string.
	     */
	    this.fromString = function (template, params) {
	      return isFunction(template) ? template(params) : template;
	    };

	    /**
	     * @ngdoc function
	     * @name ui.router.util.$templateFactory#fromUrl
	     * @methodOf ui.router.util.$templateFactory
	     * 
	     * @description
	     * Loads a template from the a URL via `$http` and `$templateCache`.
	     *
	     * @param {string|Function} url url of the template to load, or a function 
	     * that returns a url.
	     * @param {Object} params Parameters to pass to the url function.
	     * @return {string|Promise.<string>} The template html as a string, or a promise 
	     * for that string.
	     */
	    this.fromUrl = function (url, params) {
	      if (isFunction(url)) url = url(params);
	      if (url == null) return null;else return $http.get(url, { cache: $templateCache, headers: { Accept: 'text/html' } }).then(function (response) {
	        return response.data;
	      });
	    };

	    /**
	     * @ngdoc function
	     * @name ui.router.util.$templateFactory#fromProvider
	     * @methodOf ui.router.util.$templateFactory
	     *
	     * @description
	     * Creates a template by invoking an injectable provider function.
	     *
	     * @param {Function} provider Function to invoke via `$injector.invoke`
	     * @param {Object} params Parameters for the template.
	     * @param {Object} locals Locals to pass to `invoke`. Defaults to 
	     * `{ params: params }`.
	     * @return {string|Promise.<string>} The template html as a string, or a promise 
	     * for that string.
	     */
	    this.fromProvider = function (provider, params, locals) {
	      return $injector.invoke(provider, null, locals || { params: params });
	    };
	  }

	  angular.module('ui.router.util').service('$templateFactory', $TemplateFactory);

	  var $$UMFP; // reference to $UrlMatcherFactoryProvider

	  /**
	   * @ngdoc object
	   * @name ui.router.util.type:UrlMatcher
	   *
	   * @description
	   * Matches URLs against patterns and extracts named parameters from the path or the search
	   * part of the URL. A URL pattern consists of a path pattern, optionally followed by '?' and a list
	   * of search parameters. Multiple search parameter names are separated by '&'. Search parameters
	   * do not influence whether or not a URL is matched, but their values are passed through into
	   * the matched parameters returned by {@link ui.router.util.type:UrlMatcher#methods_exec exec}.
	   *
	   * Path parameter placeholders can be specified using simple colon/catch-all syntax or curly brace
	   * syntax, which optionally allows a regular expression for the parameter to be specified:
	   *
	   * * `':'` name - colon placeholder
	   * * `'*'` name - catch-all placeholder
	   * * `'{' name '}'` - curly placeholder
	   * * `'{' name ':' regexp|type '}'` - curly placeholder with regexp or type name. Should the
	   *   regexp itself contain curly braces, they must be in matched pairs or escaped with a backslash.
	   *
	   * Parameter names may contain only word characters (latin letters, digits, and underscore) and
	   * must be unique within the pattern (across both path and search parameters). For colon
	   * placeholders or curly placeholders without an explicit regexp, a path parameter matches any
	   * number of characters other than '/'. For catch-all placeholders the path parameter matches
	   * any number of characters.
	   *
	   * Examples:
	   *
	   * * `'/hello/'` - Matches only if the path is exactly '/hello/'. There is no special treatment for
	   *   trailing slashes, and patterns have to match the entire path, not just a prefix.
	   * * `'/user/:id'` - Matches '/user/bob' or '/user/1234!!!' or even '/user/' but not '/user' or
	   *   '/user/bob/details'. The second path segment will be captured as the parameter 'id'.
	   * * `'/user/{id}'` - Same as the previous example, but using curly brace syntax.
	   * * `'/user/{id:[^/]*}'` - Same as the previous example.
	   * * `'/user/{id:[0-9a-fA-F]{1,8}}'` - Similar to the previous example, but only matches if the id
	   *   parameter consists of 1 to 8 hex digits.
	   * * `'/files/{path:.*}'` - Matches any URL starting with '/files/' and captures the rest of the
	   *   path into the parameter 'path'.
	   * * `'/files/*path'` - ditto.
	   * * `'/calendar/{start:date}'` - Matches "/calendar/2014-11-12" (because the pattern defined
	   *   in the built-in  `date` Type matches `2014-11-12`) and provides a Date object in $stateParams.start
	   *
	   * @param {string} pattern  The pattern to compile into a matcher.
	   * @param {Object} config  A configuration object hash:
	   * @param {Object=} parentMatcher Used to concatenate the pattern/config onto
	   *   an existing UrlMatcher
	   *
	   * * `caseInsensitive` - `true` if URL matching should be case insensitive, otherwise `false`, the default value (for backward compatibility) is `false`.
	   * * `strict` - `false` if matching against a URL with a trailing slash should be treated as equivalent to a URL without a trailing slash, the default value is `true`.
	   *
	   * @property {string} prefix  A static prefix of this pattern. The matcher guarantees that any
	   *   URL matching this matcher (i.e. any string for which {@link ui.router.util.type:UrlMatcher#methods_exec exec()} returns
	   *   non-null) will start with this prefix.
	   *
	   * @property {string} source  The pattern that was passed into the constructor
	   *
	   * @property {string} sourcePath  The path portion of the source property
	   *
	   * @property {string} sourceSearch  The search portion of the source property
	   *
	   * @property {string} regex  The constructed regex that will be used to match against the url when
	   *   it is time to determine which url will match.
	   *
	   * @returns {Object}  New `UrlMatcher` object
	   */
	  function UrlMatcher(pattern, config, parentMatcher) {
	    config = extend({ params: {} }, isObject(config) ? config : {});

	    // Find all placeholders and create a compiled pattern, using either classic or curly syntax:
	    //   '*' name
	    //   ':' name
	    //   '{' name '}'
	    //   '{' name ':' regexp '}'
	    // The regular expression is somewhat complicated due to the need to allow curly braces
	    // inside the regular expression. The placeholder regexp breaks down as follows:
	    //    ([:*])([\w\[\]]+)              - classic placeholder ($1 / $2) (search version has - for snake-case)
	    //    \{([\w\[\]]+)(?:\:\s*( ... ))?\}  - curly brace placeholder ($3) with optional regexp/type ... ($4) (search version has - for snake-case
	    //    (?: ... | ... | ... )+         - the regexp consists of any number of atoms, an atom being either
	    //    [^{}\\]+                       - anything other than curly braces or backslash
	    //    \\.                            - a backslash escape
	    //    \{(?:[^{}\\]+|\\.)*\}          - a matched set of curly braces containing other atoms
	    var placeholder = /([:*])([\w\[\]]+)|\{([\w\[\]]+)(?:\:\s*((?:[^{}\\]+|\\.|\{(?:[^{}\\]+|\\.)*\})+))?\}/g,
	        searchPlaceholder = /([:]?)([\w\[\].-]+)|\{([\w\[\].-]+)(?:\:\s*((?:[^{}\\]+|\\.|\{(?:[^{}\\]+|\\.)*\})+))?\}/g,
	        compiled = '^',
	        last = 0,
	        m,
	        segments = this.segments = [],
	        parentParams = parentMatcher ? parentMatcher.params : {},
	        params = this.params = parentMatcher ? parentMatcher.params.$$new() : new $$UMFP.ParamSet(),
	        paramNames = [];

	    function addParameter(id, type, config, location) {
	      paramNames.push(id);
	      if (parentParams[id]) return parentParams[id];
	      if (!/^\w+([-.]+\w+)*(?:\[\])?$/.test(id)) throw new Error("Invalid parameter name '" + id + "' in pattern '" + pattern + "'");
	      if (params[id]) throw new Error("Duplicate parameter name '" + id + "' in pattern '" + pattern + "'");
	      params[id] = new $$UMFP.Param(id, type, config, location);
	      return params[id];
	    }

	    function quoteRegExp(string, pattern, squash, optional) {
	      var surroundPattern = ['', ''],
	          result = string.replace(/[\\\[\]\^$*+?.()|{}]/g, "\\$&");
	      if (!pattern) return result;
	      switch (squash) {
	        case false:
	          surroundPattern = ['(', ')' + (optional ? "?" : "")];break;
	        case true:
	          result = result.replace(/\/$/, '');
	          surroundPattern = ['(?:\/(', ')|\/)?'];
	          break;
	        default:
	          surroundPattern = ['(' + squash + "|", ')?'];break;
	      }
	      return result + surroundPattern[0] + pattern + surroundPattern[1];
	    }

	    this.source = pattern;

	    // Split into static segments separated by path parameter placeholders.
	    // The number of segments is always 1 more than the number of parameters.
	    function matchDetails(m, isSearch) {
	      var id, regexp, segment, type, cfg, arrayMode;
	      id = m[2] || m[3]; // IE[78] returns '' for unmatched groups instead of null
	      cfg = config.params[id];
	      segment = pattern.substring(last, m.index);
	      regexp = isSearch ? m[4] : m[4] || (m[1] == '*' ? '.*' : null);

	      if (regexp) {
	        type = $$UMFP.type(regexp) || inherit($$UMFP.type("string"), { pattern: new RegExp(regexp, config.caseInsensitive ? 'i' : undefined) });
	      }

	      return {
	        id: id, regexp: regexp, segment: segment, type: type, cfg: cfg
	      };
	    }

	    var p, param, segment;
	    while (m = placeholder.exec(pattern)) {
	      p = matchDetails(m, false);
	      if (p.segment.indexOf('?') >= 0) break; // we're into the search part

	      param = addParameter(p.id, p.type, p.cfg, "path");
	      compiled += quoteRegExp(p.segment, param.type.pattern.source, param.squash, param.isOptional);
	      segments.push(p.segment);
	      last = placeholder.lastIndex;
	    }
	    segment = pattern.substring(last);

	    // Find any search parameter names and remove them from the last segment
	    var i = segment.indexOf('?');

	    if (i >= 0) {
	      var search = this.sourceSearch = segment.substring(i);
	      segment = segment.substring(0, i);
	      this.sourcePath = pattern.substring(0, last + i);

	      if (search.length > 0) {
	        last = 0;
	        while (m = searchPlaceholder.exec(search)) {
	          p = matchDetails(m, true);
	          param = addParameter(p.id, p.type, p.cfg, "search");
	          last = placeholder.lastIndex;
	          // check if ?&
	        }
	      }
	    } else {
	      this.sourcePath = pattern;
	      this.sourceSearch = '';
	    }

	    compiled += quoteRegExp(segment) + (config.strict === false ? '\/?' : '') + '$';
	    segments.push(segment);

	    this.regexp = new RegExp(compiled, config.caseInsensitive ? 'i' : undefined);
	    this.prefix = segments[0];
	    this.$$paramNames = paramNames;
	  }

	  /**
	   * @ngdoc function
	   * @name ui.router.util.type:UrlMatcher#concat
	   * @methodOf ui.router.util.type:UrlMatcher
	   *
	   * @description
	   * Returns a new matcher for a pattern constructed by appending the path part and adding the
	   * search parameters of the specified pattern to this pattern. The current pattern is not
	   * modified. This can be understood as creating a pattern for URLs that are relative to (or
	   * suffixes of) the current pattern.
	   *
	   * @example
	   * The following two matchers are equivalent:
	   * <pre>
	   * new UrlMatcher('/user/{id}?q').concat('/details?date');
	   * new UrlMatcher('/user/{id}/details?q&date');
	   * </pre>
	   *
	   * @param {string} pattern  The pattern to append.
	   * @param {Object} config  An object hash of the configuration for the matcher.
	   * @returns {UrlMatcher}  A matcher for the concatenated pattern.
	   */
	  UrlMatcher.prototype.concat = function (pattern, config) {
	    // Because order of search parameters is irrelevant, we can add our own search
	    // parameters to the end of the new pattern. Parse the new pattern by itself
	    // and then join the bits together, but it's much easier to do this on a string level.
	    var defaultConfig = {
	      caseInsensitive: $$UMFP.caseInsensitive(),
	      strict: $$UMFP.strictMode(),
	      squash: $$UMFP.defaultSquashPolicy()
	    };
	    return new UrlMatcher(this.sourcePath + pattern + this.sourceSearch, extend(defaultConfig, config), this);
	  };

	  UrlMatcher.prototype.toString = function () {
	    return this.source;
	  };

	  /**
	   * @ngdoc function
	   * @name ui.router.util.type:UrlMatcher#exec
	   * @methodOf ui.router.util.type:UrlMatcher
	   *
	   * @description
	   * Tests the specified path against this matcher, and returns an object containing the captured
	   * parameter values, or null if the path does not match. The returned object contains the values
	   * of any search parameters that are mentioned in the pattern, but their value may be null if
	   * they are not present in `searchParams`. This means that search parameters are always treated
	   * as optional.
	   *
	   * @example
	   * <pre>
	   * new UrlMatcher('/user/{id}?q&r').exec('/user/bob', {
	   *   x: '1', q: 'hello'
	   * });
	   * // returns { id: 'bob', q: 'hello', r: null }
	   * </pre>
	   *
	   * @param {string} path  The URL path to match, e.g. `$location.path()`.
	   * @param {Object} searchParams  URL search parameters, e.g. `$location.search()`.
	   * @returns {Object}  The captured parameter values.
	   */
	  UrlMatcher.prototype.exec = function (path, searchParams) {
	    var m = this.regexp.exec(path);
	    if (!m) return null;
	    searchParams = searchParams || {};

	    var paramNames = this.parameters(),
	        nTotal = paramNames.length,
	        nPath = this.segments.length - 1,
	        values = {},
	        i,
	        j,
	        cfg,
	        paramName;

	    if (nPath !== m.length - 1) throw new Error("Unbalanced capture group in route '" + this.source + "'");

	    function decodePathArray(string) {
	      function reverseString(str) {
	        return str.split("").reverse().join("");
	      }
	      function unquoteDashes(str) {
	        return str.replace(/\\-/g, "-");
	      }

	      var split = reverseString(string).split(/-(?!\\)/);
	      var allReversed = map(split, reverseString);
	      return map(allReversed, unquoteDashes).reverse();
	    }

	    var param, paramVal;
	    for (i = 0; i < nPath; i++) {
	      paramName = paramNames[i];
	      param = this.params[paramName];
	      paramVal = m[i + 1];
	      // if the param value matches a pre-replace pair, replace the value before decoding.
	      for (j = 0; j < param.replace.length; j++) {
	        if (param.replace[j].from === paramVal) paramVal = param.replace[j].to;
	      }
	      if (paramVal && param.array === true) paramVal = decodePathArray(paramVal);
	      if (isDefined(paramVal)) paramVal = param.type.decode(paramVal);
	      values[paramName] = param.value(paramVal);
	    }
	    for (; /**/i < nTotal; i++) {
	      paramName = paramNames[i];
	      values[paramName] = this.params[paramName].value(searchParams[paramName]);
	      param = this.params[paramName];
	      paramVal = searchParams[paramName];
	      for (j = 0; j < param.replace.length; j++) {
	        if (param.replace[j].from === paramVal) paramVal = param.replace[j].to;
	      }
	      if (isDefined(paramVal)) paramVal = param.type.decode(paramVal);
	      values[paramName] = param.value(paramVal);
	    }

	    return values;
	  };

	  /**
	   * @ngdoc function
	   * @name ui.router.util.type:UrlMatcher#parameters
	   * @methodOf ui.router.util.type:UrlMatcher
	   *
	   * @description
	   * Returns the names of all path and search parameters of this pattern in an unspecified order.
	   *
	   * @returns {Array.<string>}  An array of parameter names. Must be treated as read-only. If the
	   *    pattern has no parameters, an empty array is returned.
	   */
	  UrlMatcher.prototype.parameters = function (param) {
	    if (!isDefined(param)) return this.$$paramNames;
	    return this.params[param] || null;
	  };

	  /**
	   * @ngdoc function
	   * @name ui.router.util.type:UrlMatcher#validates
	   * @methodOf ui.router.util.type:UrlMatcher
	   *
	   * @description
	   * Checks an object hash of parameters to validate their correctness according to the parameter
	   * types of this `UrlMatcher`.
	   *
	   * @param {Object} params The object hash of parameters to validate.
	   * @returns {boolean} Returns `true` if `params` validates, otherwise `false`.
	   */
	  UrlMatcher.prototype.validates = function (params) {
	    return this.params.$$validates(params);
	  };

	  /**
	   * @ngdoc function
	   * @name ui.router.util.type:UrlMatcher#format
	   * @methodOf ui.router.util.type:UrlMatcher
	   *
	   * @description
	   * Creates a URL that matches this pattern by substituting the specified values
	   * for the path and search parameters. Null values for path parameters are
	   * treated as empty strings.
	   *
	   * @example
	   * <pre>
	   * new UrlMatcher('/user/{id}?q').format({ id:'bob', q:'yes' });
	   * // returns '/user/bob?q=yes'
	   * </pre>
	   *
	   * @param {Object} values  the values to substitute for the parameters in this pattern.
	   * @returns {string}  the formatted URL (path and optionally search part).
	   */
	  UrlMatcher.prototype.format = function (values) {
	    values = values || {};
	    var segments = this.segments,
	        params = this.parameters(),
	        paramset = this.params;
	    if (!this.validates(values)) return null;

	    var i,
	        search = false,
	        nPath = segments.length - 1,
	        nTotal = params.length,
	        result = segments[0];

	    function encodeDashes(str) {
	      // Replace dashes with encoded "\-"
	      return encodeURIComponent(str).replace(/-/g, function (c) {
	        return '%5C%' + c.charCodeAt(0).toString(16).toUpperCase();
	      });
	    }

	    for (i = 0; i < nTotal; i++) {
	      var isPathParam = i < nPath;
	      var name = params[i],
	          param = paramset[name],
	          value = param.value(values[name]);
	      var isDefaultValue = param.isOptional && param.type.equals(param.value(), value);
	      var squash = isDefaultValue ? param.squash : false;
	      var encoded = param.type.encode(value);

	      if (isPathParam) {
	        var nextSegment = segments[i + 1];
	        var isFinalPathParam = i + 1 === nPath;

	        if (squash === false) {
	          if (encoded != null) {
	            if (isArray(encoded)) {
	              result += map(encoded, encodeDashes).join("-");
	            } else {
	              result += encodeURIComponent(encoded);
	            }
	          }
	          result += nextSegment;
	        } else if (squash === true) {
	          var capture = result.match(/\/$/) ? /\/?(.*)/ : /(.*)/;
	          result += nextSegment.match(capture)[1];
	        } else if (isString(squash)) {
	          result += squash + nextSegment;
	        }

	        if (isFinalPathParam && param.squash === true && result.slice(-1) === '/') result = result.slice(0, -1);
	      } else {
	        if (encoded == null || isDefaultValue && squash !== false) continue;
	        if (!isArray(encoded)) encoded = [encoded];
	        if (encoded.length === 0) continue;
	        encoded = map(encoded, encodeURIComponent).join('&' + name + '=');
	        result += (search ? '&' : '?') + (name + '=' + encoded);
	        search = true;
	      }
	    }

	    return result;
	  };

	  /**
	   * @ngdoc object
	   * @name ui.router.util.type:Type
	   *
	   * @description
	   * Implements an interface to define custom parameter types that can be decoded from and encoded to
	   * string parameters matched in a URL. Used by {@link ui.router.util.type:UrlMatcher `UrlMatcher`}
	   * objects when matching or formatting URLs, or comparing or validating parameter values.
	   *
	   * See {@link ui.router.util.$urlMatcherFactory#methods_type `$urlMatcherFactory#type()`} for more
	   * information on registering custom types.
	   *
	   * @param {Object} config  A configuration object which contains the custom type definition.  The object's
	   *        properties will override the default methods and/or pattern in `Type`'s public interface.
	   * @example
	   * <pre>
	   * {
	   *   decode: function(val) { return parseInt(val, 10); },
	   *   encode: function(val) { return val && val.toString(); },
	   *   equals: function(a, b) { return this.is(a) && a === b; },
	   *   is: function(val) { return angular.isNumber(val) isFinite(val) && val % 1 === 0; },
	   *   pattern: /\d+/
	   * }
	   * </pre>
	   *
	   * @property {RegExp} pattern The regular expression pattern used to match values of this type when
	   *           coming from a substring of a URL.
	   *
	   * @returns {Object}  Returns a new `Type` object.
	   */
	  function Type(config) {
	    extend(this, config);
	  }

	  /**
	   * @ngdoc function
	   * @name ui.router.util.type:Type#is
	   * @methodOf ui.router.util.type:Type
	   *
	   * @description
	   * Detects whether a value is of a particular type. Accepts a native (decoded) value
	   * and determines whether it matches the current `Type` object.
	   *
	   * @param {*} val  The value to check.
	   * @param {string} key  Optional. If the type check is happening in the context of a specific
	   *        {@link ui.router.util.type:UrlMatcher `UrlMatcher`} object, this is the name of the
	   *        parameter in which `val` is stored. Can be used for meta-programming of `Type` objects.
	   * @returns {Boolean}  Returns `true` if the value matches the type, otherwise `false`.
	   */
	  Type.prototype.is = function (val, key) {
	    return true;
	  };

	  /**
	   * @ngdoc function
	   * @name ui.router.util.type:Type#encode
	   * @methodOf ui.router.util.type:Type
	   *
	   * @description
	   * Encodes a custom/native type value to a string that can be embedded in a URL. Note that the
	   * return value does *not* need to be URL-safe (i.e. passed through `encodeURIComponent()`), it
	   * only needs to be a representation of `val` that has been coerced to a string.
	   *
	   * @param {*} val  The value to encode.
	   * @param {string} key  The name of the parameter in which `val` is stored. Can be used for
	   *        meta-programming of `Type` objects.
	   * @returns {string}  Returns a string representation of `val` that can be encoded in a URL.
	   */
	  Type.prototype.encode = function (val, key) {
	    return val;
	  };

	  /**
	   * @ngdoc function
	   * @name ui.router.util.type:Type#decode
	   * @methodOf ui.router.util.type:Type
	   *
	   * @description
	   * Converts a parameter value (from URL string or transition param) to a custom/native value.
	   *
	   * @param {string} val  The URL parameter value to decode.
	   * @param {string} key  The name of the parameter in which `val` is stored. Can be used for
	   *        meta-programming of `Type` objects.
	   * @returns {*}  Returns a custom representation of the URL parameter value.
	   */
	  Type.prototype.decode = function (val, key) {
	    return val;
	  };

	  /**
	   * @ngdoc function
	   * @name ui.router.util.type:Type#equals
	   * @methodOf ui.router.util.type:Type
	   *
	   * @description
	   * Determines whether two decoded values are equivalent.
	   *
	   * @param {*} a  A value to compare against.
	   * @param {*} b  A value to compare against.
	   * @returns {Boolean}  Returns `true` if the values are equivalent/equal, otherwise `false`.
	   */
	  Type.prototype.equals = function (a, b) {
	    return a == b;
	  };

	  Type.prototype.$subPattern = function () {
	    var sub = this.pattern.toString();
	    return sub.substr(1, sub.length - 2);
	  };

	  Type.prototype.pattern = /.*/;

	  Type.prototype.toString = function () {
	    return "{Type:" + this.name + "}";
	  };

	  /** Given an encoded string, or a decoded object, returns a decoded object */
	  Type.prototype.$normalize = function (val) {
	    return this.is(val) ? val : this.decode(val);
	  };

	  /*
	   * Wraps an existing custom Type as an array of Type, depending on 'mode'.
	   * e.g.:
	   * - urlmatcher pattern "/path?{queryParam[]:int}"
	   * - url: "/path?queryParam=1&queryParam=2
	   * - $stateParams.queryParam will be [1, 2]
	   * if `mode` is "auto", then
	   * - url: "/path?queryParam=1 will create $stateParams.queryParam: 1
	   * - url: "/path?queryParam=1&queryParam=2 will create $stateParams.queryParam: [1, 2]
	   */
	  Type.prototype.$asArray = function (mode, isSearch) {
	    if (!mode) return this;
	    if (mode === "auto" && !isSearch) throw new Error("'auto' array mode is for query parameters only");

	    function ArrayType(type, mode) {
	      function bindTo(type, callbackName) {
	        return function () {
	          return type[callbackName].apply(type, arguments);
	        };
	      }

	      // Wrap non-array value as array
	      function arrayWrap(val) {
	        return isArray(val) ? val : isDefined(val) ? [val] : [];
	      }
	      // Unwrap array value for "auto" mode. Return undefined for empty array.
	      function arrayUnwrap(val) {
	        switch (val.length) {
	          case 0:
	            return undefined;
	          case 1:
	            return mode === "auto" ? val[0] : val;
	          default:
	            return val;
	        }
	      }
	      function falsey(val) {
	        return !val;
	      }

	      // Wraps type (.is/.encode/.decode) functions to operate on each value of an array
	      function arrayHandler(callback, allTruthyMode) {
	        return function handleArray(val) {
	          if (isArray(val) && val.length === 0) return val;
	          val = arrayWrap(val);
	          var result = map(val, callback);
	          if (allTruthyMode === true) return filter(result, falsey).length === 0;
	          return arrayUnwrap(result);
	        };
	      }

	      // Wraps type (.equals) functions to operate on each value of an array
	      function arrayEqualsHandler(callback) {
	        return function handleArray(val1, val2) {
	          var left = arrayWrap(val1),
	              right = arrayWrap(val2);
	          if (left.length !== right.length) return false;
	          for (var i = 0; i < left.length; i++) {
	            if (!callback(left[i], right[i])) return false;
	          }
	          return true;
	        };
	      }

	      this.encode = arrayHandler(bindTo(type, 'encode'));
	      this.decode = arrayHandler(bindTo(type, 'decode'));
	      this.is = arrayHandler(bindTo(type, 'is'), true);
	      this.equals = arrayEqualsHandler(bindTo(type, 'equals'));
	      this.pattern = type.pattern;
	      this.$normalize = arrayHandler(bindTo(type, '$normalize'));
	      this.name = type.name;
	      this.$arrayMode = mode;
	    }

	    return new ArrayType(this, mode);
	  };

	  /**
	   * @ngdoc object
	   * @name ui.router.util.$urlMatcherFactory
	   *
	   * @description
	   * Factory for {@link ui.router.util.type:UrlMatcher `UrlMatcher`} instances. The factory
	   * is also available to providers under the name `$urlMatcherFactoryProvider`.
	   */
	  function $UrlMatcherFactory() {
	    $$UMFP = this;

	    var isCaseInsensitive = false,
	        isStrictMode = true,
	        defaultSquashPolicy = false;

	    // Use tildes to pre-encode slashes.
	    // If the slashes are simply URLEncoded, the browser can choose to pre-decode them,
	    // and bidirectional encoding/decoding fails.
	    // Tilde was chosen because it's not a RFC 3986 section 2.2 Reserved Character
	    function valToString(val) {
	      return val != null ? val.toString().replace(/(~|\/)/g, function (m) {
	        return { '~': '~~', '/': '~2F' }[m];
	      }) : val;
	    }
	    function valFromString(val) {
	      return val != null ? val.toString().replace(/(~~|~2F)/g, function (m) {
	        return { '~~': '~', '~2F': '/' }[m];
	      }) : val;
	    }

	    var $types = {},
	        enqueue = true,
	        typeQueue = [],
	        injector,
	        defaultTypes = {
	      "string": {
	        encode: valToString,
	        decode: valFromString,
	        // TODO: in 1.0, make string .is() return false if value is undefined/null by default.
	        // In 0.2.x, string params are optional by default for backwards compat
	        is: function is(val) {
	          return val == null || !isDefined(val) || typeof val === "string";
	        },
	        pattern: /[^/]*/
	      },
	      "int": {
	        encode: valToString,
	        decode: function decode(val) {
	          return parseInt(val, 10);
	        },
	        is: function is(val) {
	          return isDefined(val) && this.decode(val.toString()) === val;
	        },
	        pattern: /\d+/
	      },
	      "bool": {
	        encode: function encode(val) {
	          return val ? 1 : 0;
	        },
	        decode: function decode(val) {
	          return parseInt(val, 10) !== 0;
	        },
	        is: function is(val) {
	          return val === true || val === false;
	        },
	        pattern: /0|1/
	      },
	      "date": {
	        encode: function encode(val) {
	          if (!this.is(val)) return undefined;
	          return [val.getFullYear(), ('0' + (val.getMonth() + 1)).slice(-2), ('0' + val.getDate()).slice(-2)].join("-");
	        },
	        decode: function decode(val) {
	          if (this.is(val)) return val;
	          var match = this.capture.exec(val);
	          return match ? new Date(match[1], match[2] - 1, match[3]) : undefined;
	        },
	        is: function is(val) {
	          return val instanceof Date && !isNaN(val.valueOf());
	        },
	        equals: function equals(a, b) {
	          return this.is(a) && this.is(b) && a.toISOString() === b.toISOString();
	        },
	        pattern: /[0-9]{4}-(?:0[1-9]|1[0-2])-(?:0[1-9]|[1-2][0-9]|3[0-1])/,
	        capture: /([0-9]{4})-(0[1-9]|1[0-2])-(0[1-9]|[1-2][0-9]|3[0-1])/
	      },
	      "json": {
	        encode: angular.toJson,
	        decode: angular.fromJson,
	        is: angular.isObject,
	        equals: angular.equals,
	        pattern: /[^/]*/
	      },
	      "any": { // does not encode/decode
	        encode: angular.identity,
	        decode: angular.identity,
	        equals: angular.equals,
	        pattern: /.*/
	      }
	    };

	    function getDefaultConfig() {
	      return {
	        strict: isStrictMode,
	        caseInsensitive: isCaseInsensitive
	      };
	    }

	    function isInjectable(value) {
	      return isFunction(value) || isArray(value) && isFunction(value[value.length - 1]);
	    }

	    /**
	     * [Internal] Get the default value of a parameter, which may be an injectable function.
	     */
	    $UrlMatcherFactory.$$getDefaultValue = function (config) {
	      if (!isInjectable(config.value)) return config.value;
	      if (!injector) throw new Error("Injectable functions cannot be called at configuration time");
	      return injector.invoke(config.value);
	    };

	    /**
	     * @ngdoc function
	     * @name ui.router.util.$urlMatcherFactory#caseInsensitive
	     * @methodOf ui.router.util.$urlMatcherFactory
	     *
	     * @description
	     * Defines whether URL matching should be case sensitive (the default behavior), or not.
	     *
	     * @param {boolean} value `false` to match URL in a case sensitive manner; otherwise `true`;
	     * @returns {boolean} the current value of caseInsensitive
	     */
	    this.caseInsensitive = function (value) {
	      if (isDefined(value)) isCaseInsensitive = value;
	      return isCaseInsensitive;
	    };

	    /**
	     * @ngdoc function
	     * @name ui.router.util.$urlMatcherFactory#strictMode
	     * @methodOf ui.router.util.$urlMatcherFactory
	     *
	     * @description
	     * Defines whether URLs should match trailing slashes, or not (the default behavior).
	     *
	     * @param {boolean=} value `false` to match trailing slashes in URLs, otherwise `true`.
	     * @returns {boolean} the current value of strictMode
	     */
	    this.strictMode = function (value) {
	      if (isDefined(value)) isStrictMode = value;
	      return isStrictMode;
	    };

	    /**
	     * @ngdoc function
	     * @name ui.router.util.$urlMatcherFactory#defaultSquashPolicy
	     * @methodOf ui.router.util.$urlMatcherFactory
	     *
	     * @description
	     * Sets the default behavior when generating or matching URLs with default parameter values.
	     *
	     * @param {string} value A string that defines the default parameter URL squashing behavior.
	     *    `nosquash`: When generating an href with a default parameter value, do not squash the parameter value from the URL
	     *    `slash`: When generating an href with a default parameter value, squash (remove) the parameter value, and, if the
	     *             parameter is surrounded by slashes, squash (remove) one slash from the URL
	     *    any other string, e.g. "~": When generating an href with a default parameter value, squash (remove)
	     *             the parameter value from the URL and replace it with this string.
	     */
	    this.defaultSquashPolicy = function (value) {
	      if (!isDefined(value)) return defaultSquashPolicy;
	      if (value !== true && value !== false && !isString(value)) throw new Error("Invalid squash policy: " + value + ". Valid policies: false, true, arbitrary-string");
	      defaultSquashPolicy = value;
	      return value;
	    };

	    /**
	     * @ngdoc function
	     * @name ui.router.util.$urlMatcherFactory#compile
	     * @methodOf ui.router.util.$urlMatcherFactory
	     *
	     * @description
	     * Creates a {@link ui.router.util.type:UrlMatcher `UrlMatcher`} for the specified pattern.
	     *
	     * @param {string} pattern  The URL pattern.
	     * @param {Object} config  The config object hash.
	     * @returns {UrlMatcher}  The UrlMatcher.
	     */
	    this.compile = function (pattern, config) {
	      return new UrlMatcher(pattern, extend(getDefaultConfig(), config));
	    };

	    /**
	     * @ngdoc function
	     * @name ui.router.util.$urlMatcherFactory#isMatcher
	     * @methodOf ui.router.util.$urlMatcherFactory
	     *
	     * @description
	     * Returns true if the specified object is a `UrlMatcher`, or false otherwise.
	     *
	     * @param {Object} object  The object to perform the type check against.
	     * @returns {Boolean}  Returns `true` if the object matches the `UrlMatcher` interface, by
	     *          implementing all the same methods.
	     */
	    this.isMatcher = function (o) {
	      if (!isObject(o)) return false;
	      var result = true;

	      forEach(UrlMatcher.prototype, function (val, name) {
	        if (isFunction(val)) {
	          result = result && isDefined(o[name]) && isFunction(o[name]);
	        }
	      });
	      return result;
	    };

	    /**
	     * @ngdoc function
	     * @name ui.router.util.$urlMatcherFactory#type
	     * @methodOf ui.router.util.$urlMatcherFactory
	     *
	     * @description
	     * Registers a custom {@link ui.router.util.type:Type `Type`} object that can be used to
	     * generate URLs with typed parameters.
	     *
	     * @param {string} name  The type name.
	     * @param {Object|Function} definition   The type definition. See
	     *        {@link ui.router.util.type:Type `Type`} for information on the values accepted.
	     * @param {Object|Function} definitionFn (optional) A function that is injected before the app
	     *        runtime starts.  The result of this function is merged into the existing `definition`.
	     *        See {@link ui.router.util.type:Type `Type`} for information on the values accepted.
	     *
	     * @returns {Object}  Returns `$urlMatcherFactoryProvider`.
	     *
	     * @example
	     * This is a simple example of a custom type that encodes and decodes items from an
	     * array, using the array index as the URL-encoded value:
	     *
	     * <pre>
	     * var list = ['John', 'Paul', 'George', 'Ringo'];
	     *
	     * $urlMatcherFactoryProvider.type('listItem', {
	     *   encode: function(item) {
	     *     // Represent the list item in the URL using its corresponding index
	     *     return list.indexOf(item);
	     *   },
	     *   decode: function(item) {
	     *     // Look up the list item by index
	     *     return list[parseInt(item, 10)];
	     *   },
	     *   is: function(item) {
	     *     // Ensure the item is valid by checking to see that it appears
	     *     // in the list
	     *     return list.indexOf(item) > -1;
	     *   }
	     * });
	     *
	     * $stateProvider.state('list', {
	     *   url: "/list/{item:listItem}",
	     *   controller: function($scope, $stateParams) {
	     *     console.log($stateParams.item);
	     *   }
	     * });
	     *
	     * // ...
	     *
	     * // Changes URL to '/list/3', logs "Ringo" to the console
	     * $state.go('list', { item: "Ringo" });
	     * </pre>
	     *
	     * This is a more complex example of a type that relies on dependency injection to
	     * interact with services, and uses the parameter name from the URL to infer how to
	     * handle encoding and decoding parameter values:
	     *
	     * <pre>
	     * // Defines a custom type that gets a value from a service,
	     * // where each service gets different types of values from
	     * // a backend API:
	     * $urlMatcherFactoryProvider.type('dbObject', {}, function(Users, Posts) {
	     *
	     *   // Matches up services to URL parameter names
	     *   var services = {
	     *     user: Users,
	     *     post: Posts
	     *   };
	     *
	     *   return {
	     *     encode: function(object) {
	     *       // Represent the object in the URL using its unique ID
	     *       return object.id;
	     *     },
	     *     decode: function(value, key) {
	     *       // Look up the object by ID, using the parameter
	     *       // name (key) to call the correct service
	     *       return services[key].findById(value);
	     *     },
	     *     is: function(object, key) {
	     *       // Check that object is a valid dbObject
	     *       return angular.isObject(object) && object.id && services[key];
	     *     }
	     *     equals: function(a, b) {
	     *       // Check the equality of decoded objects by comparing
	     *       // their unique IDs
	     *       return a.id === b.id;
	     *     }
	     *   };
	     * });
	     *
	     * // In a config() block, you can then attach URLs with
	     * // type-annotated parameters:
	     * $stateProvider.state('users', {
	     *   url: "/users",
	     *   // ...
	     * }).state('users.item', {
	     *   url: "/{user:dbObject}",
	     *   controller: function($scope, $stateParams) {
	     *     // $stateParams.user will now be an object returned from
	     *     // the Users service
	     *   },
	     *   // ...
	     * });
	     * </pre>
	     */
	    this.type = function (name, definition, definitionFn) {
	      if (!isDefined(definition)) return $types[name];
	      if ($types.hasOwnProperty(name)) throw new Error("A type named '" + name + "' has already been defined.");

	      $types[name] = new Type(extend({ name: name }, definition));
	      if (definitionFn) {
	        typeQueue.push({ name: name, def: definitionFn });
	        if (!enqueue) flushTypeQueue();
	      }
	      return this;
	    };

	    // `flushTypeQueue()` waits until `$urlMatcherFactory` is injected before invoking the queued `definitionFn`s
	    function flushTypeQueue() {
	      while (typeQueue.length) {
	        var type = typeQueue.shift();
	        if (type.pattern) throw new Error("You cannot override a type's .pattern at runtime.");
	        angular.extend($types[type.name], injector.invoke(type.def));
	      }
	    }

	    // Register default types. Store them in the prototype of $types.
	    forEach(defaultTypes, function (type, name) {
	      $types[name] = new Type(extend({ name: name }, type));
	    });
	    $types = inherit($types, {});

	    /* No need to document $get, since it returns this */
	    this.$get = ['$injector', function ($injector) {
	      injector = $injector;
	      enqueue = false;
	      flushTypeQueue();

	      forEach(defaultTypes, function (type, name) {
	        if (!$types[name]) $types[name] = new Type(type);
	      });
	      return this;
	    }];

	    this.Param = function Param(id, type, config, location) {
	      var self = this;
	      config = unwrapShorthand(config);
	      type = getType(config, type, location);
	      var arrayMode = getArrayMode();
	      type = arrayMode ? type.$asArray(arrayMode, location === "search") : type;
	      if (type.name === "string" && !arrayMode && location === "path" && config.value === undefined) config.value = ""; // for 0.2.x; in 0.3.0+ do not automatically default to ""
	      var isOptional = config.value !== undefined;
	      var squash = getSquashPolicy(config, isOptional);
	      var replace = getReplace(config, arrayMode, isOptional, squash);

	      function unwrapShorthand(config) {
	        var keys = isObject(config) ? objectKeys(config) : [];
	        var isShorthand = indexOf(keys, "value") === -1 && indexOf(keys, "type") === -1 && indexOf(keys, "squash") === -1 && indexOf(keys, "array") === -1;
	        if (isShorthand) config = { value: config };
	        config.$$fn = isInjectable(config.value) ? config.value : function () {
	          return config.value;
	        };
	        return config;
	      }

	      function getType(config, urlType, location) {
	        if (config.type && urlType) throw new Error("Param '" + id + "' has two type configurations.");
	        if (urlType) return urlType;
	        if (!config.type) return location === "config" ? $types.any : $types.string;

	        if (angular.isString(config.type)) return $types[config.type];
	        if (config.type instanceof Type) return config.type;
	        return new Type(config.type);
	      }

	      // array config: param name (param[]) overrides default settings.  explicit config overrides param name.
	      function getArrayMode() {
	        var arrayDefaults = { array: location === "search" ? "auto" : false };
	        var arrayParamNomenclature = id.match(/\[\]$/) ? { array: true } : {};
	        return extend(arrayDefaults, arrayParamNomenclature, config).array;
	      }

	      /**
	       * returns false, true, or the squash value to indicate the "default parameter url squash policy".
	       */
	      function getSquashPolicy(config, isOptional) {
	        var squash = config.squash;
	        if (!isOptional || squash === false) return false;
	        if (!isDefined(squash) || squash == null) return defaultSquashPolicy;
	        if (squash === true || isString(squash)) return squash;
	        throw new Error("Invalid squash policy: '" + squash + "'. Valid policies: false, true, or arbitrary string");
	      }

	      function getReplace(config, arrayMode, isOptional, squash) {
	        var replace,
	            configuredKeys,
	            defaultPolicy = [{ from: "", to: isOptional || arrayMode ? undefined : "" }, { from: null, to: isOptional || arrayMode ? undefined : "" }];
	        replace = isArray(config.replace) ? config.replace : [];
	        if (isString(squash)) replace.push({ from: squash, to: undefined });
	        configuredKeys = map(replace, function (item) {
	          return item.from;
	        });
	        return filter(defaultPolicy, function (item) {
	          return indexOf(configuredKeys, item.from) === -1;
	        }).concat(replace);
	      }

	      /**
	       * [Internal] Get the default value of a parameter, which may be an injectable function.
	       */
	      function $$getDefaultValue() {
	        if (!injector) throw new Error("Injectable functions cannot be called at configuration time");
	        var defaultValue = injector.invoke(config.$$fn);
	        if (defaultValue !== null && defaultValue !== undefined && !self.type.is(defaultValue)) throw new Error("Default value (" + defaultValue + ") for parameter '" + self.id + "' is not an instance of Type (" + self.type.name + ")");
	        return defaultValue;
	      }

	      /**
	       * [Internal] Gets the decoded representation of a value if the value is defined, otherwise, returns the
	       * default value, which may be the result of an injectable function.
	       */
	      function $value(value) {
	        function hasReplaceVal(val) {
	          return function (obj) {
	            return obj.from === val;
	          };
	        }
	        function $replace(value) {
	          var replacement = map(filter(self.replace, hasReplaceVal(value)), function (obj) {
	            return obj.to;
	          });
	          return replacement.length ? replacement[0] : value;
	        }
	        value = $replace(value);
	        return !isDefined(value) ? $$getDefaultValue() : self.type.$normalize(value);
	      }

	      function toString() {
	        return "{Param:" + id + " " + type + " squash: '" + squash + "' optional: " + isOptional + "}";
	      }

	      extend(this, {
	        id: id,
	        type: type,
	        location: location,
	        array: arrayMode,
	        squash: squash,
	        replace: replace,
	        isOptional: isOptional,
	        value: $value,
	        dynamic: undefined,
	        config: config,
	        toString: toString
	      });
	    };

	    function ParamSet(params) {
	      extend(this, params || {});
	    }

	    ParamSet.prototype = {
	      $$new: function $$new() {
	        return inherit(this, extend(new ParamSet(), { $$parent: this }));
	      },
	      $$keys: function $$keys() {
	        var keys = [],
	            chain = [],
	            parent = this,
	            ignore = objectKeys(ParamSet.prototype);
	        while (parent) {
	          chain.push(parent);parent = parent.$$parent;
	        }
	        chain.reverse();
	        forEach(chain, function (paramset) {
	          forEach(objectKeys(paramset), function (key) {
	            if (indexOf(keys, key) === -1 && indexOf(ignore, key) === -1) keys.push(key);
	          });
	        });
	        return keys;
	      },
	      $$values: function $$values(paramValues) {
	        var values = {},
	            self = this;
	        forEach(self.$$keys(), function (key) {
	          values[key] = self[key].value(paramValues && paramValues[key]);
	        });
	        return values;
	      },
	      $$equals: function $$equals(paramValues1, paramValues2) {
	        var equal = true,
	            self = this;
	        forEach(self.$$keys(), function (key) {
	          var left = paramValues1 && paramValues1[key],
	              right = paramValues2 && paramValues2[key];
	          if (!self[key].type.equals(left, right)) equal = false;
	        });
	        return equal;
	      },
	      $$validates: function $$validate(paramValues) {
	        var keys = this.$$keys(),
	            i,
	            param,
	            rawVal,
	            normalized,
	            encoded;
	        for (i = 0; i < keys.length; i++) {
	          param = this[keys[i]];
	          rawVal = paramValues[keys[i]];
	          if ((rawVal === undefined || rawVal === null) && param.isOptional) break; // There was no parameter value, but the param is optional
	          normalized = param.type.$normalize(rawVal);
	          if (!param.type.is(normalized)) return false; // The value was not of the correct Type, and could not be decoded to the correct Type
	          encoded = param.type.encode(normalized);
	          if (angular.isString(encoded) && !param.type.pattern.exec(encoded)) return false; // The value was of the correct type, but when encoded, did not match the Type's regexp
	        }
	        return true;
	      },
	      $$parent: undefined
	    };

	    this.ParamSet = ParamSet;
	  }

	  // Register as a provider so it's available to other providers
	  angular.module('ui.router.util').provider('$urlMatcherFactory', $UrlMatcherFactory);
	  angular.module('ui.router.util').run(['$urlMatcherFactory', function ($urlMatcherFactory) {}]);

	  /**
	   * @ngdoc object
	   * @name ui.router.router.$urlRouterProvider
	   *
	   * @requires ui.router.util.$urlMatcherFactoryProvider
	   * @requires $locationProvider
	   *
	   * @description
	   * `$urlRouterProvider` has the responsibility of watching `$location`. 
	   * When `$location` changes it runs through a list of rules one by one until a 
	   * match is found. `$urlRouterProvider` is used behind the scenes anytime you specify 
	   * a url in a state configuration. All urls are compiled into a UrlMatcher object.
	   *
	   * There are several methods on `$urlRouterProvider` that make it useful to use directly
	   * in your module config.
	   */
	  $UrlRouterProvider.$inject = ['$locationProvider', '$urlMatcherFactoryProvider'];
	  function $UrlRouterProvider($locationProvider, $urlMatcherFactory) {
	    var rules = [],
	        otherwise = null,
	        interceptDeferred = false,
	        listener;

	    // Returns a string that is a prefix of all strings matching the RegExp
	    function regExpPrefix(re) {
	      var prefix = /^\^((?:\\[^a-zA-Z0-9]|[^\\\[\]\^$*+?.()|{}]+)*)/.exec(re.source);
	      return prefix != null ? prefix[1].replace(/\\(.)/g, "$1") : '';
	    }

	    // Interpolates matched values into a String.replace()-style pattern
	    function interpolate(pattern, match) {
	      return pattern.replace(/\$(\$|\d{1,2})/, function (m, what) {
	        return match[what === '$' ? 0 : Number(what)];
	      });
	    }

	    /**
	     * @ngdoc function
	     * @name ui.router.router.$urlRouterProvider#rule
	     * @methodOf ui.router.router.$urlRouterProvider
	     *
	     * @description
	     * Defines rules that are used by `$urlRouterProvider` to find matches for
	     * specific URLs.
	     *
	     * @example
	     * <pre>
	     * var app = angular.module('app', ['ui.router.router']);
	     *
	     * app.config(function ($urlRouterProvider) {
	     *   // Here's an example of how you might allow case insensitive urls
	     *   $urlRouterProvider.rule(function ($injector, $location) {
	     *     var path = $location.path(),
	     *         normalized = path.toLowerCase();
	     *
	     *     if (path !== normalized) {
	     *       return normalized;
	     *     }
	     *   });
	     * });
	     * </pre>
	     *
	     * @param {function} rule Handler function that takes `$injector` and `$location`
	     * services as arguments. You can use them to return a valid path as a string.
	     *
	     * @return {object} `$urlRouterProvider` - `$urlRouterProvider` instance
	     */
	    this.rule = function (rule) {
	      if (!isFunction(rule)) throw new Error("'rule' must be a function");
	      rules.push(rule);
	      return this;
	    };

	    /**
	     * @ngdoc object
	     * @name ui.router.router.$urlRouterProvider#otherwise
	     * @methodOf ui.router.router.$urlRouterProvider
	     *
	     * @description
	     * Defines a path that is used when an invalid route is requested.
	     *
	     * @example
	     * <pre>
	     * var app = angular.module('app', ['ui.router.router']);
	     *
	     * app.config(function ($urlRouterProvider) {
	     *   // if the path doesn't match any of the urls you configured
	     *   // otherwise will take care of routing the user to the
	     *   // specified url
	     *   $urlRouterProvider.otherwise('/index');
	     *
	     *   // Example of using function rule as param
	     *   $urlRouterProvider.otherwise(function ($injector, $location) {
	     *     return '/a/valid/url';
	     *   });
	     * });
	     * </pre>
	     *
	     * @param {string|function} rule The url path you want to redirect to or a function 
	     * rule that returns the url path. The function version is passed two params: 
	     * `$injector` and `$location` services, and must return a url string.
	     *
	     * @return {object} `$urlRouterProvider` - `$urlRouterProvider` instance
	     */
	    this.otherwise = function (rule) {
	      if (isString(rule)) {
	        var redirect = rule;
	        rule = function rule() {
	          return redirect;
	        };
	      } else if (!isFunction(rule)) throw new Error("'rule' must be a function");
	      otherwise = rule;
	      return this;
	    };

	    function handleIfMatch($injector, handler, match) {
	      if (!match) return false;
	      var result = $injector.invoke(handler, handler, { $match: match });
	      return isDefined(result) ? result : true;
	    }

	    /**
	     * @ngdoc function
	     * @name ui.router.router.$urlRouterProvider#when
	     * @methodOf ui.router.router.$urlRouterProvider
	     *
	     * @description
	     * Registers a handler for a given url matching. 
	     * 
	     * If the handler is a string, it is
	     * treated as a redirect, and is interpolated according to the syntax of match
	     * (i.e. like `String.replace()` for `RegExp`, or like a `UrlMatcher` pattern otherwise).
	     *
	     * If the handler is a function, it is injectable. It gets invoked if `$location`
	     * matches. You have the option of inject the match object as `$match`.
	     *
	     * The handler can return
	     *
	     * - **falsy** to indicate that the rule didn't match after all, then `$urlRouter`
	     *   will continue trying to find another one that matches.
	     * - **string** which is treated as a redirect and passed to `$location.url()`
	     * - **void** or any **truthy** value tells `$urlRouter` that the url was handled.
	     *
	     * @example
	     * <pre>
	     * var app = angular.module('app', ['ui.router.router']);
	     *
	     * app.config(function ($urlRouterProvider) {
	     *   $urlRouterProvider.when($state.url, function ($match, $stateParams) {
	     *     if ($state.$current.navigable !== state ||
	     *         !equalForKeys($match, $stateParams) {
	     *      $state.transitionTo(state, $match, false);
	     *     }
	     *   });
	     * });
	     * </pre>
	     *
	     * @param {string|object} what The incoming path that you want to redirect.
	     * @param {string|function} handler The path you want to redirect your user to.
	     */
	    this.when = function (what, handler) {
	      var redirect,
	          handlerIsString = isString(handler);
	      if (isString(what)) what = $urlMatcherFactory.compile(what);

	      if (!handlerIsString && !isFunction(handler) && !isArray(handler)) throw new Error("invalid 'handler' in when()");

	      var strategies = {
	        matcher: function matcher(what, handler) {
	          if (handlerIsString) {
	            redirect = $urlMatcherFactory.compile(handler);
	            handler = ['$match', function ($match) {
	              return redirect.format($match);
	            }];
	          }
	          return extend(function ($injector, $location) {
	            return handleIfMatch($injector, handler, what.exec($location.path(), $location.search()));
	          }, {
	            prefix: isString(what.prefix) ? what.prefix : ''
	          });
	        },
	        regex: function regex(what, handler) {
	          if (what.global || what.sticky) throw new Error("when() RegExp must not be global or sticky");

	          if (handlerIsString) {
	            redirect = handler;
	            handler = ['$match', function ($match) {
	              return interpolate(redirect, $match);
	            }];
	          }
	          return extend(function ($injector, $location) {
	            return handleIfMatch($injector, handler, what.exec($location.path()));
	          }, {
	            prefix: regExpPrefix(what)
	          });
	        }
	      };

	      var check = { matcher: $urlMatcherFactory.isMatcher(what), regex: what instanceof RegExp };

	      for (var n in check) {
	        if (check[n]) return this.rule(strategies[n](what, handler));
	      }

	      throw new Error("invalid 'what' in when()");
	    };

	    /**
	     * @ngdoc function
	     * @name ui.router.router.$urlRouterProvider#deferIntercept
	     * @methodOf ui.router.router.$urlRouterProvider
	     *
	     * @description
	     * Disables (or enables) deferring location change interception.
	     *
	     * If you wish to customize the behavior of syncing the URL (for example, if you wish to
	     * defer a transition but maintain the current URL), call this method at configuration time.
	     * Then, at run time, call `$urlRouter.listen()` after you have configured your own
	     * `$locationChangeSuccess` event handler.
	     *
	     * @example
	     * <pre>
	     * var app = angular.module('app', ['ui.router.router']);
	     *
	     * app.config(function ($urlRouterProvider) {
	     *
	     *   // Prevent $urlRouter from automatically intercepting URL changes;
	     *   // this allows you to configure custom behavior in between
	     *   // location changes and route synchronization:
	     *   $urlRouterProvider.deferIntercept();
	     *
	     * }).run(function ($rootScope, $urlRouter, UserService) {
	     *
	     *   $rootScope.$on('$locationChangeSuccess', function(e) {
	     *     // UserService is an example service for managing user state
	     *     if (UserService.isLoggedIn()) return;
	     *
	     *     // Prevent $urlRouter's default handler from firing
	     *     e.preventDefault();
	     *
	     *     UserService.handleLogin().then(function() {
	     *       // Once the user has logged in, sync the current URL
	     *       // to the router:
	     *       $urlRouter.sync();
	     *     });
	     *   });
	     *
	     *   // Configures $urlRouter's listener *after* your custom listener
	     *   $urlRouter.listen();
	     * });
	     * </pre>
	     *
	     * @param {boolean} defer Indicates whether to defer location change interception. Passing
	              no parameter is equivalent to `true`.
	     */
	    this.deferIntercept = function (defer) {
	      if (defer === undefined) defer = true;
	      interceptDeferred = defer;
	    };

	    /**
	     * @ngdoc object
	     * @name ui.router.router.$urlRouter
	     *
	     * @requires $location
	     * @requires $rootScope
	     * @requires $injector
	     * @requires $browser
	     *
	     * @description
	     *
	     */
	    this.$get = $get;
	    $get.$inject = ['$location', '$rootScope', '$injector', '$browser', '$sniffer'];
	    function $get($location, $rootScope, $injector, $browser, $sniffer) {

	      var baseHref = $browser.baseHref(),
	          location = $location.url(),
	          lastPushedUrl;

	      function appendBasePath(url, isHtml5, absolute) {
	        if (baseHref === '/') return url;
	        if (isHtml5) return baseHref.slice(0, -1) + url;
	        if (absolute) return baseHref.slice(1) + url;
	        return url;
	      }

	      // TODO: Optimize groups of rules with non-empty prefix into some sort of decision tree
	      function update(evt) {
	        if (evt && evt.defaultPrevented) return;
	        var ignoreUpdate = lastPushedUrl && $location.url() === lastPushedUrl;
	        lastPushedUrl = undefined;
	        // TODO: Re-implement this in 1.0 for https://github.com/angular-ui/ui-router/issues/1573
	        //if (ignoreUpdate) return true;

	        function check(rule) {
	          var handled = rule($injector, $location);

	          if (!handled) return false;
	          if (isString(handled)) $location.replace().url(handled);
	          return true;
	        }
	        var n = rules.length,
	            i;

	        for (i = 0; i < n; i++) {
	          if (check(rules[i])) return;
	        }
	        // always check otherwise last to allow dynamic updates to the set of rules
	        if (otherwise) check(otherwise);
	      }

	      function _listen() {
	        listener = listener || $rootScope.$on('$locationChangeSuccess', update);
	        return listener;
	      }

	      if (!interceptDeferred) _listen();

	      return {
	        /**
	         * @ngdoc function
	         * @name ui.router.router.$urlRouter#sync
	         * @methodOf ui.router.router.$urlRouter
	         *
	         * @description
	         * Triggers an update; the same update that happens when the address bar url changes, aka `$locationChangeSuccess`.
	         * This method is useful when you need to use `preventDefault()` on the `$locationChangeSuccess` event,
	         * perform some custom logic (route protection, auth, config, redirection, etc) and then finally proceed
	         * with the transition by calling `$urlRouter.sync()`.
	         *
	         * @example
	         * <pre>
	         * angular.module('app', ['ui.router'])
	         *   .run(function($rootScope, $urlRouter) {
	         *     $rootScope.$on('$locationChangeSuccess', function(evt) {
	         *       // Halt state change from even starting
	         *       evt.preventDefault();
	         *       // Perform custom logic
	         *       var meetsRequirement = ...
	         *       // Continue with the update and state transition if logic allows
	         *       if (meetsRequirement) $urlRouter.sync();
	         *     });
	         * });
	         * </pre>
	         */
	        sync: function sync() {
	          update();
	        },

	        listen: function listen() {
	          return _listen();
	        },

	        update: function update(read) {
	          if (read) {
	            location = $location.url();
	            return;
	          }
	          if ($location.url() === location) return;

	          $location.url(location);
	          $location.replace();
	        },

	        push: function push(urlMatcher, params, options) {
	          var url = urlMatcher.format(params || {});

	          // Handle the special hash param, if needed
	          if (url !== null && params && params['#']) {
	            url += '#' + params['#'];
	          }

	          $location.url(url);
	          lastPushedUrl = options && options.$$avoidResync ? $location.url() : undefined;
	          if (options && options.replace) $location.replace();
	        },

	        /**
	         * @ngdoc function
	         * @name ui.router.router.$urlRouter#href
	         * @methodOf ui.router.router.$urlRouter
	         *
	         * @description
	         * A URL generation method that returns the compiled URL for a given
	         * {@link ui.router.util.type:UrlMatcher `UrlMatcher`}, populated with the provided parameters.
	         *
	         * @example
	         * <pre>
	         * $bob = $urlRouter.href(new UrlMatcher("/about/:person"), {
	         *   person: "bob"
	         * });
	         * // $bob == "/about/bob";
	         * </pre>
	         *
	         * @param {UrlMatcher} urlMatcher The `UrlMatcher` object which is used as the template of the URL to generate.
	         * @param {object=} params An object of parameter values to fill the matcher's required parameters.
	         * @param {object=} options Options object. The options are:
	         *
	         * - **`absolute`** - {boolean=false},  If true will generate an absolute url, e.g. "http://www.example.com/fullurl".
	         *
	         * @returns {string} Returns the fully compiled URL, or `null` if `params` fail validation against `urlMatcher`
	         */
	        href: function href(urlMatcher, params, options) {
	          if (!urlMatcher.validates(params)) return null;

	          var isHtml5 = $locationProvider.html5Mode();
	          if (angular.isObject(isHtml5)) {
	            isHtml5 = isHtml5.enabled;
	          }

	          isHtml5 = isHtml5 && $sniffer.history;

	          var url = urlMatcher.format(params);
	          options = options || {};

	          if (!isHtml5 && url !== null) {
	            url = "#" + $locationProvider.hashPrefix() + url;
	          }

	          // Handle special hash param, if needed
	          if (url !== null && params && params['#']) {
	            url += '#' + params['#'];
	          }

	          url = appendBasePath(url, isHtml5, options.absolute);

	          if (!options.absolute || !url) {
	            return url;
	          }

	          var slash = !isHtml5 && url ? '/' : '',
	              port = $location.port();
	          port = port === 80 || port === 443 ? '' : ':' + port;

	          return [$location.protocol(), '://', $location.host(), port, slash, url].join('');
	        }
	      };
	    }
	  }

	  angular.module('ui.router.router').provider('$urlRouter', $UrlRouterProvider);

	  /**
	   * @ngdoc object
	   * @name ui.router.state.$stateProvider
	   *
	   * @requires ui.router.router.$urlRouterProvider
	   * @requires ui.router.util.$urlMatcherFactoryProvider
	   *
	   * @description
	   * The new `$stateProvider` works similar to Angular's v1 router, but it focuses purely
	   * on state.
	   *
	   * A state corresponds to a "place" in the application in terms of the overall UI and
	   * navigation. A state describes (via the controller / template / view properties) what
	   * the UI looks like and does at that place.
	   *
	   * States often have things in common, and the primary way of factoring out these
	   * commonalities in this model is via the state hierarchy, i.e. parent/child states aka
	   * nested states.
	   *
	   * The `$stateProvider` provides interfaces to declare these states for your app.
	   */
	  $StateProvider.$inject = ['$urlRouterProvider', '$urlMatcherFactoryProvider'];
	  function $StateProvider($urlRouterProvider, $urlMatcherFactory) {

	    var root,
	        states = {},
	        $state,
	        queue = {},
	        abstractKey = 'abstract';

	    // Builds state properties from definition passed to registerState()
	    var stateBuilder = {

	      // Derive parent state from a hierarchical name only if 'parent' is not explicitly defined.
	      // state.children = [];
	      // if (parent) parent.children.push(state);
	      parent: function parent(state) {
	        if (isDefined(state.parent) && state.parent) return findState(state.parent);
	        // regex matches any valid composite state name
	        // would match "contact.list" but not "contacts"
	        var compositeName = /^(.+)\.[^.]+$/.exec(state.name);
	        return compositeName ? findState(compositeName[1]) : root;
	      },

	      // inherit 'data' from parent and override by own values (if any)
	      data: function data(state) {
	        if (state.parent && state.parent.data) {
	          state.data = state.self.data = inherit(state.parent.data, state.data);
	        }
	        return state.data;
	      },

	      // Build a URLMatcher if necessary, either via a relative or absolute URL
	      url: function url(state) {
	        var url = state.url,
	            config = { params: state.params || {} };

	        if (isString(url)) {
	          if (url.charAt(0) == '^') return $urlMatcherFactory.compile(url.substring(1), config);
	          return (state.parent.navigable || root).url.concat(url, config);
	        }

	        if (!url || $urlMatcherFactory.isMatcher(url)) return url;
	        throw new Error("Invalid url '" + url + "' in state '" + state + "'");
	      },

	      // Keep track of the closest ancestor state that has a URL (i.e. is navigable)
	      navigable: function navigable(state) {
	        return state.url ? state : state.parent ? state.parent.navigable : null;
	      },

	      // Own parameters for this state. state.url.params is already built at this point. Create and add non-url params
	      ownParams: function ownParams(state) {
	        var params = state.url && state.url.params || new $$UMFP.ParamSet();
	        forEach(state.params || {}, function (config, id) {
	          if (!params[id]) params[id] = new $$UMFP.Param(id, null, config, "config");
	        });
	        return params;
	      },

	      // Derive parameters for this state and ensure they're a super-set of parent's parameters
	      params: function params(state) {
	        var ownParams = pick(state.ownParams, state.ownParams.$$keys());
	        return state.parent && state.parent.params ? extend(state.parent.params.$$new(), ownParams) : new $$UMFP.ParamSet();
	      },

	      // If there is no explicit multi-view configuration, make one up so we don't have
	      // to handle both cases in the view directive later. Note that having an explicit
	      // 'views' property will mean the default unnamed view properties are ignored. This
	      // is also a good time to resolve view names to absolute names, so everything is a
	      // straight lookup at link time.
	      views: function views(state) {
	        var views = {};

	        forEach(isDefined(state.views) ? state.views : { '': state }, function (view, name) {
	          if (name.indexOf('@') < 0) name += '@' + state.parent.name;
	          view.resolveAs = view.resolveAs || state.resolveAs || '$resolve';
	          views[name] = view;
	        });
	        return views;
	      },

	      // Keep a full path from the root down to this state as this is needed for state activation.
	      path: function path(state) {
	        return state.parent ? state.parent.path.concat(state) : []; // exclude root from path
	      },

	      // Speed up $state.contains() as it's used a lot
	      includes: function includes(state) {
	        var includes = state.parent ? extend({}, state.parent.includes) : {};
	        includes[state.name] = true;
	        return includes;
	      },

	      $delegates: {}
	    };

	    function isRelative(stateName) {
	      return stateName.indexOf(".") === 0 || stateName.indexOf("^") === 0;
	    }

	    function findState(stateOrName, base) {
	      if (!stateOrName) return undefined;

	      var isStr = isString(stateOrName),
	          name = isStr ? stateOrName : stateOrName.name,
	          path = isRelative(name);

	      if (path) {
	        if (!base) throw new Error("No reference point given for path '" + name + "'");
	        base = findState(base);

	        var rel = name.split("."),
	            i = 0,
	            pathLength = rel.length,
	            current = base;

	        for (; i < pathLength; i++) {
	          if (rel[i] === "" && i === 0) {
	            current = base;
	            continue;
	          }
	          if (rel[i] === "^") {
	            if (!current.parent) throw new Error("Path '" + name + "' not valid for state '" + base.name + "'");
	            current = current.parent;
	            continue;
	          }
	          break;
	        }
	        rel = rel.slice(i).join(".");
	        name = current.name + (current.name && rel ? "." : "") + rel;
	      }
	      var state = states[name];

	      if (state && (isStr || !isStr && (state === stateOrName || state.self === stateOrName))) {
	        return state;
	      }
	      return undefined;
	    }

	    function queueState(parentName, state) {
	      if (!queue[parentName]) {
	        queue[parentName] = [];
	      }
	      queue[parentName].push(state);
	    }

	    function flushQueuedChildren(parentName) {
	      var queued = queue[parentName] || [];
	      while (queued.length) {
	        registerState(queued.shift());
	      }
	    }

	    function registerState(state) {
	      // Wrap a new object around the state so we can store our private details easily.
	      state = inherit(state, {
	        self: state,
	        resolve: state.resolve || {},
	        toString: function toString() {
	          return this.name;
	        }
	      });

	      var name = state.name;
	      if (!isString(name) || name.indexOf('@') >= 0) throw new Error("State must have a valid name");
	      if (states.hasOwnProperty(name)) throw new Error("State '" + name + "' is already defined");

	      // Get parent name
	      var parentName = name.indexOf('.') !== -1 ? name.substring(0, name.lastIndexOf('.')) : isString(state.parent) ? state.parent : isObject(state.parent) && isString(state.parent.name) ? state.parent.name : '';

	      // If parent is not registered yet, add state to queue and register later
	      if (parentName && !states[parentName]) {
	        return queueState(parentName, state.self);
	      }

	      for (var key in stateBuilder) {
	        if (isFunction(stateBuilder[key])) state[key] = stateBuilder[key](state, stateBuilder.$delegates[key]);
	      }
	      states[name] = state;

	      // Register the state in the global state list and with $urlRouter if necessary.
	      if (!state[abstractKey] && state.url) {
	        $urlRouterProvider.when(state.url, ['$match', '$stateParams', function ($match, $stateParams) {
	          if ($state.$current.navigable != state || !equalForKeys($match, $stateParams)) {
	            $state.transitionTo(state, $match, { inherit: true, location: false });
	          }
	        }]);
	      }

	      // Register any queued children
	      flushQueuedChildren(name);

	      return state;
	    }

	    // Checks text to see if it looks like a glob.
	    function isGlob(text) {
	      return text.indexOf('*') > -1;
	    }

	    // Returns true if glob matches current $state name.
	    function doesStateMatchGlob(glob) {
	      var globSegments = glob.split('.'),
	          segments = $state.$current.name.split('.');

	      //match single stars
	      for (var i = 0, l = globSegments.length; i < l; i++) {
	        if (globSegments[i] === '*') {
	          segments[i] = '*';
	        }
	      }

	      //match greedy starts
	      if (globSegments[0] === '**') {
	        segments = segments.slice(indexOf(segments, globSegments[1]));
	        segments.unshift('**');
	      }
	      //match greedy ends
	      if (globSegments[globSegments.length - 1] === '**') {
	        segments.splice(indexOf(segments, globSegments[globSegments.length - 2]) + 1, Number.MAX_VALUE);
	        segments.push('**');
	      }

	      if (globSegments.length != segments.length) {
	        return false;
	      }

	      return segments.join('') === globSegments.join('');
	    }

	    // Implicit root state that is always active
	    root = registerState({
	      name: '',
	      url: '^',
	      views: null,
	      'abstract': true
	    });
	    root.navigable = null;

	    /**
	     * @ngdoc function
	     * @name ui.router.state.$stateProvider#decorator
	     * @methodOf ui.router.state.$stateProvider
	     *
	     * @description
	     * Allows you to extend (carefully) or override (at your own peril) the 
	     * `stateBuilder` object used internally by `$stateProvider`. This can be used 
	     * to add custom functionality to ui-router, for example inferring templateUrl 
	     * based on the state name.
	     *
	     * When passing only a name, it returns the current (original or decorated) builder
	     * function that matches `name`.
	     *
	     * The builder functions that can be decorated are listed below. Though not all
	     * necessarily have a good use case for decoration, that is up to you to decide.
	     *
	     * In addition, users can attach custom decorators, which will generate new 
	     * properties within the state's internal definition. There is currently no clear 
	     * use-case for this beyond accessing internal states (i.e. $state.$current), 
	     * however, expect this to become increasingly relevant as we introduce additional 
	     * meta-programming features.
	     *
	     * **Warning**: Decorators should not be interdependent because the order of 
	     * execution of the builder functions in non-deterministic. Builder functions 
	     * should only be dependent on the state definition object and super function.
	     *
	     *
	     * Existing builder functions and current return values:
	     *
	     * - **parent** `{object}` - returns the parent state object.
	     * - **data** `{object}` - returns state data, including any inherited data that is not
	     *   overridden by own values (if any).
	     * - **url** `{object}` - returns a {@link ui.router.util.type:UrlMatcher UrlMatcher}
	     *   or `null`.
	     * - **navigable** `{object}` - returns closest ancestor state that has a URL (aka is 
	     *   navigable).
	     * - **params** `{object}` - returns an array of state params that are ensured to 
	     *   be a super-set of parent's params.
	     * - **views** `{object}` - returns a views object where each key is an absolute view 
	     *   name (i.e. "viewName@stateName") and each value is the config object 
	     *   (template, controller) for the view. Even when you don't use the views object 
	     *   explicitly on a state config, one is still created for you internally.
	     *   So by decorating this builder function you have access to decorating template 
	     *   and controller properties.
	     * - **ownParams** `{object}` - returns an array of params that belong to the state, 
	     *   not including any params defined by ancestor states.
	     * - **path** `{string}` - returns the full path from the root down to this state. 
	     *   Needed for state activation.
	     * - **includes** `{object}` - returns an object that includes every state that 
	     *   would pass a `$state.includes()` test.
	     *
	     * @example
	     * <pre>
	     * // Override the internal 'views' builder with a function that takes the state
	     * // definition, and a reference to the internal function being overridden:
	     * $stateProvider.decorator('views', function (state, parent) {
	     *   var result = {},
	     *       views = parent(state);
	     *
	     *   angular.forEach(views, function (config, name) {
	     *     var autoName = (state.name + '.' + name).replace('.', '/');
	     *     config.templateUrl = config.templateUrl || '/partials/' + autoName + '.html';
	     *     result[name] = config;
	     *   });
	     *   return result;
	     * });
	     *
	     * $stateProvider.state('home', {
	     *   views: {
	     *     'contact.list': { controller: 'ListController' },
	     *     'contact.item': { controller: 'ItemController' }
	     *   }
	     * });
	     *
	     * // ...
	     *
	     * $state.go('home');
	     * // Auto-populates list and item views with /partials/home/contact/list.html,
	     * // and /partials/home/contact/item.html, respectively.
	     * </pre>
	     *
	     * @param {string} name The name of the builder function to decorate. 
	     * @param {object} func A function that is responsible for decorating the original 
	     * builder function. The function receives two parameters:
	     *
	     *   - `{object}` - state - The state config object.
	     *   - `{object}` - super - The original builder function.
	     *
	     * @return {object} $stateProvider - $stateProvider instance
	     */
	    this.decorator = decorator;
	    function decorator(name, func) {
	      /*jshint validthis: true */
	      if (isString(name) && !isDefined(func)) {
	        return stateBuilder[name];
	      }
	      if (!isFunction(func) || !isString(name)) {
	        return this;
	      }
	      if (stateBuilder[name] && !stateBuilder.$delegates[name]) {
	        stateBuilder.$delegates[name] = stateBuilder[name];
	      }
	      stateBuilder[name] = func;
	      return this;
	    }

	    /**
	     * @ngdoc function
	     * @name ui.router.state.$stateProvider#state
	     * @methodOf ui.router.state.$stateProvider
	     *
	     * @description
	     * Registers a state configuration under a given state name. The stateConfig object
	     * has the following acceptable properties.
	     *
	     * @param {string} name A unique state name, e.g. "home", "about", "contacts".
	     * To create a parent/child state use a dot, e.g. "about.sales", "home.newest".
	     * @param {object} stateConfig State configuration object.
	     * @param {string|function=} stateConfig.template
	     * <a id='template'></a>
	     *   html template as a string or a function that returns
	     *   an html template as a string which should be used by the uiView directives. This property 
	     *   takes precedence over templateUrl.
	     *   
	     *   If `template` is a function, it will be called with the following parameters:
	     *
	     *   - {array.&lt;object&gt;} - state parameters extracted from the current $location.path() by
	     *     applying the current state
	     *
	     * <pre>template:
	     *   "<h1>inline template definition</h1>" +
	     *   "<div ui-view></div>"</pre>
	     * <pre>template: function(params) {
	     *       return "<h1>generated template</h1>"; }</pre>
	     * </div>
	     *
	     * @param {string|function=} stateConfig.templateUrl
	     * <a id='templateUrl'></a>
	     *
	     *   path or function that returns a path to an html
	     *   template that should be used by uiView.
	     *   
	     *   If `templateUrl` is a function, it will be called with the following parameters:
	     *
	     *   - {array.&lt;object&gt;} - state parameters extracted from the current $location.path() by 
	     *     applying the current state
	     *
	     * <pre>templateUrl: "home.html"</pre>
	     * <pre>templateUrl: function(params) {
	     *     return myTemplates[params.pageId]; }</pre>
	     *
	     * @param {function=} stateConfig.templateProvider
	     * <a id='templateProvider'></a>
	     *    Provider function that returns HTML content string.
	     * <pre> templateProvider:
	     *       function(MyTemplateService, params) {
	     *         return MyTemplateService.getTemplate(params.pageId);
	     *       }</pre>
	     *
	     * @param {string|function=} stateConfig.controller
	     * <a id='controller'></a>
	     *
	     *  Controller fn that should be associated with newly
	     *   related scope or the name of a registered controller if passed as a string.
	     *   Optionally, the ControllerAs may be declared here.
	     * <pre>controller: "MyRegisteredController"</pre>
	     * <pre>controller:
	     *     "MyRegisteredController as fooCtrl"}</pre>
	     * <pre>controller: function($scope, MyService) {
	     *     $scope.data = MyService.getData(); }</pre>
	     *
	     * @param {function=} stateConfig.controllerProvider
	     * <a id='controllerProvider'></a>
	     *
	     * Injectable provider function that returns the actual controller or string.
	     * <pre>controllerProvider:
	     *   function(MyResolveData) {
	     *     if (MyResolveData.foo)
	     *       return "FooCtrl"
	     *     else if (MyResolveData.bar)
	     *       return "BarCtrl";
	     *     else return function($scope) {
	     *       $scope.baz = "Qux";
	     *     }
	     *   }</pre>
	     *
	     * @param {string=} stateConfig.controllerAs
	     * <a id='controllerAs'></a>
	     * 
	     * A controller alias name. If present the controller will be
	     *   published to scope under the controllerAs name.
	     * <pre>controllerAs: "myCtrl"</pre>
	     *
	     * @param {string|object=} stateConfig.parent
	     * <a id='parent'></a>
	     * Optionally specifies the parent state of this state.
	     *
	     * <pre>parent: 'parentState'</pre>
	     * <pre>parent: parentState // JS variable</pre>
	     *
	     * @param {object=} stateConfig.resolve
	     * <a id='resolve'></a>
	     *
	     * An optional map&lt;string, function&gt; of dependencies which
	     *   should be injected into the controller. If any of these dependencies are promises, 
	     *   the router will wait for them all to be resolved before the controller is instantiated.
	     *   If all the promises are resolved successfully, the $stateChangeSuccess event is fired
	     *   and the values of the resolved promises are injected into any controllers that reference them.
	     *   If any  of the promises are rejected the $stateChangeError event is fired.
	     *
	     *   The map object is:
	     *   
	     *   - key - {string}: name of dependency to be injected into controller
	     *   - factory - {string|function}: If string then it is alias for service. Otherwise if function, 
	     *     it is injected and return value it treated as dependency. If result is a promise, it is 
	     *     resolved before its value is injected into controller.
	     *
	     * <pre>resolve: {
	     *     myResolve1:
	     *       function($http, $stateParams) {
	     *         return $http.get("/api/foos/"+stateParams.fooID);
	     *       }
	     *     }</pre>
	     *
	     * @param {string=} stateConfig.url
	     * <a id='url'></a>
	     *
	     *   A url fragment with optional parameters. When a state is navigated or
	     *   transitioned to, the `$stateParams` service will be populated with any 
	     *   parameters that were passed.
	     *
	     *   (See {@link ui.router.util.type:UrlMatcher UrlMatcher} `UrlMatcher`} for
	     *   more details on acceptable patterns )
	     *
	     * examples:
	     * <pre>url: "/home"
	     * url: "/users/:userid"
	     * url: "/books/{bookid:[a-zA-Z_-]}"
	     * url: "/books/{categoryid:int}"
	     * url: "/books/{publishername:string}/{categoryid:int}"
	     * url: "/messages?before&after"
	     * url: "/messages?{before:date}&{after:date}"
	     * url: "/messages/:mailboxid?{before:date}&{after:date}"
	     * </pre>
	     *
	     * @param {object=} stateConfig.views
	     * <a id='views'></a>
	     * an optional map&lt;string, object&gt; which defined multiple views, or targets views
	     * manually/explicitly.
	     *
	     * Examples:
	     *
	     * Targets three named `ui-view`s in the parent state's template
	     * <pre>views: {
	     *     header: {
	     *       controller: "headerCtrl",
	     *       templateUrl: "header.html"
	     *     }, body: {
	     *       controller: "bodyCtrl",
	     *       templateUrl: "body.html"
	     *     }, footer: {
	     *       controller: "footCtrl",
	     *       templateUrl: "footer.html"
	     *     }
	     *   }</pre>
	     *
	     * Targets named `ui-view="header"` from grandparent state 'top''s template, and named `ui-view="body" from parent state's template.
	     * <pre>views: {
	     *     'header@top': {
	     *       controller: "msgHeaderCtrl",
	     *       templateUrl: "msgHeader.html"
	     *     }, 'body': {
	     *       controller: "messagesCtrl",
	     *       templateUrl: "messages.html"
	     *     }
	     *   }</pre>
	     *
	     * @param {boolean=} [stateConfig.abstract=false]
	     * <a id='abstract'></a>
	     * An abstract state will never be directly activated,
	     *   but can provide inherited properties to its common children states.
	     * <pre>abstract: true</pre>
	     *
	     * @param {function=} stateConfig.onEnter
	     * <a id='onEnter'></a>
	     *
	     * Callback function for when a state is entered. Good way
	     *   to trigger an action or dispatch an event, such as opening a dialog.
	     * If minifying your scripts, make sure to explicitly annotate this function,
	     * because it won't be automatically annotated by your build tools.
	     *
	     * <pre>onEnter: function(MyService, $stateParams) {
	     *     MyService.foo($stateParams.myParam);
	     * }</pre>
	     *
	     * @param {function=} stateConfig.onExit
	     * <a id='onExit'></a>
	     *
	     * Callback function for when a state is exited. Good way to
	     *   trigger an action or dispatch an event, such as opening a dialog.
	     * If minifying your scripts, make sure to explicitly annotate this function,
	     * because it won't be automatically annotated by your build tools.
	     *
	     * <pre>onExit: function(MyService, $stateParams) {
	     *     MyService.cleanup($stateParams.myParam);
	     * }</pre>
	     *
	     * @param {boolean=} [stateConfig.reloadOnSearch=true]
	     * <a id='reloadOnSearch'></a>
	     *
	     * If `false`, will not retrigger the same state
	     *   just because a search/query parameter has changed (via $location.search() or $location.hash()). 
	     *   Useful for when you'd like to modify $location.search() without triggering a reload.
	     * <pre>reloadOnSearch: false</pre>
	     *
	     * @param {object=} stateConfig.data
	     * <a id='data'></a>
	     *
	     * Arbitrary data object, useful for custom configuration.  The parent state's `data` is
	     *   prototypally inherited.  In other words, adding a data property to a state adds it to
	     *   the entire subtree via prototypal inheritance.
	     *
	     * <pre>data: {
	     *     requiredRole: 'foo'
	     * } </pre>
	     *
	     * @param {object=} stateConfig.params
	     * <a id='params'></a>
	     *
	     * A map which optionally configures parameters declared in the `url`, or
	     *   defines additional non-url parameters.  For each parameter being
	     *   configured, add a configuration object keyed to the name of the parameter.
	     *
	     *   Each parameter configuration object may contain the following properties:
	     *
	     *   - ** value ** - {object|function=}: specifies the default value for this
	     *     parameter.  This implicitly sets this parameter as optional.
	     *
	     *     When UI-Router routes to a state and no value is
	     *     specified for this parameter in the URL or transition, the
	     *     default value will be used instead.  If `value` is a function,
	     *     it will be injected and invoked, and the return value used.
	     *
	     *     *Note*: `undefined` is treated as "no default value" while `null`
	     *     is treated as "the default value is `null`".
	     *
	     *     *Shorthand*: If you only need to configure the default value of the
	     *     parameter, you may use a shorthand syntax.   In the **`params`**
	     *     map, instead mapping the param name to a full parameter configuration
	     *     object, simply set map it to the default parameter value, e.g.:
	     *
	     * <pre>// define a parameter's default value
	     * params: {
	     *     param1: { value: "defaultValue" }
	     * }
	     * // shorthand default values
	     * params: {
	     *     param1: "defaultValue",
	     *     param2: "param2Default"
	     * }</pre>
	     *
	     *   - ** array ** - {boolean=}: *(default: false)* If true, the param value will be
	     *     treated as an array of values.  If you specified a Type, the value will be
	     *     treated as an array of the specified Type.  Note: query parameter values
	     *     default to a special `"auto"` mode.
	     *
	     *     For query parameters in `"auto"` mode, if multiple  values for a single parameter
	     *     are present in the URL (e.g.: `/foo?bar=1&bar=2&bar=3`) then the values
	     *     are mapped to an array (e.g.: `{ foo: [ '1', '2', '3' ] }`).  However, if
	     *     only one value is present (e.g.: `/foo?bar=1`) then the value is treated as single
	     *     value (e.g.: `{ foo: '1' }`).
	     *
	     * <pre>params: {
	     *     param1: { array: true }
	     * }</pre>
	     *
	     *   - ** squash ** - {bool|string=}: `squash` configures how a default parameter value is represented in the URL when
	     *     the current parameter value is the same as the default value. If `squash` is not set, it uses the
	     *     configured default squash policy.
	     *     (See {@link ui.router.util.$urlMatcherFactory#methods_defaultSquashPolicy `defaultSquashPolicy()`})
	     *
	     *   There are three squash settings:
	     *
	     *     - false: The parameter's default value is not squashed.  It is encoded and included in the URL
	     *     - true: The parameter's default value is omitted from the URL.  If the parameter is preceeded and followed
	     *       by slashes in the state's `url` declaration, then one of those slashes are omitted.
	     *       This can allow for cleaner looking URLs.
	     *     - `"<arbitrary string>"`: The parameter's default value is replaced with an arbitrary placeholder of  your choice.
	     *
	     * <pre>params: {
	     *     param1: {
	     *       value: "defaultId",
	     *       squash: true
	     * } }
	     * // squash "defaultValue" to "~"
	     * params: {
	     *     param1: {
	     *       value: "defaultValue",
	     *       squash: "~"
	     * } }
	     * </pre>
	     *
	     *
	     * @example
	     * <pre>
	     * // Some state name examples
	     *
	     * // stateName can be a single top-level name (must be unique).
	     * $stateProvider.state("home", {});
	     *
	     * // Or it can be a nested state name. This state is a child of the
	     * // above "home" state.
	     * $stateProvider.state("home.newest", {});
	     *
	     * // Nest states as deeply as needed.
	     * $stateProvider.state("home.newest.abc.xyz.inception", {});
	     *
	     * // state() returns $stateProvider, so you can chain state declarations.
	     * $stateProvider
	     *   .state("home", {})
	     *   .state("about", {})
	     *   .state("contacts", {});
	     * </pre>
	     *
	     */
	    this.state = state;
	    function state(name, definition) {
	      /*jshint validthis: true */
	      if (isObject(name)) definition = name;else definition.name = name;
	      registerState(definition);
	      return this;
	    }

	    /**
	     * @ngdoc object
	     * @name ui.router.state.$state
	     *
	     * @requires $rootScope
	     * @requires $q
	     * @requires ui.router.state.$view
	     * @requires $injector
	     * @requires ui.router.util.$resolve
	     * @requires ui.router.state.$stateParams
	     * @requires ui.router.router.$urlRouter
	     *
	     * @property {object} params A param object, e.g. {sectionId: section.id)}, that 
	     * you'd like to test against the current active state.
	     * @property {object} current A reference to the state's config object. However 
	     * you passed it in. Useful for accessing custom data.
	     * @property {object} transition Currently pending transition. A promise that'll 
	     * resolve or reject.
	     *
	     * @description
	     * `$state` service is responsible for representing states as well as transitioning
	     * between them. It also provides interfaces to ask for current state or even states
	     * you're coming from.
	     */
	    this.$get = $get;
	    $get.$inject = ['$rootScope', '$q', '$view', '$injector', '$resolve', '$stateParams', '$urlRouter', '$location', '$urlMatcherFactory'];
	    function $get($rootScope, $q, $view, $injector, $resolve, $stateParams, $urlRouter, $location, $urlMatcherFactory) {

	      var TransitionSupersededError = new Error('transition superseded');

	      var TransitionSuperseded = silenceUncaughtInPromise($q.reject(TransitionSupersededError));
	      var TransitionPrevented = silenceUncaughtInPromise($q.reject(new Error('transition prevented')));
	      var TransitionAborted = silenceUncaughtInPromise($q.reject(new Error('transition aborted')));
	      var TransitionFailed = silenceUncaughtInPromise($q.reject(new Error('transition failed')));

	      // Handles the case where a state which is the target of a transition is not found, and the user
	      // can optionally retry or defer the transition
	      function handleRedirect(redirect, state, params, options) {
	        /**
	         * @ngdoc event
	         * @name ui.router.state.$state#$stateNotFound
	         * @eventOf ui.router.state.$state
	         * @eventType broadcast on root scope
	         * @description
	         * Fired when a requested state **cannot be found** using the provided state name during transition.
	         * The event is broadcast allowing any handlers a single chance to deal with the error (usually by
	         * lazy-loading the unfound state). A special `unfoundState` object is passed to the listener handler,
	         * you can see its three properties in the example. You can use `event.preventDefault()` to abort the
	         * transition and the promise returned from `go` will be rejected with a `'transition aborted'` value.
	         *
	         * @param {Object} event Event object.
	         * @param {Object} unfoundState Unfound State information. Contains: `to, toParams, options` properties.
	         * @param {State} fromState Current state object.
	         * @param {Object} fromParams Current state params.
	         *
	         * @example
	         *
	         * <pre>
	         * // somewhere, assume lazy.state has not been defined
	         * $state.go("lazy.state", {a:1, b:2}, {inherit:false});
	         *
	         * // somewhere else
	         * $scope.$on('$stateNotFound',
	         * function(event, unfoundState, fromState, fromParams){
	         *     console.log(unfoundState.to); // "lazy.state"
	         *     console.log(unfoundState.toParams); // {a:1, b:2}
	         *     console.log(unfoundState.options); // {inherit:false} + default options
	         * })
	         * </pre>
	         */
	        var evt = $rootScope.$broadcast('$stateNotFound', redirect, state, params);

	        if (evt.defaultPrevented) {
	          $urlRouter.update();
	          return TransitionAborted;
	        }

	        if (!evt.retry) {
	          return null;
	        }

	        // Allow the handler to return a promise to defer state lookup retry
	        if (options.$retry) {
	          $urlRouter.update();
	          return TransitionFailed;
	        }
	        var retryTransition = $state.transition = $q.when(evt.retry);

	        retryTransition.then(function () {
	          if (retryTransition !== $state.transition) {
	            $rootScope.$broadcast('$stateChangeCancel', redirect.to, redirect.toParams, state, params);
	            return TransitionSuperseded;
	          }
	          redirect.options.$retry = true;
	          return $state.transitionTo(redirect.to, redirect.toParams, redirect.options);
	        }, function () {
	          return TransitionAborted;
	        });
	        $urlRouter.update();

	        return retryTransition;
	      }

	      root.locals = { resolve: null, globals: { $stateParams: {} } };

	      $state = {
	        params: {},
	        current: root.self,
	        $current: root,
	        transition: null
	      };

	      /**
	       * @ngdoc function
	       * @name ui.router.state.$state#reload
	       * @methodOf ui.router.state.$state
	       *
	       * @description
	       * A method that force reloads the current state. All resolves are re-resolved,
	       * controllers reinstantiated, and events re-fired.
	       *
	       * @example
	       * <pre>
	       * var app angular.module('app', ['ui.router']);
	       *
	       * app.controller('ctrl', function ($scope, $state) {
	       *   $scope.reload = function(){
	       *     $state.reload();
	       *   }
	       * });
	       * </pre>
	       *
	       * `reload()` is just an alias for:
	       * <pre>
	       * $state.transitionTo($state.current, $stateParams, { 
	       *   reload: true, inherit: false, notify: true
	       * });
	       * </pre>
	       *
	       * @param {string=|object=} state - A state name or a state object, which is the root of the resolves to be re-resolved.
	       * @example
	       * <pre>
	       * //assuming app application consists of 3 states: 'contacts', 'contacts.detail', 'contacts.detail.item' 
	       * //and current state is 'contacts.detail.item'
	       * var app angular.module('app', ['ui.router']);
	       *
	       * app.controller('ctrl', function ($scope, $state) {
	       *   $scope.reload = function(){
	       *     //will reload 'contact.detail' and 'contact.detail.item' states
	       *     $state.reload('contact.detail');
	       *   }
	       * });
	       * </pre>
	       *
	       * `reload()` is just an alias for:
	       * <pre>
	       * $state.transitionTo($state.current, $stateParams, { 
	       *   reload: true, inherit: false, notify: true
	       * });
	       * </pre>
	        * @returns {promise} A promise representing the state of the new transition. See
	       * {@link ui.router.state.$state#methods_go $state.go}.
	       */
	      $state.reload = function reload(state) {
	        return $state.transitionTo($state.current, $stateParams, { reload: state || true, inherit: false, notify: true });
	      };

	      /**
	       * @ngdoc function
	       * @name ui.router.state.$state#go
	       * @methodOf ui.router.state.$state
	       *
	       * @description
	       * Convenience method for transitioning to a new state. `$state.go` calls 
	       * `$state.transitionTo` internally but automatically sets options to 
	       * `{ location: true, inherit: true, relative: $state.$current, notify: true }`. 
	       * This allows you to easily use an absolute or relative to path and specify 
	       * only the parameters you'd like to update (while letting unspecified parameters 
	       * inherit from the currently active ancestor states).
	       *
	       * @example
	       * <pre>
	       * var app = angular.module('app', ['ui.router']);
	       *
	       * app.controller('ctrl', function ($scope, $state) {
	       *   $scope.changeState = function () {
	       *     $state.go('contact.detail');
	       *   };
	       * });
	       * </pre>
	       * <img src='../ngdoc_assets/StateGoExamples.png'/>
	       *
	       * @param {string} to Absolute state name or relative state path. Some examples:
	       *
	       * - `$state.go('contact.detail')` - will go to the `contact.detail` state
	       * - `$state.go('^')` - will go to a parent state
	       * - `$state.go('^.sibling')` - will go to a sibling state
	       * - `$state.go('.child.grandchild')` - will go to grandchild state
	       *
	       * @param {object=} params A map of the parameters that will be sent to the state, 
	       * will populate $stateParams. Any parameters that are not specified will be inherited from currently 
	       * defined parameters. Only parameters specified in the state definition can be overridden, new 
	       * parameters will be ignored. This allows, for example, going to a sibling state that shares parameters
	       * specified in a parent state. Parameter inheritance only works between common ancestor states, I.e.
	       * transitioning to a sibling will get you the parameters for all parents, transitioning to a child
	       * will get you all current parameters, etc.
	       * @param {object=} options Options object. The options are:
	       *
	       * - **`location`** - {boolean=true|string=} - If `true` will update the url in the location bar, if `false`
	       *    will not. If string, must be `"replace"`, which will update url and also replace last history record.
	       * - **`inherit`** - {boolean=true}, If `true` will inherit url parameters from current url.
	       * - **`relative`** - {object=$state.$current}, When transitioning with relative path (e.g '^'), 
	       *    defines which state to be relative from.
	       * - **`notify`** - {boolean=true}, If `true` will broadcast $stateChangeStart and $stateChangeSuccess events.
	       * - **`reload`** (v0.2.5) - {boolean=false|string|object}, If `true` will force transition even if no state or params
	       *    have changed.  It will reload the resolves and views of the current state and parent states.
	       *    If `reload` is a string (or state object), the state object is fetched (by name, or object reference); and \
	       *    the transition reloads the resolves and views for that matched state, and all its children states.
	       *
	       * @returns {promise} A promise representing the state of the new transition.
	       *
	       * Possible success values:
	       *
	       * - $state.current
	       *
	       * <br/>Possible rejection values:
	       *
	       * - 'transition superseded' - when a newer transition has been started after this one
	       * - 'transition prevented' - when `event.preventDefault()` has been called in a `$stateChangeStart` listener
	       * - 'transition aborted' - when `event.preventDefault()` has been called in a `$stateNotFound` listener or
	       *   when a `$stateNotFound` `event.retry` promise errors.
	       * - 'transition failed' - when a state has been unsuccessfully found after 2 tries.
	       * - *resolve error* - when an error has occurred with a `resolve`
	       *
	       */
	      $state.go = function go(to, params, options) {
	        return $state.transitionTo(to, params, extend({ inherit: true, relative: $state.$current }, options));
	      };

	      /**
	       * @ngdoc function
	       * @name ui.router.state.$state#transitionTo
	       * @methodOf ui.router.state.$state
	       *
	       * @description
	       * Low-level method for transitioning to a new state. {@link ui.router.state.$state#methods_go $state.go}
	       * uses `transitionTo` internally. `$state.go` is recommended in most situations.
	       *
	       * @example
	       * <pre>
	       * var app = angular.module('app', ['ui.router']);
	       *
	       * app.controller('ctrl', function ($scope, $state) {
	       *   $scope.changeState = function () {
	       *     $state.transitionTo('contact.detail');
	       *   };
	       * });
	       * </pre>
	       *
	       * @param {string} to State name.
	       * @param {object=} toParams A map of the parameters that will be sent to the state,
	       * will populate $stateParams.
	       * @param {object=} options Options object. The options are:
	       *
	       * - **`location`** - {boolean=true|string=} - If `true` will update the url in the location bar, if `false`
	       *    will not. If string, must be `"replace"`, which will update url and also replace last history record.
	       * - **`inherit`** - {boolean=false}, If `true` will inherit url parameters from current url.
	       * - **`relative`** - {object=}, When transitioning with relative path (e.g '^'), 
	       *    defines which state to be relative from.
	       * - **`notify`** - {boolean=true}, If `true` will broadcast $stateChangeStart and $stateChangeSuccess events.
	       * - **`reload`** (v0.2.5) - {boolean=false|string=|object=}, If `true` will force transition even if the state or params 
	       *    have not changed, aka a reload of the same state. It differs from reloadOnSearch because you'd
	       *    use this when you want to force a reload when *everything* is the same, including search params.
	       *    if String, then will reload the state with the name given in reload, and any children.
	       *    if Object, then a stateObj is expected, will reload the state found in stateObj, and any children.
	       *
	       * @returns {promise} A promise representing the state of the new transition. See
	       * {@link ui.router.state.$state#methods_go $state.go}.
	       */
	      $state.transitionTo = function transitionTo(to, toParams, options) {
	        toParams = toParams || {};
	        options = extend({
	          location: true, inherit: false, relative: null, notify: true, reload: false, $retry: false
	        }, options || {});

	        var from = $state.$current,
	            fromParams = $state.params,
	            fromPath = from.path;
	        var evt,
	            toState = findState(to, options.relative);

	        // Store the hash param for later (since it will be stripped out by various methods)
	        var hash = toParams['#'];

	        if (!isDefined(toState)) {
	          var redirect = { to: to, toParams: toParams, options: options };
	          var redirectResult = handleRedirect(redirect, from.self, fromParams, options);

	          if (redirectResult) {
	            return redirectResult;
	          }

	          // Always retry once if the $stateNotFound was not prevented
	          // (handles either redirect changed or state lazy-definition)
	          to = redirect.to;
	          toParams = redirect.toParams;
	          options = redirect.options;
	          toState = findState(to, options.relative);

	          if (!isDefined(toState)) {
	            if (!options.relative) throw new Error("No such state '" + to + "'");
	            throw new Error("Could not resolve '" + to + "' from state '" + options.relative + "'");
	          }
	        }
	        if (toState[abstractKey]) throw new Error("Cannot transition to abstract state '" + to + "'");
	        if (options.inherit) toParams = inheritParams($stateParams, toParams || {}, $state.$current, toState);
	        if (!toState.params.$$validates(toParams)) return TransitionFailed;

	        toParams = toState.params.$$values(toParams);
	        to = toState;

	        var toPath = to.path;

	        // Starting from the root of the path, keep all levels that haven't changed
	        var keep = 0,
	            state = toPath[keep],
	            locals = root.locals,
	            toLocals = [];

	        if (!options.reload) {
	          while (state && state === fromPath[keep] && state.ownParams.$$equals(toParams, fromParams)) {
	            locals = toLocals[keep] = state.locals;
	            keep++;
	            state = toPath[keep];
	          }
	        } else if (isString(options.reload) || isObject(options.reload)) {
	          if (isObject(options.reload) && !options.reload.name) {
	            throw new Error('Invalid reload state object');
	          }

	          var reloadState = options.reload === true ? fromPath[0] : findState(options.reload);
	          if (options.reload && !reloadState) {
	            throw new Error("No such reload state '" + (isString(options.reload) ? options.reload : options.reload.name) + "'");
	          }

	          while (state && state === fromPath[keep] && state !== reloadState) {
	            locals = toLocals[keep] = state.locals;
	            keep++;
	            state = toPath[keep];
	          }
	        }

	        // If we're going to the same state and all locals are kept, we've got nothing to do.
	        // But clear 'transition', as we still want to cancel any other pending transitions.
	        // TODO: We may not want to bump 'transition' if we're called from a location change
	        // that we've initiated ourselves, because we might accidentally abort a legitimate
	        // transition initiated from code?
	        if (shouldSkipReload(to, toParams, from, fromParams, locals, options)) {
	          if (hash) toParams['#'] = hash;
	          $state.params = toParams;
	          copy($state.params, $stateParams);
	          copy(filterByKeys(to.params.$$keys(), $stateParams), to.locals.globals.$stateParams);
	          if (options.location && to.navigable && to.navigable.url) {
	            $urlRouter.push(to.navigable.url, toParams, {
	              $$avoidResync: true, replace: options.location === 'replace'
	            });
	            $urlRouter.update(true);
	          }
	          $state.transition = null;
	          return $q.when($state.current);
	        }

	        // Filter parameters before we pass them to event handlers etc.
	        toParams = filterByKeys(to.params.$$keys(), toParams || {});

	        // Re-add the saved hash before we start returning things or broadcasting $stateChangeStart
	        if (hash) toParams['#'] = hash;

	        // Broadcast start event and cancel the transition if requested
	        if (options.notify) {
	          /**
	           * @ngdoc event
	           * @name ui.router.state.$state#$stateChangeStart
	           * @eventOf ui.router.state.$state
	           * @eventType broadcast on root scope
	           * @description
	           * Fired when the state transition **begins**. You can use `event.preventDefault()`
	           * to prevent the transition from happening and then the transition promise will be
	           * rejected with a `'transition prevented'` value.
	           *
	           * @param {Object} event Event object.
	           * @param {State} toState The state being transitioned to.
	           * @param {Object} toParams The params supplied to the `toState`.
	           * @param {State} fromState The current state, pre-transition.
	           * @param {Object} fromParams The params supplied to the `fromState`.
	           *
	           * @example
	           *
	           * <pre>
	           * $rootScope.$on('$stateChangeStart',
	           * function(event, toState, toParams, fromState, fromParams){
	           *     event.preventDefault();
	           *     // transitionTo() promise will be rejected with
	           *     // a 'transition prevented' error
	           * })
	           * </pre>
	           */
	          if ($rootScope.$broadcast('$stateChangeStart', to.self, toParams, from.self, fromParams, options).defaultPrevented) {
	            $rootScope.$broadcast('$stateChangeCancel', to.self, toParams, from.self, fromParams);
	            //Don't update and resync url if there's been a new transition started. see issue #2238, #600
	            if ($state.transition == null) $urlRouter.update();
	            return TransitionPrevented;
	          }
	        }

	        // Resolve locals for the remaining states, but don't update any global state just
	        // yet -- if anything fails to resolve the current state needs to remain untouched.
	        // We also set up an inheritance chain for the locals here. This allows the view directive
	        // to quickly look up the correct definition for each view in the current state. Even
	        // though we create the locals object itself outside resolveState(), it is initially
	        // empty and gets filled asynchronously. We need to keep track of the promise for the
	        // (fully resolved) current locals, and pass this down the chain.
	        var resolved = $q.when(locals);

	        for (var l = keep; l < toPath.length; l++, state = toPath[l]) {
	          locals = toLocals[l] = inherit(locals);
	          resolved = resolveState(state, toParams, state === to, resolved, locals, options);
	        }

	        // Once everything is resolved, we are ready to perform the actual transition
	        // and return a promise for the new state. We also keep track of what the
	        // current promise is, so that we can detect overlapping transitions and
	        // keep only the outcome of the last transition.
	        var transition = $state.transition = resolved.then(function () {
	          var l, entering, exiting;

	          if ($state.transition !== transition) {
	            $rootScope.$broadcast('$stateChangeCancel', to.self, toParams, from.self, fromParams);
	            return TransitionSuperseded;
	          }

	          // Exit 'from' states not kept
	          for (l = fromPath.length - 1; l >= keep; l--) {
	            exiting = fromPath[l];
	            if (exiting.self.onExit) {
	              $injector.invoke(exiting.self.onExit, exiting.self, exiting.locals.globals);
	            }
	            exiting.locals = null;
	          }

	          // Enter 'to' states not kept
	          for (l = keep; l < toPath.length; l++) {
	            entering = toPath[l];
	            entering.locals = toLocals[l];
	            if (entering.self.onEnter) {
	              $injector.invoke(entering.self.onEnter, entering.self, entering.locals.globals);
	            }
	          }

	          // Run it again, to catch any transitions in callbacks
	          if ($state.transition !== transition) {
	            $rootScope.$broadcast('$stateChangeCancel', to.self, toParams, from.self, fromParams);
	            return TransitionSuperseded;
	          }

	          // Update globals in $state
	          $state.$current = to;
	          $state.current = to.self;
	          $state.params = toParams;
	          copy($state.params, $stateParams);
	          $state.transition = null;

	          if (options.location && to.navigable) {
	            $urlRouter.push(to.navigable.url, to.navigable.locals.globals.$stateParams, {
	              $$avoidResync: true, replace: options.location === 'replace'
	            });
	          }

	          if (options.notify) {
	            /**
	             * @ngdoc event
	             * @name ui.router.state.$state#$stateChangeSuccess
	             * @eventOf ui.router.state.$state
	             * @eventType broadcast on root scope
	             * @description
	             * Fired once the state transition is **complete**.
	             *
	             * @param {Object} event Event object.
	             * @param {State} toState The state being transitioned to.
	             * @param {Object} toParams The params supplied to the `toState`.
	             * @param {State} fromState The current state, pre-transition.
	             * @param {Object} fromParams The params supplied to the `fromState`.
	             */
	            $rootScope.$broadcast('$stateChangeSuccess', to.self, toParams, from.self, fromParams);
	          }
	          $urlRouter.update(true);

	          return $state.current;
	        }).then(null, function (error) {
	          // propagate TransitionSuperseded error without emitting $stateChangeCancel
	          // as it was already emitted in the success handler above
	          if (error === TransitionSupersededError) return TransitionSuperseded;

	          if ($state.transition !== transition) {
	            $rootScope.$broadcast('$stateChangeCancel', to.self, toParams, from.self, fromParams);
	            return TransitionSuperseded;
	          }

	          $state.transition = null;
	          /**
	           * @ngdoc event
	           * @name ui.router.state.$state#$stateChangeError
	           * @eventOf ui.router.state.$state
	           * @eventType broadcast on root scope
	           * @description
	           * Fired when an **error occurs** during transition. It's important to note that if you
	           * have any errors in your resolve functions (javascript errors, non-existent services, etc)
	           * they will not throw traditionally. You must listen for this $stateChangeError event to
	           * catch **ALL** errors.
	           *
	           * @param {Object} event Event object.
	           * @param {State} toState The state being transitioned to.
	           * @param {Object} toParams The params supplied to the `toState`.
	           * @param {State} fromState The current state, pre-transition.
	           * @param {Object} fromParams The params supplied to the `fromState`.
	           * @param {Error} error The resolve error object.
	           */
	          evt = $rootScope.$broadcast('$stateChangeError', to.self, toParams, from.self, fromParams, error);

	          if (!evt.defaultPrevented) {
	            $urlRouter.update();
	          }

	          return $q.reject(error);
	        });

	        return transition;
	      };

	      /**
	       * @ngdoc function
	       * @name ui.router.state.$state#is
	       * @methodOf ui.router.state.$state
	       *
	       * @description
	       * Similar to {@link ui.router.state.$state#methods_includes $state.includes},
	       * but only checks for the full state name. If params is supplied then it will be
	       * tested for strict equality against the current active params object, so all params
	       * must match with none missing and no extras.
	       *
	       * @example
	       * <pre>
	       * $state.$current.name = 'contacts.details.item';
	       *
	       * // absolute name
	       * $state.is('contact.details.item'); // returns true
	       * $state.is(contactDetailItemStateObject); // returns true
	       *
	       * // relative name (. and ^), typically from a template
	       * // E.g. from the 'contacts.details' template
	       * <div ng-class="{highlighted: $state.is('.item')}">Item</div>
	       * </pre>
	       *
	       * @param {string|object} stateOrName The state name (absolute or relative) or state object you'd like to check.
	       * @param {object=} params A param object, e.g. `{sectionId: section.id}`, that you'd like
	       * to test against the current active state.
	       * @param {object=} options An options object.  The options are:
	       *
	       * - **`relative`** - {string|object} -  If `stateOrName` is a relative state name and `options.relative` is set, .is will
	       * test relative to `options.relative` state (or name).
	       *
	       * @returns {boolean} Returns true if it is the state.
	       */
	      $state.is = function is(stateOrName, params, options) {
	        options = extend({ relative: $state.$current }, options || {});
	        var state = findState(stateOrName, options.relative);

	        if (!isDefined(state)) {
	          return undefined;
	        }
	        if ($state.$current !== state) {
	          return false;
	        }
	        return params ? equalForKeys(state.params.$$values(params), $stateParams) : true;
	      };

	      /**
	       * @ngdoc function
	       * @name ui.router.state.$state#includes
	       * @methodOf ui.router.state.$state
	       *
	       * @description
	       * A method to determine if the current active state is equal to or is the child of the
	       * state stateName. If any params are passed then they will be tested for a match as well.
	       * Not all the parameters need to be passed, just the ones you'd like to test for equality.
	       *
	       * @example
	       * Partial and relative names
	       * <pre>
	       * $state.$current.name = 'contacts.details.item';
	       *
	       * // Using partial names
	       * $state.includes("contacts"); // returns true
	       * $state.includes("contacts.details"); // returns true
	       * $state.includes("contacts.details.item"); // returns true
	       * $state.includes("contacts.list"); // returns false
	       * $state.includes("about"); // returns false
	       *
	       * // Using relative names (. and ^), typically from a template
	       * // E.g. from the 'contacts.details' template
	       * <div ng-class="{highlighted: $state.includes('.item')}">Item</div>
	       * </pre>
	       *
	       * Basic globbing patterns
	       * <pre>
	       * $state.$current.name = 'contacts.details.item.url';
	       *
	       * $state.includes("*.details.*.*"); // returns true
	       * $state.includes("*.details.**"); // returns true
	       * $state.includes("**.item.**"); // returns true
	       * $state.includes("*.details.item.url"); // returns true
	       * $state.includes("*.details.*.url"); // returns true
	       * $state.includes("*.details.*"); // returns false
	       * $state.includes("item.**"); // returns false
	       * </pre>
	       *
	       * @param {string} stateOrName A partial name, relative name, or glob pattern
	       * to be searched for within the current state name.
	       * @param {object=} params A param object, e.g. `{sectionId: section.id}`,
	       * that you'd like to test against the current active state.
	       * @param {object=} options An options object.  The options are:
	       *
	       * - **`relative`** - {string|object=} -  If `stateOrName` is a relative state reference and `options.relative` is set,
	       * .includes will test relative to `options.relative` state (or name).
	       *
	       * @returns {boolean} Returns true if it does include the state
	       */
	      $state.includes = function includes(stateOrName, params, options) {
	        options = extend({ relative: $state.$current }, options || {});
	        if (isString(stateOrName) && isGlob(stateOrName)) {
	          if (!doesStateMatchGlob(stateOrName)) {
	            return false;
	          }
	          stateOrName = $state.$current.name;
	        }

	        var state = findState(stateOrName, options.relative);
	        if (!isDefined(state)) {
	          return undefined;
	        }
	        if (!isDefined($state.$current.includes[state.name])) {
	          return false;
	        }
	        if (!params) {
	          return true;
	        }

	        var keys = objectKeys(params);
	        for (var i = 0; i < keys.length; i++) {
	          var key = keys[i],
	              paramDef = state.params[key];
	          if (paramDef && !paramDef.type.equals($stateParams[key], params[key])) {
	            return false;
	          }
	        }

	        return true;
	      };

	      /**
	       * @ngdoc function
	       * @name ui.router.state.$state#href
	       * @methodOf ui.router.state.$state
	       *
	       * @description
	       * A url generation method that returns the compiled url for the given state populated with the given params.
	       *
	       * @example
	       * <pre>
	       * expect($state.href("about.person", { person: "bob" })).toEqual("/about/bob");
	       * </pre>
	       *
	       * @param {string|object} stateOrName The state name or state object you'd like to generate a url from.
	       * @param {object=} params An object of parameter values to fill the state's required parameters.
	       * @param {object=} options Options object. The options are:
	       *
	       * - **`lossy`** - {boolean=true} -  If true, and if there is no url associated with the state provided in the
	       *    first parameter, then the constructed href url will be built from the first navigable ancestor (aka
	       *    ancestor with a valid url).
	       * - **`inherit`** - {boolean=true}, If `true` will inherit url parameters from current url.
	       * - **`relative`** - {object=$state.$current}, When transitioning with relative path (e.g '^'), 
	       *    defines which state to be relative from.
	       * - **`absolute`** - {boolean=false},  If true will generate an absolute url, e.g. "http://www.example.com/fullurl".
	       * 
	       * @returns {string} compiled state url
	       */
	      $state.href = function href(stateOrName, params, options) {
	        options = extend({
	          lossy: true,
	          inherit: true,
	          absolute: false,
	          relative: $state.$current
	        }, options || {});

	        var state = findState(stateOrName, options.relative);

	        if (!isDefined(state)) return null;
	        if (options.inherit) params = inheritParams($stateParams, params || {}, $state.$current, state);

	        var nav = state && options.lossy ? state.navigable : state;

	        if (!nav || nav.url === undefined || nav.url === null) {
	          return null;
	        }
	        return $urlRouter.href(nav.url, filterByKeys(state.params.$$keys().concat('#'), params || {}), {
	          absolute: options.absolute
	        });
	      };

	      /**
	       * @ngdoc function
	       * @name ui.router.state.$state#get
	       * @methodOf ui.router.state.$state
	       *
	       * @description
	       * Returns the state configuration object for any specific state or all states.
	       *
	       * @param {string|object=} stateOrName (absolute or relative) If provided, will only get the config for
	       * the requested state. If not provided, returns an array of ALL state configs.
	       * @param {string|object=} context When stateOrName is a relative state reference, the state will be retrieved relative to context.
	       * @returns {Object|Array} State configuration object or array of all objects.
	       */
	      $state.get = function (stateOrName, context) {
	        if (arguments.length === 0) return map(objectKeys(states), function (name) {
	          return states[name].self;
	        });
	        var state = findState(stateOrName, context || $state.$current);
	        return state && state.self ? state.self : null;
	      };

	      function resolveState(state, params, paramsAreFiltered, inherited, dst, options) {
	        // Make a restricted $stateParams with only the parameters that apply to this state if
	        // necessary. In addition to being available to the controller and onEnter/onExit callbacks,
	        // we also need $stateParams to be available for any $injector calls we make during the
	        // dependency resolution process.
	        var $stateParams = paramsAreFiltered ? params : filterByKeys(state.params.$$keys(), params);
	        var locals = { $stateParams: $stateParams };

	        // Resolve 'global' dependencies for the state, i.e. those not specific to a view.
	        // We're also including $stateParams in this; that way the parameters are restricted
	        // to the set that should be visible to the state, and are independent of when we update
	        // the global $state and $stateParams values.
	        dst.resolve = $resolve.resolve(state.resolve, locals, dst.resolve, state);
	        var promises = [dst.resolve.then(function (globals) {
	          dst.globals = globals;
	        })];
	        if (inherited) promises.push(inherited);

	        function resolveViews() {
	          var viewsPromises = [];

	          // Resolve template and dependencies for all views.
	          forEach(state.views, function (view, name) {
	            var injectables = view.resolve && view.resolve !== state.resolve ? view.resolve : {};
	            injectables.$template = [function () {
	              return $view.load(name, { view: view, locals: dst.globals, params: $stateParams, notify: options.notify }) || '';
	            }];

	            viewsPromises.push($resolve.resolve(injectables, dst.globals, dst.resolve, state).then(function (result) {
	              // References to the controller (only instantiated at link time)
	              if (isFunction(view.controllerProvider) || isArray(view.controllerProvider)) {
	                var injectLocals = angular.extend({}, injectables, dst.globals);
	                result.$$controller = $injector.invoke(view.controllerProvider, null, injectLocals);
	              } else {
	                result.$$controller = view.controller;
	              }
	              // Provide access to the state itself for internal use
	              result.$$state = state;
	              result.$$controllerAs = view.controllerAs;
	              result.$$resolveAs = view.resolveAs;
	              dst[name] = result;
	            }));
	          });

	          return $q.all(viewsPromises).then(function () {
	            return dst.globals;
	          });
	        }

	        // Wait for all the promises and then return the activation object
	        return $q.all(promises).then(resolveViews).then(function (values) {
	          return dst;
	        });
	      }

	      return $state;
	    }

	    function shouldSkipReload(to, toParams, from, fromParams, locals, options) {
	      // Return true if there are no differences in non-search (path/object) params, false if there are differences
	      function nonSearchParamsEqual(fromAndToState, fromParams, toParams) {
	        // Identify whether all the parameters that differ between `fromParams` and `toParams` were search params.
	        function notSearchParam(key) {
	          return fromAndToState.params[key].location != "search";
	        }
	        var nonQueryParamKeys = fromAndToState.params.$$keys().filter(notSearchParam);
	        var nonQueryParams = pick.apply({}, [fromAndToState.params].concat(nonQueryParamKeys));
	        var nonQueryParamSet = new $$UMFP.ParamSet(nonQueryParams);
	        return nonQueryParamSet.$$equals(fromParams, toParams);
	      }

	      // If reload was not explicitly requested
	      // and we're transitioning to the same state we're already in
	      // and    the locals didn't change
	      //     or they changed in a way that doesn't merit reloading
	      //        (reloadOnParams:false, or reloadOnSearch.false and only search params changed)
	      // Then return true.
	      if (!options.reload && to === from && (locals === from.locals || to.self.reloadOnSearch === false && nonSearchParamsEqual(from, fromParams, toParams))) {
	        return true;
	      }
	    }
	  }

	  angular.module('ui.router.state').factory('$stateParams', function () {
	    return {};
	  }).constant("$state.runtime", { autoinject: true }).provider('$state', $StateProvider)
	  // Inject $state to initialize when entering runtime. #2574
	  .run(['$injector', function ($injector) {
	    // Allow tests (stateSpec.js) to turn this off by defining this constant
	    if ($injector.get("$state.runtime").autoinject) {
	      $injector.get('$state');
	    }
	  }]);

	  $ViewProvider.$inject = [];
	  function $ViewProvider() {

	    this.$get = $get;
	    /**
	     * @ngdoc object
	     * @name ui.router.state.$view
	     *
	     * @requires ui.router.util.$templateFactory
	     * @requires $rootScope
	     *
	     * @description
	     *
	     */
	    $get.$inject = ['$rootScope', '$templateFactory'];
	    function $get($rootScope, $templateFactory) {
	      return {
	        // $view.load('full.viewName', { template: ..., controller: ..., resolve: ..., async: false, params: ... })
	        /**
	         * @ngdoc function
	         * @name ui.router.state.$view#load
	         * @methodOf ui.router.state.$view
	         *
	         * @description
	         *
	         * @param {string} name name
	         * @param {object} options option object.
	         */
	        load: function load(name, options) {
	          var result,
	              defaults = {
	            template: null, controller: null, view: null, locals: null, notify: true, async: true, params: {}
	          };
	          options = extend(defaults, options);

	          if (options.view) {
	            result = $templateFactory.fromConfig(options.view, options.params, options.locals);
	          }
	          return result;
	        }
	      };
	    }
	  }

	  angular.module('ui.router.state').provider('$view', $ViewProvider);

	  /**
	   * @ngdoc object
	   * @name ui.router.state.$uiViewScrollProvider
	   *
	   * @description
	   * Provider that returns the {@link ui.router.state.$uiViewScroll} service function.
	   */
	  function $ViewScrollProvider() {

	    var useAnchorScroll = false;

	    /**
	     * @ngdoc function
	     * @name ui.router.state.$uiViewScrollProvider#useAnchorScroll
	     * @methodOf ui.router.state.$uiViewScrollProvider
	     *
	     * @description
	     * Reverts back to using the core [`$anchorScroll`](http://docs.angularjs.org/api/ng.$anchorScroll) service for
	     * scrolling based on the url anchor.
	     */
	    this.useAnchorScroll = function () {
	      useAnchorScroll = true;
	    };

	    /**
	     * @ngdoc object
	     * @name ui.router.state.$uiViewScroll
	     *
	     * @requires $anchorScroll
	     * @requires $timeout
	     *
	     * @description
	     * When called with a jqLite element, it scrolls the element into view (after a
	     * `$timeout` so the DOM has time to refresh).
	     *
	     * If you prefer to rely on `$anchorScroll` to scroll the view to the anchor,
	     * this can be enabled by calling {@link ui.router.state.$uiViewScrollProvider#methods_useAnchorScroll `$uiViewScrollProvider.useAnchorScroll()`}.
	     */
	    this.$get = ['$anchorScroll', '$timeout', function ($anchorScroll, $timeout) {
	      if (useAnchorScroll) {
	        return $anchorScroll;
	      }

	      return function ($element) {
	        return $timeout(function () {
	          $element[0].scrollIntoView();
	        }, 0, false);
	      };
	    }];
	  }

	  angular.module('ui.router.state').provider('$uiViewScroll', $ViewScrollProvider);

	  /**
	   * @ngdoc directive
	   * @name ui.router.state.directive:ui-view
	   *
	   * @requires ui.router.state.$state
	   * @requires $compile
	   * @requires $controller
	   * @requires $injector
	   * @requires ui.router.state.$uiViewScroll
	   * @requires $document
	   *
	   * @restrict ECA
	   *
	   * @description
	   * The ui-view directive tells $state where to place your templates.
	   *
	   * @param {string=} name A view name. The name should be unique amongst the other views in the
	   * same state. You can have views of the same name that live in different states.
	   *
	   * @param {string=} autoscroll It allows you to set the scroll behavior of the browser window
	   * when a view is populated. By default, $anchorScroll is overridden by ui-router's custom scroll
	   * service, {@link ui.router.state.$uiViewScroll}. This custom service let's you
	   * scroll ui-view elements into view when they are populated during a state activation.
	   *
	   * *Note: To revert back to old [`$anchorScroll`](http://docs.angularjs.org/api/ng.$anchorScroll)
	   * functionality, call `$uiViewScrollProvider.useAnchorScroll()`.*
	   *
	   * @param {string=} onload Expression to evaluate whenever the view updates.
	   *
	   * @example
	   * A view can be unnamed or named.
	   * <pre>
	   * <!-- Unnamed -->
	   * <div ui-view></div>
	   *
	   * <!-- Named -->
	   * <div ui-view="viewName"></div>
	   * </pre>
	   *
	   * You can only have one unnamed view within any template (or root html). If you are only using a
	   * single view and it is unnamed then you can populate it like so:
	   * <pre>
	   * <div ui-view></div>
	   * $stateProvider.state("home", {
	   *   template: "<h1>HELLO!</h1>"
	   * })
	   * </pre>
	   *
	   * The above is a convenient shortcut equivalent to specifying your view explicitly with the {@link ui.router.state.$stateProvider#methods_state `views`}
	   * config property, by name, in this case an empty name:
	   * <pre>
	   * $stateProvider.state("home", {
	   *   views: {
	   *     "": {
	   *       template: "<h1>HELLO!</h1>"
	   *     }
	   *   }    
	   * })
	   * </pre>
	   *
	   * But typically you'll only use the views property if you name your view or have more than one view
	   * in the same template. There's not really a compelling reason to name a view if its the only one,
	   * but you could if you wanted, like so:
	   * <pre>
	   * <div ui-view="main"></div>
	   * </pre>
	   * <pre>
	   * $stateProvider.state("home", {
	   *   views: {
	   *     "main": {
	   *       template: "<h1>HELLO!</h1>"
	   *     }
	   *   }    
	   * })
	   * </pre>
	   *
	   * Really though, you'll use views to set up multiple views:
	   * <pre>
	   * <div ui-view></div>
	   * <div ui-view="chart"></div>
	   * <div ui-view="data"></div>
	   * </pre>
	   *
	   * <pre>
	   * $stateProvider.state("home", {
	   *   views: {
	   *     "": {
	   *       template: "<h1>HELLO!</h1>"
	   *     },
	   *     "chart": {
	   *       template: "<chart_thing/>"
	   *     },
	   *     "data": {
	   *       template: "<data_thing/>"
	   *     }
	   *   }    
	   * })
	   * </pre>
	   *
	   * Examples for `autoscroll`:
	   *
	   * <pre>
	   * <!-- If autoscroll present with no expression,
	   *      then scroll ui-view into view -->
	   * <ui-view autoscroll/>
	   *
	   * <!-- If autoscroll present with valid expression,
	   *      then scroll ui-view into view if expression evaluates to true -->
	   * <ui-view autoscroll='true'/>
	   * <ui-view autoscroll='false'/>
	   * <ui-view autoscroll='scopeVariable'/>
	   * </pre>
	   *
	   * Resolve data:
	   *
	   * The resolved data from the state's `resolve` block is placed on the scope as `$resolve` (this
	   * can be customized using [[ViewDeclaration.resolveAs]]).  This can be then accessed from the template.
	   *
	   * Note that when `controllerAs` is being used, `$resolve` is set on the controller instance *after* the
	   * controller is instantiated.  The `$onInit()` hook can be used to perform initialization code which
	   * depends on `$resolve` data.
	   *
	   * Example usage of $resolve in a view template
	   * <pre>
	   * $stateProvider.state('home', {
	   *   template: '<my-component user="$resolve.user"></my-component>',
	   *   resolve: {
	   *     user: function(UserService) { return UserService.fetchUser(); }
	   *   }
	   * });
	   * </pre>
	   */
	  $ViewDirective.$inject = ['$state', '$injector', '$uiViewScroll', '$interpolate', '$q'];
	  function $ViewDirective($state, $injector, $uiViewScroll, $interpolate, $q) {

	    function getService() {
	      return $injector.has ? function (service) {
	        return $injector.has(service) ? $injector.get(service) : null;
	      } : function (service) {
	        try {
	          return $injector.get(service);
	        } catch (e) {
	          return null;
	        }
	      };
	    }

	    var service = getService(),
	        $animator = service('$animator'),
	        $animate = service('$animate');

	    // Returns a set of DOM manipulation functions based on which Angular version
	    // it should use
	    function getRenderer(attrs, scope) {
	      var statics = function statics() {
	        return {
	          enter: function enter(element, target, cb) {
	            target.after(element);cb();
	          },
	          leave: function leave(element, cb) {
	            element.remove();cb();
	          }
	        };
	      };

	      if ($animate) {
	        return {
	          enter: function enter(element, target, cb) {
	            if (angular.version.minor > 2) {
	              $animate.enter(element, null, target).then(cb);
	            } else {
	              $animate.enter(element, null, target, cb);
	            }
	          },
	          leave: function leave(element, cb) {
	            if (angular.version.minor > 2) {
	              $animate.leave(element).then(cb);
	            } else {
	              $animate.leave(element, cb);
	            }
	          }
	        };
	      }

	      if ($animator) {
	        var animate = $animator && $animator(scope, attrs);

	        return {
	          enter: function enter(element, target, cb) {
	            animate.enter(element, null, target);cb();
	          },
	          leave: function leave(element, cb) {
	            animate.leave(element);cb();
	          }
	        };
	      }

	      return statics();
	    }

	    var directive = {
	      restrict: 'ECA',
	      terminal: true,
	      priority: 400,
	      transclude: 'element',
	      compile: function compile(tElement, tAttrs, $transclude) {
	        return function (scope, $element, attrs) {
	          var previousEl,
	              currentEl,
	              currentScope,
	              latestLocals,
	              onloadExp = attrs.onload || '',
	              autoScrollExp = attrs.autoscroll,
	              renderer = getRenderer(attrs, scope),
	              inherited = $element.inheritedData('$uiView');

	          scope.$on('$stateChangeSuccess', function () {
	            updateView(false);
	          });

	          updateView(true);

	          function cleanupLastView() {
	            if (previousEl) {
	              previousEl.remove();
	              previousEl = null;
	            }

	            if (currentScope) {
	              currentScope.$destroy();
	              currentScope = null;
	            }

	            if (currentEl) {
	              var $uiViewData = currentEl.data('$uiViewAnim');
	              renderer.leave(currentEl, function () {
	                $uiViewData.$$animLeave.resolve();
	                previousEl = null;
	              });

	              previousEl = currentEl;
	              currentEl = null;
	            }
	          }

	          function updateView(firstTime) {
	            var newScope,
	                name = getUiViewName(scope, attrs, $element, $interpolate),
	                previousLocals = name && $state.$current && $state.$current.locals[name];

	            if (!firstTime && previousLocals === latestLocals) return; // nothing to do
	            newScope = scope.$new();
	            latestLocals = $state.$current.locals[name];

	            /**
	             * @ngdoc event
	             * @name ui.router.state.directive:ui-view#$viewContentLoading
	             * @eventOf ui.router.state.directive:ui-view
	             * @eventType emits on ui-view directive scope
	             * @description
	             *
	             * Fired once the view **begins loading**, *before* the DOM is rendered.
	             *
	             * @param {Object} event Event object.
	             * @param {string} viewName Name of the view.
	             */
	            newScope.$emit('$viewContentLoading', name);

	            var clone = $transclude(newScope, function (clone) {
	              var animEnter = $q.defer(),
	                  animLeave = $q.defer();
	              var viewAnimData = {
	                $animEnter: animEnter.promise,
	                $animLeave: animLeave.promise,
	                $$animLeave: animLeave
	              };

	              clone.data('$uiViewAnim', viewAnimData);
	              renderer.enter(clone, $element, function onUiViewEnter() {
	                animEnter.resolve();
	                if (currentScope) {
	                  currentScope.$emit('$viewContentAnimationEnded');
	                }

	                if (angular.isDefined(autoScrollExp) && !autoScrollExp || scope.$eval(autoScrollExp)) {
	                  $uiViewScroll(clone);
	                }
	              });
	              cleanupLastView();
	            });

	            currentEl = clone;
	            currentScope = newScope;
	            /**
	             * @ngdoc event
	             * @name ui.router.state.directive:ui-view#$viewContentLoaded
	             * @eventOf ui.router.state.directive:ui-view
	             * @eventType emits on ui-view directive scope
	             * @description
	             * Fired once the view is **loaded**, *after* the DOM is rendered.
	             *
	             * @param {Object} event Event object.
	             * @param {string} viewName Name of the view.
	             */
	            currentScope.$emit('$viewContentLoaded', name);
	            currentScope.$eval(onloadExp);
	          }
	        };
	      }
	    };

	    return directive;
	  }

	  $ViewDirectiveFill.$inject = ['$compile', '$controller', '$state', '$interpolate'];
	  function $ViewDirectiveFill($compile, $controller, $state, $interpolate) {
	    return {
	      restrict: 'ECA',
	      priority: -400,
	      compile: function compile(tElement) {
	        var initial = tElement.html();
	        return function (scope, $element, attrs) {
	          var current = $state.$current,
	              name = getUiViewName(scope, attrs, $element, $interpolate),
	              locals = current && current.locals[name];

	          if (!locals) {
	            return;
	          }

	          $element.data('$uiView', { name: name, state: locals.$$state });
	          $element.html(locals.$template ? locals.$template : initial);

	          var resolveData = angular.extend({}, locals);
	          scope[locals.$$resolveAs] = resolveData;

	          var link = $compile($element.contents());

	          if (locals.$$controller) {
	            locals.$scope = scope;
	            locals.$element = $element;
	            var controller = $controller(locals.$$controller, locals);
	            if (locals.$$controllerAs) {
	              scope[locals.$$controllerAs] = controller;
	              scope[locals.$$controllerAs][locals.$$resolveAs] = resolveData;
	            }
	            if (isFunction(controller.$onInit)) controller.$onInit();
	            $element.data('$ngControllerController', controller);
	            $element.children().data('$ngControllerController', controller);
	          }

	          link(scope);
	        };
	      }
	    };
	  }

	  /**
	   * Shared ui-view code for both directives:
	   * Given scope, element, and its attributes, return the view's name
	   */
	  function getUiViewName(scope, attrs, element, $interpolate) {
	    var name = $interpolate(attrs.uiView || attrs.name || '')(scope);
	    var uiViewCreatedBy = element.inheritedData('$uiView');
	    return name.indexOf('@') >= 0 ? name : name + '@' + (uiViewCreatedBy ? uiViewCreatedBy.state.name : '');
	  }

	  angular.module('ui.router.state').directive('uiView', $ViewDirective);
	  angular.module('ui.router.state').directive('uiView', $ViewDirectiveFill);

	  function parseStateRef(ref, current) {
	    var preparsed = ref.match(/^\s*({[^}]*})\s*$/),
	        parsed;
	    if (preparsed) ref = current + '(' + preparsed[1] + ')';
	    parsed = ref.replace(/\n/g, " ").match(/^([^(]+?)\s*(\((.*)\))?$/);
	    if (!parsed || parsed.length !== 4) throw new Error("Invalid state ref '" + ref + "'");
	    return { state: parsed[1], paramExpr: parsed[3] || null };
	  }

	  function stateContext(el) {
	    var stateData = el.parent().inheritedData('$uiView');

	    if (stateData && stateData.state && stateData.state.name) {
	      return stateData.state;
	    }
	  }

	  function getTypeInfo(el) {
	    // SVGAElement does not use the href attribute, but rather the 'xlinkHref' attribute.
	    var isSvg = Object.prototype.toString.call(el.prop('href')) === '[object SVGAnimatedString]';
	    var isForm = el[0].nodeName === "FORM";

	    return {
	      attr: isForm ? "action" : isSvg ? 'xlink:href' : 'href',
	      isAnchor: el.prop("tagName").toUpperCase() === "A",
	      clickable: !isForm
	    };
	  }

	  function clickHook(el, $state, $timeout, type, current) {
	    return function (e) {
	      var button = e.which || e.button,
	          target = current();

	      if (!(button > 1 || e.ctrlKey || e.metaKey || e.shiftKey || el.attr('target'))) {
	        // HACK: This is to allow ng-clicks to be processed before the transition is initiated:
	        var transition = $timeout(function () {
	          $state.go(target.state, target.params, target.options);
	        });
	        e.preventDefault();

	        // if the state has no URL, ignore one preventDefault from the <a> directive.
	        var ignorePreventDefaultCount = type.isAnchor && !target.href ? 1 : 0;

	        e.preventDefault = function () {
	          if (ignorePreventDefaultCount-- <= 0) $timeout.cancel(transition);
	        };
	      }
	    };
	  }

	  function defaultOpts(el, $state) {
	    return { relative: stateContext(el) || $state.$current, inherit: true };
	  }

	  /**
	   * @ngdoc directive
	   * @name ui.router.state.directive:ui-sref
	   *
	   * @requires ui.router.state.$state
	   * @requires $timeout
	   *
	   * @restrict A
	   *
	   * @description
	   * A directive that binds a link (`<a>` tag) to a state. If the state has an associated
	   * URL, the directive will automatically generate & update the `href` attribute via
	   * the {@link ui.router.state.$state#methods_href $state.href()} method. Clicking
	   * the link will trigger a state transition with optional parameters.
	   *
	   * Also middle-clicking, right-clicking, and ctrl-clicking on the link will be
	   * handled natively by the browser.
	   *
	   * You can also use relative state paths within ui-sref, just like the relative
	   * paths passed to `$state.go()`. You just need to be aware that the path is relative
	   * to the state that the link lives in, in other words the state that loaded the
	   * template containing the link.
	   *
	   * You can specify options to pass to {@link ui.router.state.$state#methods_go $state.go()}
	   * using the `ui-sref-opts` attribute. Options are restricted to `location`, `inherit`,
	   * and `reload`.
	   *
	   * @example
	   * Here's an example of how you'd use ui-sref and how it would compile. If you have the
	   * following template:
	   * <pre>
	   * <a ui-sref="home">Home</a> | <a ui-sref="about">About</a> | <a ui-sref="{page: 2}">Next page</a>
	   *
	   * <ul>
	   *     <li ng-repeat="contact in contacts">
	   *         <a ui-sref="contacts.detail({ id: contact.id })">{{ contact.name }}</a>
	   *     </li>
	   * </ul>
	   * </pre>
	   *
	   * Then the compiled html would be (assuming Html5Mode is off and current state is contacts):
	   * <pre>
	   * <a href="#/home" ui-sref="home">Home</a> | <a href="#/about" ui-sref="about">About</a> | <a href="#/contacts?page=2" ui-sref="{page: 2}">Next page</a>
	   *
	   * <ul>
	   *     <li ng-repeat="contact in contacts">
	   *         <a href="#/contacts/1" ui-sref="contacts.detail({ id: contact.id })">Joe</a>
	   *     </li>
	   *     <li ng-repeat="contact in contacts">
	   *         <a href="#/contacts/2" ui-sref="contacts.detail({ id: contact.id })">Alice</a>
	   *     </li>
	   *     <li ng-repeat="contact in contacts">
	   *         <a href="#/contacts/3" ui-sref="contacts.detail({ id: contact.id })">Bob</a>
	   *     </li>
	   * </ul>
	   *
	   * <a ui-sref="home" ui-sref-opts="{reload: true}">Home</a>
	   * </pre>
	   *
	   * @param {string} ui-sref 'stateName' can be any valid absolute or relative state
	   * @param {Object} ui-sref-opts options to pass to {@link ui.router.state.$state#methods_go $state.go()}
	   */
	  $StateRefDirective.$inject = ['$state', '$timeout'];
	  function $StateRefDirective($state, $timeout) {
	    return {
	      restrict: 'A',
	      require: ['?^uiSrefActive', '?^uiSrefActiveEq'],
	      link: function link(scope, element, attrs, uiSrefActive) {
	        var ref = parseStateRef(attrs.uiSref, $state.current.name);
	        var def = { state: ref.state, href: null, params: null };
	        var type = getTypeInfo(element);
	        var active = uiSrefActive[1] || uiSrefActive[0];
	        var unlinkInfoFn = null;
	        var hookFn;

	        def.options = extend(defaultOpts(element, $state), attrs.uiSrefOpts ? scope.$eval(attrs.uiSrefOpts) : {});

	        var update = function update(val) {
	          if (val) def.params = angular.copy(val);
	          def.href = $state.href(ref.state, def.params, def.options);

	          if (unlinkInfoFn) unlinkInfoFn();
	          if (active) unlinkInfoFn = active.$$addStateInfo(ref.state, def.params);
	          if (def.href !== null) attrs.$set(type.attr, def.href);
	        };

	        if (ref.paramExpr) {
	          scope.$watch(ref.paramExpr, function (val) {
	            if (val !== def.params) update(val);
	          }, true);
	          def.params = angular.copy(scope.$eval(ref.paramExpr));
	        }
	        update();

	        if (!type.clickable) return;
	        hookFn = clickHook(element, $state, $timeout, type, function () {
	          return def;
	        });
	        element[element.on ? 'on' : 'bind']("click", hookFn);
	        scope.$on('$destroy', function () {
	          element[element.off ? 'off' : 'unbind']("click", hookFn);
	        });
	      }
	    };
	  }

	  /**
	   * @ngdoc directive
	   * @name ui.router.state.directive:ui-state
	   *
	   * @requires ui.router.state.uiSref
	   *
	   * @restrict A
	   *
	   * @description
	   * Much like ui-sref, but will accept named $scope properties to evaluate for a state definition,
	   * params and override options.
	   *
	   * @param {string} ui-state 'stateName' can be any valid absolute or relative state
	   * @param {Object} ui-state-params params to pass to {@link ui.router.state.$state#methods_href $state.href()}
	   * @param {Object} ui-state-opts options to pass to {@link ui.router.state.$state#methods_go $state.go()}
	   */
	  $StateRefDynamicDirective.$inject = ['$state', '$timeout'];
	  function $StateRefDynamicDirective($state, $timeout) {
	    return {
	      restrict: 'A',
	      require: ['?^uiSrefActive', '?^uiSrefActiveEq'],
	      link: function link(scope, element, attrs, uiSrefActive) {
	        var type = getTypeInfo(element);
	        var active = uiSrefActive[1] || uiSrefActive[0];
	        var group = [attrs.uiState, attrs.uiStateParams || null, attrs.uiStateOpts || null];
	        var watch = '[' + group.map(function (val) {
	          return val || 'null';
	        }).join(', ') + ']';
	        var def = { state: null, params: null, options: null, href: null };
	        var unlinkInfoFn = null;
	        var hookFn;

	        function runStateRefLink(group) {
	          def.state = group[0];def.params = group[1];def.options = group[2];
	          def.href = $state.href(def.state, def.params, def.options);

	          if (unlinkInfoFn) unlinkInfoFn();
	          if (active) unlinkInfoFn = active.$$addStateInfo(def.state, def.params);
	          if (def.href) attrs.$set(type.attr, def.href);
	        }

	        scope.$watch(watch, runStateRefLink, true);
	        runStateRefLink(scope.$eval(watch));

	        if (!type.clickable) return;
	        hookFn = clickHook(element, $state, $timeout, type, function () {
	          return def;
	        });
	        element[element.on ? 'on' : 'bind']("click", hookFn);
	        scope.$on('$destroy', function () {
	          element[element.off ? 'off' : 'unbind']("click", hookFn);
	        });
	      }
	    };
	  }

	  /**
	   * @ngdoc directive
	   * @name ui.router.state.directive:ui-sref-active
	   *
	   * @requires ui.router.state.$state
	   * @requires ui.router.state.$stateParams
	   * @requires $interpolate
	   *
	   * @restrict A
	   *
	   * @description
	   * A directive working alongside ui-sref to add classes to an element when the
	   * related ui-sref directive's state is active, and removing them when it is inactive.
	   * The primary use-case is to simplify the special appearance of navigation menus
	   * relying on `ui-sref`, by having the "active" state's menu button appear different,
	   * distinguishing it from the inactive menu items.
	   *
	   * ui-sref-active can live on the same element as ui-sref or on a parent element. The first
	   * ui-sref-active found at the same level or above the ui-sref will be used.
	   *
	   * Will activate when the ui-sref's target state or any child state is active. If you
	   * need to activate only when the ui-sref target state is active and *not* any of
	   * it's children, then you will use
	   * {@link ui.router.state.directive:ui-sref-active-eq ui-sref-active-eq}
	   *
	   * @example
	   * Given the following template:
	   * <pre>
	   * <ul>
	   *   <li ui-sref-active="active" class="item">
	   *     <a href ui-sref="app.user({user: 'bilbobaggins'})">@bilbobaggins</a>
	   *   </li>
	   * </ul>
	   * </pre>
	   *
	   *
	   * When the app state is "app.user" (or any children states), and contains the state parameter "user" with value "bilbobaggins",
	   * the resulting HTML will appear as (note the 'active' class):
	   * <pre>
	   * <ul>
	   *   <li ui-sref-active="active" class="item active">
	   *     <a ui-sref="app.user({user: 'bilbobaggins'})" href="/users/bilbobaggins">@bilbobaggins</a>
	   *   </li>
	   * </ul>
	   * </pre>
	   *
	   * The class name is interpolated **once** during the directives link time (any further changes to the
	   * interpolated value are ignored).
	   *
	   * Multiple classes may be specified in a space-separated format:
	   * <pre>
	   * <ul>
	   *   <li ui-sref-active='class1 class2 class3'>
	   *     <a ui-sref="app.user">link</a>
	   *   </li>
	   * </ul>
	   * </pre>
	   *
	   * It is also possible to pass ui-sref-active an expression that evaluates
	   * to an object hash, whose keys represent active class names and whose
	   * values represent the respective state names/globs.
	   * ui-sref-active will match if the current active state **includes** any of
	   * the specified state names/globs, even the abstract ones.
	   *
	   * @Example
	   * Given the following template, with "admin" being an abstract state:
	   * <pre>
	   * <div ui-sref-active="{'active': 'admin.*'}">
	   *   <a ui-sref-active="active" ui-sref="admin.roles">Roles</a>
	   * </div>
	   * </pre>
	   *
	   * When the current state is "admin.roles" the "active" class will be applied
	   * to both the <div> and <a> elements. It is important to note that the state
	   * names/globs passed to ui-sref-active shadow the state provided by ui-sref.
	   */

	  /**
	   * @ngdoc directive
	   * @name ui.router.state.directive:ui-sref-active-eq
	   *
	   * @requires ui.router.state.$state
	   * @requires ui.router.state.$stateParams
	   * @requires $interpolate
	   *
	   * @restrict A
	   *
	   * @description
	   * The same as {@link ui.router.state.directive:ui-sref-active ui-sref-active} but will only activate
	   * when the exact target state used in the `ui-sref` is active; no child states.
	   *
	   */
	  $StateRefActiveDirective.$inject = ['$state', '$stateParams', '$interpolate'];
	  function $StateRefActiveDirective($state, $stateParams, $interpolate) {
	    return {
	      restrict: "A",
	      controller: ['$scope', '$element', '$attrs', '$timeout', function ($scope, $element, $attrs, $timeout) {
	        var states = [],
	            activeClasses = {},
	            activeEqClass,
	            uiSrefActive;

	        // There probably isn't much point in $observing this
	        // uiSrefActive and uiSrefActiveEq share the same directive object with some
	        // slight difference in logic routing
	        activeEqClass = $interpolate($attrs.uiSrefActiveEq || '', false)($scope);

	        try {
	          uiSrefActive = $scope.$eval($attrs.uiSrefActive);
	        } catch (e) {
	          // Do nothing. uiSrefActive is not a valid expression.
	          // Fall back to using $interpolate below
	        }
	        uiSrefActive = uiSrefActive || $interpolate($attrs.uiSrefActive || '', false)($scope);
	        if (isObject(uiSrefActive)) {
	          forEach(uiSrefActive, function (stateOrName, activeClass) {
	            if (isString(stateOrName)) {
	              var ref = parseStateRef(stateOrName, $state.current.name);
	              addState(ref.state, $scope.$eval(ref.paramExpr), activeClass);
	            }
	          });
	        }

	        // Allow uiSref to communicate with uiSrefActive[Equals]
	        this.$$addStateInfo = function (newState, newParams) {
	          // we already got an explicit state provided by ui-sref-active, so we
	          // shadow the one that comes from ui-sref
	          if (isObject(uiSrefActive) && states.length > 0) {
	            return;
	          }
	          var deregister = addState(newState, newParams, uiSrefActive);
	          update();
	          return deregister;
	        };

	        $scope.$on('$stateChangeSuccess', update);

	        function addState(stateName, stateParams, activeClass) {
	          var state = $state.get(stateName, stateContext($element));
	          var stateHash = createStateHash(stateName, stateParams);

	          var stateInfo = {
	            state: state || { name: stateName },
	            params: stateParams,
	            hash: stateHash
	          };

	          states.push(stateInfo);
	          activeClasses[stateHash] = activeClass;

	          return function removeState() {
	            var idx = states.indexOf(stateInfo);
	            if (idx !== -1) states.splice(idx, 1);
	          };
	        }

	        /**
	         * @param {string} state
	         * @param {Object|string} [params]
	         * @return {string}
	         */
	        function createStateHash(state, params) {
	          if (!isString(state)) {
	            throw new Error('state should be a string');
	          }
	          if (isObject(params)) {
	            return state + toJson(params);
	          }
	          params = $scope.$eval(params);
	          if (isObject(params)) {
	            return state + toJson(params);
	          }
	          return state;
	        }

	        // Update route state
	        function update() {
	          for (var i = 0; i < states.length; i++) {
	            if (anyMatch(states[i].state, states[i].params)) {
	              addClass($element, activeClasses[states[i].hash]);
	            } else {
	              removeClass($element, activeClasses[states[i].hash]);
	            }

	            if (exactMatch(states[i].state, states[i].params)) {
	              addClass($element, activeEqClass);
	            } else {
	              removeClass($element, activeEqClass);
	            }
	          }
	        }

	        function addClass(el, className) {
	          $timeout(function () {
	            el.addClass(className);
	          });
	        }
	        function removeClass(el, className) {
	          el.removeClass(className);
	        }
	        function anyMatch(state, params) {
	          return $state.includes(state.name, params);
	        }
	        function exactMatch(state, params) {
	          return $state.is(state.name, params);
	        }

	        update();
	      }]
	    };
	  }

	  angular.module('ui.router.state').directive('uiSref', $StateRefDirective).directive('uiSrefActive', $StateRefActiveDirective).directive('uiSrefActiveEq', $StateRefActiveDirective).directive('uiState', $StateRefDynamicDirective);

	  /**
	   * @ngdoc filter
	   * @name ui.router.state.filter:isState
	   *
	   * @requires ui.router.state.$state
	   *
	   * @description
	   * Translates to {@link ui.router.state.$state#methods_is $state.is("stateName")}.
	   */
	  $IsStateFilter.$inject = ['$state'];
	  function $IsStateFilter($state) {
	    var isFilter = function isFilter(state, params) {
	      return $state.is(state, params);
	    };
	    isFilter.$stateful = true;
	    return isFilter;
	  }

	  /**
	   * @ngdoc filter
	   * @name ui.router.state.filter:includedByState
	   *
	   * @requires ui.router.state.$state
	   *
	   * @description
	   * Translates to {@link ui.router.state.$state#methods_includes $state.includes('fullOrPartialStateName')}.
	   */
	  $IncludedByStateFilter.$inject = ['$state'];
	  function $IncludedByStateFilter($state) {
	    var includesFilter = function includesFilter(state, params, options) {
	      return $state.includes(state, params, options);
	    };
	    includesFilter.$stateful = true;
	    return includesFilter;
	  }

	  angular.module('ui.router.state').filter('isState', $IsStateFilter).filter('includedByState', $IncludedByStateFilter);
	})(window, window.angular);

/***/ },
/* 4 */
/***/ function(module, exports) {

	"use strict";

	/*
	 * angular-ui-bootstrap
	 * http://angular-ui.github.io/bootstrap/

	 * Version: 2.3.1 - 2016-12-10
	 * License: MIT
	 */angular.module("ui.bootstrap", ["ui.bootstrap.tpls", "ui.bootstrap.collapse", "ui.bootstrap.tabindex", "ui.bootstrap.accordion", "ui.bootstrap.alert", "ui.bootstrap.buttons", "ui.bootstrap.carousel", "ui.bootstrap.dateparser", "ui.bootstrap.isClass", "ui.bootstrap.datepicker", "ui.bootstrap.position", "ui.bootstrap.datepickerPopup", "ui.bootstrap.debounce", "ui.bootstrap.multiMap", "ui.bootstrap.dropdown", "ui.bootstrap.stackedMap", "ui.bootstrap.modal", "ui.bootstrap.paging", "ui.bootstrap.pager", "ui.bootstrap.pagination", "ui.bootstrap.tooltip", "ui.bootstrap.popover", "ui.bootstrap.progressbar", "ui.bootstrap.rating", "ui.bootstrap.tabs", "ui.bootstrap.timepicker", "ui.bootstrap.typeahead"]);
	angular.module("ui.bootstrap.tpls", ["uib/template/accordion/accordion-group.html", "uib/template/accordion/accordion.html", "uib/template/alert/alert.html", "uib/template/carousel/carousel.html", "uib/template/carousel/slide.html", "uib/template/datepicker/datepicker.html", "uib/template/datepicker/day.html", "uib/template/datepicker/month.html", "uib/template/datepicker/year.html", "uib/template/datepickerPopup/popup.html", "uib/template/modal/window.html", "uib/template/pager/pager.html", "uib/template/pagination/pagination.html", "uib/template/tooltip/tooltip-html-popup.html", "uib/template/tooltip/tooltip-popup.html", "uib/template/tooltip/tooltip-template-popup.html", "uib/template/popover/popover-html.html", "uib/template/popover/popover-template.html", "uib/template/popover/popover.html", "uib/template/progressbar/bar.html", "uib/template/progressbar/progress.html", "uib/template/progressbar/progressbar.html", "uib/template/rating/rating.html", "uib/template/tabs/tab.html", "uib/template/tabs/tabset.html", "uib/template/timepicker/timepicker.html", "uib/template/typeahead/typeahead-match.html", "uib/template/typeahead/typeahead-popup.html"]);
	angular.module('ui.bootstrap.collapse', []).directive('uibCollapse', ['$animate', '$q', '$parse', '$injector', function ($animate, $q, $parse, $injector) {
	  var $animateCss = $injector.has('$animateCss') ? $injector.get('$animateCss') : null;
	  return {
	    link: function link(scope, element, attrs) {
	      var expandingExpr = $parse(attrs.expanding),
	          expandedExpr = $parse(attrs.expanded),
	          collapsingExpr = $parse(attrs.collapsing),
	          collapsedExpr = $parse(attrs.collapsed),
	          horizontal = false,
	          css = {},
	          cssTo = {};

	      init();

	      function init() {
	        horizontal = !!('horizontal' in attrs);
	        if (horizontal) {
	          css = {
	            width: ''
	          };
	          cssTo = { width: '0' };
	        } else {
	          css = {
	            height: ''
	          };
	          cssTo = { height: '0' };
	        }
	        if (!scope.$eval(attrs.uibCollapse)) {
	          element.addClass('in').addClass('collapse').attr('aria-expanded', true).attr('aria-hidden', false).css(css);
	        }
	      }

	      function getScrollFromElement(element) {
	        if (horizontal) {
	          return { width: element.scrollWidth + 'px' };
	        }
	        return { height: element.scrollHeight + 'px' };
	      }

	      function expand() {
	        if (element.hasClass('collapse') && element.hasClass('in')) {
	          return;
	        }

	        $q.resolve(expandingExpr(scope)).then(function () {
	          element.removeClass('collapse').addClass('collapsing').attr('aria-expanded', true).attr('aria-hidden', false);

	          if ($animateCss) {
	            $animateCss(element, {
	              addClass: 'in',
	              easing: 'ease',
	              css: {
	                overflow: 'hidden'
	              },
	              to: getScrollFromElement(element[0])
	            }).start()['finally'](expandDone);
	          } else {
	            $animate.addClass(element, 'in', {
	              css: {
	                overflow: 'hidden'
	              },
	              to: getScrollFromElement(element[0])
	            }).then(expandDone);
	          }
	        });
	      }

	      function expandDone() {
	        element.removeClass('collapsing').addClass('collapse').css(css);
	        expandedExpr(scope);
	      }

	      function collapse() {
	        if (!element.hasClass('collapse') && !element.hasClass('in')) {
	          return collapseDone();
	        }

	        $q.resolve(collapsingExpr(scope)).then(function () {
	          element
	          // IMPORTANT: The width must be set before adding "collapsing" class.
	          // Otherwise, the browser attempts to animate from width 0 (in
	          // collapsing class) to the given width here.
	          .css(getScrollFromElement(element[0]))
	          // initially all panel collapse have the collapse class, this removal
	          // prevents the animation from jumping to collapsed state
	          .removeClass('collapse').addClass('collapsing').attr('aria-expanded', false).attr('aria-hidden', true);

	          if ($animateCss) {
	            $animateCss(element, {
	              removeClass: 'in',
	              to: cssTo
	            }).start()['finally'](collapseDone);
	          } else {
	            $animate.removeClass(element, 'in', {
	              to: cssTo
	            }).then(collapseDone);
	          }
	        });
	      }

	      function collapseDone() {
	        element.css(cssTo); // Required so that collapse works when animation is disabled
	        element.removeClass('collapsing').addClass('collapse');
	        collapsedExpr(scope);
	      }

	      scope.$watch(attrs.uibCollapse, function (shouldCollapse) {
	        if (shouldCollapse) {
	          collapse();
	        } else {
	          expand();
	        }
	      });
	    }
	  };
	}]);

	angular.module('ui.bootstrap.tabindex', []).directive('uibTabindexToggle', function () {
	  return {
	    restrict: 'A',
	    link: function link(scope, elem, attrs) {
	      attrs.$observe('disabled', function (disabled) {
	        attrs.$set('tabindex', disabled ? -1 : null);
	      });
	    }
	  };
	});

	angular.module('ui.bootstrap.accordion', ['ui.bootstrap.collapse', 'ui.bootstrap.tabindex']).constant('uibAccordionConfig', {
	  closeOthers: true
	}).controller('UibAccordionController', ['$scope', '$attrs', 'uibAccordionConfig', function ($scope, $attrs, accordionConfig) {
	  // This array keeps track of the accordion groups
	  this.groups = [];

	  // Ensure that all the groups in this accordion are closed, unless close-others explicitly says not to
	  this.closeOthers = function (openGroup) {
	    var closeOthers = angular.isDefined($attrs.closeOthers) ? $scope.$eval($attrs.closeOthers) : accordionConfig.closeOthers;
	    if (closeOthers) {
	      angular.forEach(this.groups, function (group) {
	        if (group !== openGroup) {
	          group.isOpen = false;
	        }
	      });
	    }
	  };

	  // This is called from the accordion-group directive to add itself to the accordion
	  this.addGroup = function (groupScope) {
	    var that = this;
	    this.groups.push(groupScope);

	    groupScope.$on('$destroy', function (event) {
	      that.removeGroup(groupScope);
	    });
	  };

	  // This is called from the accordion-group directive when to remove itself
	  this.removeGroup = function (group) {
	    var index = this.groups.indexOf(group);
	    if (index !== -1) {
	      this.groups.splice(index, 1);
	    }
	  };
	}])

	// The accordion directive simply sets up the directive controller
	// and adds an accordion CSS class to itself element.
	.directive('uibAccordion', function () {
	  return {
	    controller: 'UibAccordionController',
	    controllerAs: 'accordion',
	    transclude: true,
	    templateUrl: function templateUrl(element, attrs) {
	      return attrs.templateUrl || 'uib/template/accordion/accordion.html';
	    }
	  };
	})

	// The accordion-group directive indicates a block of html that will expand and collapse in an accordion
	.directive('uibAccordionGroup', function () {
	  return {
	    require: '^uibAccordion', // We need this directive to be inside an accordion
	    transclude: true, // It transcludes the contents of the directive into the template
	    restrict: 'A',
	    templateUrl: function templateUrl(element, attrs) {
	      return attrs.templateUrl || 'uib/template/accordion/accordion-group.html';
	    },
	    scope: {
	      heading: '@', // Interpolate the heading attribute onto this scope
	      panelClass: '@?', // Ditto with panelClass
	      isOpen: '=?',
	      isDisabled: '=?'
	    },
	    controller: function controller() {
	      this.setHeading = function (element) {
	        this.heading = element;
	      };
	    },
	    link: function link(scope, element, attrs, accordionCtrl) {
	      element.addClass('panel');
	      accordionCtrl.addGroup(scope);

	      scope.openClass = attrs.openClass || 'panel-open';
	      scope.panelClass = attrs.panelClass || 'panel-default';
	      scope.$watch('isOpen', function (value) {
	        element.toggleClass(scope.openClass, !!value);
	        if (value) {
	          accordionCtrl.closeOthers(scope);
	        }
	      });

	      scope.toggleOpen = function ($event) {
	        if (!scope.isDisabled) {
	          if (!$event || $event.which === 32) {
	            scope.isOpen = !scope.isOpen;
	          }
	        }
	      };

	      var id = 'accordiongroup-' + scope.$id + '-' + Math.floor(Math.random() * 10000);
	      scope.headingId = id + '-tab';
	      scope.panelId = id + '-panel';
	    }
	  };
	})

	// Use accordion-heading below an accordion-group to provide a heading containing HTML
	.directive('uibAccordionHeading', function () {
	  return {
	    transclude: true, // Grab the contents to be used as the heading
	    template: '', // In effect remove this element!
	    replace: true,
	    require: '^uibAccordionGroup',
	    link: function link(scope, element, attrs, accordionGroupCtrl, transclude) {
	      // Pass the heading to the accordion-group controller
	      // so that it can be transcluded into the right place in the template
	      // [The second parameter to transclude causes the elements to be cloned so that they work in ng-repeat]
	      accordionGroupCtrl.setHeading(transclude(scope, angular.noop));
	    }
	  };
	})

	// Use in the accordion-group template to indicate where you want the heading to be transcluded
	// You must provide the property on the accordion-group controller that will hold the transcluded element
	.directive('uibAccordionTransclude', function () {
	  return {
	    require: '^uibAccordionGroup',
	    link: function link(scope, element, attrs, controller) {
	      scope.$watch(function () {
	        return controller[attrs.uibAccordionTransclude];
	      }, function (heading) {
	        if (heading) {
	          var elem = angular.element(element[0].querySelector(getHeaderSelectors()));
	          elem.html('');
	          elem.append(heading);
	        }
	      });
	    }
	  };

	  function getHeaderSelectors() {
	    return 'uib-accordion-header,' + 'data-uib-accordion-header,' + 'x-uib-accordion-header,' + 'uib\\:accordion-header,' + '[uib-accordion-header],' + '[data-uib-accordion-header],' + '[x-uib-accordion-header]';
	  }
	});

	angular.module('ui.bootstrap.alert', []).controller('UibAlertController', ['$scope', '$element', '$attrs', '$interpolate', '$timeout', function ($scope, $element, $attrs, $interpolate, $timeout) {
	  $scope.closeable = !!$attrs.close;
	  $element.addClass('alert');
	  $attrs.$set('role', 'alert');
	  if ($scope.closeable) {
	    $element.addClass('alert-dismissible');
	  }

	  var dismissOnTimeout = angular.isDefined($attrs.dismissOnTimeout) ? $interpolate($attrs.dismissOnTimeout)($scope.$parent) : null;

	  if (dismissOnTimeout) {
	    $timeout(function () {
	      $scope.close();
	    }, parseInt(dismissOnTimeout, 10));
	  }
	}]).directive('uibAlert', function () {
	  return {
	    controller: 'UibAlertController',
	    controllerAs: 'alert',
	    restrict: 'A',
	    templateUrl: function templateUrl(element, attrs) {
	      return attrs.templateUrl || 'uib/template/alert/alert.html';
	    },
	    transclude: true,
	    scope: {
	      close: '&'
	    }
	  };
	});

	angular.module('ui.bootstrap.buttons', []).constant('uibButtonConfig', {
	  activeClass: 'active',
	  toggleEvent: 'click'
	}).controller('UibButtonsController', ['uibButtonConfig', function (buttonConfig) {
	  this.activeClass = buttonConfig.activeClass || 'active';
	  this.toggleEvent = buttonConfig.toggleEvent || 'click';
	}]).directive('uibBtnRadio', ['$parse', function ($parse) {
	  return {
	    require: ['uibBtnRadio', 'ngModel'],
	    controller: 'UibButtonsController',
	    controllerAs: 'buttons',
	    link: function link(scope, element, attrs, ctrls) {
	      var buttonsCtrl = ctrls[0],
	          ngModelCtrl = ctrls[1];
	      var uncheckableExpr = $parse(attrs.uibUncheckable);

	      element.find('input').css({ display: 'none' });

	      //model -> UI
	      ngModelCtrl.$render = function () {
	        element.toggleClass(buttonsCtrl.activeClass, angular.equals(ngModelCtrl.$modelValue, scope.$eval(attrs.uibBtnRadio)));
	      };

	      //ui->model
	      element.on(buttonsCtrl.toggleEvent, function () {
	        if (attrs.disabled) {
	          return;
	        }

	        var isActive = element.hasClass(buttonsCtrl.activeClass);

	        if (!isActive || angular.isDefined(attrs.uncheckable)) {
	          scope.$apply(function () {
	            ngModelCtrl.$setViewValue(isActive ? null : scope.$eval(attrs.uibBtnRadio));
	            ngModelCtrl.$render();
	          });
	        }
	      });

	      if (attrs.uibUncheckable) {
	        scope.$watch(uncheckableExpr, function (uncheckable) {
	          attrs.$set('uncheckable', uncheckable ? '' : undefined);
	        });
	      }
	    }
	  };
	}]).directive('uibBtnCheckbox', function () {
	  return {
	    require: ['uibBtnCheckbox', 'ngModel'],
	    controller: 'UibButtonsController',
	    controllerAs: 'button',
	    link: function link(scope, element, attrs, ctrls) {
	      var buttonsCtrl = ctrls[0],
	          ngModelCtrl = ctrls[1];

	      element.find('input').css({ display: 'none' });

	      function getTrueValue() {
	        return getCheckboxValue(attrs.btnCheckboxTrue, true);
	      }

	      function getFalseValue() {
	        return getCheckboxValue(attrs.btnCheckboxFalse, false);
	      }

	      function getCheckboxValue(attribute, defaultValue) {
	        return angular.isDefined(attribute) ? scope.$eval(attribute) : defaultValue;
	      }

	      //model -> UI
	      ngModelCtrl.$render = function () {
	        element.toggleClass(buttonsCtrl.activeClass, angular.equals(ngModelCtrl.$modelValue, getTrueValue()));
	      };

	      //ui->model
	      element.on(buttonsCtrl.toggleEvent, function () {
	        if (attrs.disabled) {
	          return;
	        }

	        scope.$apply(function () {
	          ngModelCtrl.$setViewValue(element.hasClass(buttonsCtrl.activeClass) ? getFalseValue() : getTrueValue());
	          ngModelCtrl.$render();
	        });
	      });
	    }
	  };
	});

	angular.module('ui.bootstrap.carousel', []).controller('UibCarouselController', ['$scope', '$element', '$interval', '$timeout', '$animate', function ($scope, $element, $interval, $timeout, $animate) {
	  var self = this,
	      slides = self.slides = $scope.slides = [],
	      SLIDE_DIRECTION = 'uib-slideDirection',
	      currentIndex = $scope.active,
	      currentInterval,
	      isPlaying,
	      bufferedTransitions = [];

	  var destroyed = false;
	  $element.addClass('carousel');

	  self.addSlide = function (slide, element) {
	    slides.push({
	      slide: slide,
	      element: element
	    });
	    slides.sort(function (a, b) {
	      return +a.slide.index - +b.slide.index;
	    });
	    //if this is the first slide or the slide is set to active, select it
	    if (slide.index === $scope.active || slides.length === 1 && !angular.isNumber($scope.active)) {
	      if ($scope.$currentTransition) {
	        $scope.$currentTransition = null;
	      }

	      currentIndex = slide.index;
	      $scope.active = slide.index;
	      setActive(currentIndex);
	      self.select(slides[findSlideIndex(slide)]);
	      if (slides.length === 1) {
	        $scope.play();
	      }
	    }
	  };

	  self.getCurrentIndex = function () {
	    for (var i = 0; i < slides.length; i++) {
	      if (slides[i].slide.index === currentIndex) {
	        return i;
	      }
	    }
	  };

	  self.next = $scope.next = function () {
	    var newIndex = (self.getCurrentIndex() + 1) % slides.length;

	    if (newIndex === 0 && $scope.noWrap()) {
	      $scope.pause();
	      return;
	    }

	    return self.select(slides[newIndex], 'next');
	  };

	  self.prev = $scope.prev = function () {
	    var newIndex = self.getCurrentIndex() - 1 < 0 ? slides.length - 1 : self.getCurrentIndex() - 1;

	    if ($scope.noWrap() && newIndex === slides.length - 1) {
	      $scope.pause();
	      return;
	    }

	    return self.select(slides[newIndex], 'prev');
	  };

	  self.removeSlide = function (slide) {
	    var index = findSlideIndex(slide);

	    var bufferedIndex = bufferedTransitions.indexOf(slides[index]);
	    if (bufferedIndex !== -1) {
	      bufferedTransitions.splice(bufferedIndex, 1);
	    }

	    //get the index of the slide inside the carousel
	    slides.splice(index, 1);
	    if (slides.length > 0 && currentIndex === index) {
	      if (index >= slides.length) {
	        currentIndex = slides.length - 1;
	        $scope.active = currentIndex;
	        setActive(currentIndex);
	        self.select(slides[slides.length - 1]);
	      } else {
	        currentIndex = index;
	        $scope.active = currentIndex;
	        setActive(currentIndex);
	        self.select(slides[index]);
	      }
	    } else if (currentIndex > index) {
	      currentIndex--;
	      $scope.active = currentIndex;
	    }

	    //clean the active value when no more slide
	    if (slides.length === 0) {
	      currentIndex = null;
	      $scope.active = null;
	      clearBufferedTransitions();
	    }
	  };

	  /* direction: "prev" or "next" */
	  self.select = $scope.select = function (nextSlide, direction) {
	    var nextIndex = findSlideIndex(nextSlide.slide);
	    //Decide direction if it's not given
	    if (direction === undefined) {
	      direction = nextIndex > self.getCurrentIndex() ? 'next' : 'prev';
	    }
	    //Prevent this user-triggered transition from occurring if there is already one in progress
	    if (nextSlide.slide.index !== currentIndex && !$scope.$currentTransition) {
	      goNext(nextSlide.slide, nextIndex, direction);
	    } else if (nextSlide && nextSlide.slide.index !== currentIndex && $scope.$currentTransition) {
	      bufferedTransitions.push(slides[nextIndex]);
	    }
	  };

	  /* Allow outside people to call indexOf on slides array */
	  $scope.indexOfSlide = function (slide) {
	    return +slide.slide.index;
	  };

	  $scope.isActive = function (slide) {
	    return $scope.active === slide.slide.index;
	  };

	  $scope.isPrevDisabled = function () {
	    return $scope.active === 0 && $scope.noWrap();
	  };

	  $scope.isNextDisabled = function () {
	    return $scope.active === slides.length - 1 && $scope.noWrap();
	  };

	  $scope.pause = function () {
	    if (!$scope.noPause) {
	      isPlaying = false;
	      resetTimer();
	    }
	  };

	  $scope.play = function () {
	    if (!isPlaying) {
	      isPlaying = true;
	      restartTimer();
	    }
	  };

	  $element.on('mouseenter', $scope.pause);
	  $element.on('mouseleave', $scope.play);

	  $scope.$on('$destroy', function () {
	    destroyed = true;
	    resetTimer();
	  });

	  $scope.$watch('noTransition', function (noTransition) {
	    $animate.enabled($element, !noTransition);
	  });

	  $scope.$watch('interval', restartTimer);

	  $scope.$watchCollection('slides', resetTransition);

	  $scope.$watch('active', function (index) {
	    if (angular.isNumber(index) && currentIndex !== index) {
	      for (var i = 0; i < slides.length; i++) {
	        if (slides[i].slide.index === index) {
	          index = i;
	          break;
	        }
	      }

	      var slide = slides[index];
	      if (slide) {
	        setActive(index);
	        self.select(slides[index]);
	        currentIndex = index;
	      }
	    }
	  });

	  function clearBufferedTransitions() {
	    while (bufferedTransitions.length) {
	      bufferedTransitions.shift();
	    }
	  }

	  function getSlideByIndex(index) {
	    for (var i = 0, l = slides.length; i < l; ++i) {
	      if (slides[i].index === index) {
	        return slides[i];
	      }
	    }
	  }

	  function setActive(index) {
	    for (var i = 0; i < slides.length; i++) {
	      slides[i].slide.active = i === index;
	    }
	  }

	  function goNext(slide, index, direction) {
	    if (destroyed) {
	      return;
	    }

	    angular.extend(slide, { direction: direction });
	    angular.extend(slides[currentIndex].slide || {}, { direction: direction });
	    if ($animate.enabled($element) && !$scope.$currentTransition && slides[index].element && self.slides.length > 1) {
	      slides[index].element.data(SLIDE_DIRECTION, slide.direction);
	      var currentIdx = self.getCurrentIndex();

	      if (angular.isNumber(currentIdx) && slides[currentIdx].element) {
	        slides[currentIdx].element.data(SLIDE_DIRECTION, slide.direction);
	      }

	      $scope.$currentTransition = true;
	      $animate.on('addClass', slides[index].element, function (element, phase) {
	        if (phase === 'close') {
	          $scope.$currentTransition = null;
	          $animate.off('addClass', element);
	          if (bufferedTransitions.length) {
	            var nextSlide = bufferedTransitions.pop().slide;
	            var nextIndex = nextSlide.index;
	            var nextDirection = nextIndex > self.getCurrentIndex() ? 'next' : 'prev';
	            clearBufferedTransitions();

	            goNext(nextSlide, nextIndex, nextDirection);
	          }
	        }
	      });
	    }

	    $scope.active = slide.index;
	    currentIndex = slide.index;
	    setActive(index);

	    //every time you change slides, reset the timer
	    restartTimer();
	  }

	  function findSlideIndex(slide) {
	    for (var i = 0; i < slides.length; i++) {
	      if (slides[i].slide === slide) {
	        return i;
	      }
	    }
	  }

	  function resetTimer() {
	    if (currentInterval) {
	      $interval.cancel(currentInterval);
	      currentInterval = null;
	    }
	  }

	  function resetTransition(slides) {
	    if (!slides.length) {
	      $scope.$currentTransition = null;
	      clearBufferedTransitions();
	    }
	  }

	  function restartTimer() {
	    resetTimer();
	    var interval = +$scope.interval;
	    if (!isNaN(interval) && interval > 0) {
	      currentInterval = $interval(timerFn, interval);
	    }
	  }

	  function timerFn() {
	    var interval = +$scope.interval;
	    if (isPlaying && !isNaN(interval) && interval > 0 && slides.length) {
	      $scope.next();
	    } else {
	      $scope.pause();
	    }
	  }
	}]).directive('uibCarousel', function () {
	  return {
	    transclude: true,
	    controller: 'UibCarouselController',
	    controllerAs: 'carousel',
	    restrict: 'A',
	    templateUrl: function templateUrl(element, attrs) {
	      return attrs.templateUrl || 'uib/template/carousel/carousel.html';
	    },
	    scope: {
	      active: '=',
	      interval: '=',
	      noTransition: '=',
	      noPause: '=',
	      noWrap: '&'
	    }
	  };
	}).directive('uibSlide', ['$animate', function ($animate) {
	  return {
	    require: '^uibCarousel',
	    restrict: 'A',
	    transclude: true,
	    templateUrl: function templateUrl(element, attrs) {
	      return attrs.templateUrl || 'uib/template/carousel/slide.html';
	    },
	    scope: {
	      actual: '=?',
	      index: '=?'
	    },
	    link: function link(scope, element, attrs, carouselCtrl) {
	      element.addClass('item');
	      carouselCtrl.addSlide(scope, element);
	      //when the scope is destroyed then remove the slide from the current slides array
	      scope.$on('$destroy', function () {
	        carouselCtrl.removeSlide(scope);
	      });

	      scope.$watch('active', function (active) {
	        $animate[active ? 'addClass' : 'removeClass'](element, 'active');
	      });
	    }
	  };
	}]).animation('.item', ['$animateCss', function ($animateCss) {
	  var SLIDE_DIRECTION = 'uib-slideDirection';

	  function removeClass(element, className, callback) {
	    element.removeClass(className);
	    if (callback) {
	      callback();
	    }
	  }

	  return {
	    beforeAddClass: function beforeAddClass(element, className, done) {
	      if (className === 'active') {
	        var stopped = false;
	        var direction = element.data(SLIDE_DIRECTION);
	        var directionClass = direction === 'next' ? 'left' : 'right';
	        var removeClassFn = removeClass.bind(this, element, directionClass + ' ' + direction, done);
	        element.addClass(direction);

	        $animateCss(element, { addClass: directionClass }).start().done(removeClassFn);

	        return function () {
	          stopped = true;
	        };
	      }
	      done();
	    },
	    beforeRemoveClass: function beforeRemoveClass(element, className, done) {
	      if (className === 'active') {
	        var stopped = false;
	        var direction = element.data(SLIDE_DIRECTION);
	        var directionClass = direction === 'next' ? 'left' : 'right';
	        var removeClassFn = removeClass.bind(this, element, directionClass, done);

	        $animateCss(element, { addClass: directionClass }).start().done(removeClassFn);

	        return function () {
	          stopped = true;
	        };
	      }
	      done();
	    }
	  };
	}]);

	angular.module('ui.bootstrap.dateparser', []).service('uibDateParser', ['$log', '$locale', 'dateFilter', 'orderByFilter', function ($log, $locale, dateFilter, orderByFilter) {
	  // Pulled from https://github.com/mbostock/d3/blob/master/src/format/requote.js
	  var SPECIAL_CHARACTERS_REGEXP = /[\\\^\$\*\+\?\|\[\]\(\)\.\{\}]/g;

	  var localeId;
	  var formatCodeToRegex;

	  this.init = function () {
	    localeId = $locale.id;

	    this.parsers = {};
	    this.formatters = {};

	    formatCodeToRegex = [{
	      key: 'yyyy',
	      regex: '\\d{4}',
	      apply: function apply(value) {
	        this.year = +value;
	      },
	      formatter: function formatter(date) {
	        var _date = new Date();
	        _date.setFullYear(Math.abs(date.getFullYear()));
	        return dateFilter(_date, 'yyyy');
	      }
	    }, {
	      key: 'yy',
	      regex: '\\d{2}',
	      apply: function apply(value) {
	        value = +value;this.year = value < 69 ? value + 2000 : value + 1900;
	      },
	      formatter: function formatter(date) {
	        var _date = new Date();
	        _date.setFullYear(Math.abs(date.getFullYear()));
	        return dateFilter(_date, 'yy');
	      }
	    }, {
	      key: 'y',
	      regex: '\\d{1,4}',
	      apply: function apply(value) {
	        this.year = +value;
	      },
	      formatter: function formatter(date) {
	        var _date = new Date();
	        _date.setFullYear(Math.abs(date.getFullYear()));
	        return dateFilter(_date, 'y');
	      }
	    }, {
	      key: 'M!',
	      regex: '0?[1-9]|1[0-2]',
	      apply: function apply(value) {
	        this.month = value - 1;
	      },
	      formatter: function formatter(date) {
	        var value = date.getMonth();
	        if (/^[0-9]$/.test(value)) {
	          return dateFilter(date, 'MM');
	        }

	        return dateFilter(date, 'M');
	      }
	    }, {
	      key: 'MMMM',
	      regex: $locale.DATETIME_FORMATS.MONTH.join('|'),
	      apply: function apply(value) {
	        this.month = $locale.DATETIME_FORMATS.MONTH.indexOf(value);
	      },
	      formatter: function formatter(date) {
	        return dateFilter(date, 'MMMM');
	      }
	    }, {
	      key: 'MMM',
	      regex: $locale.DATETIME_FORMATS.SHORTMONTH.join('|'),
	      apply: function apply(value) {
	        this.month = $locale.DATETIME_FORMATS.SHORTMONTH.indexOf(value);
	      },
	      formatter: function formatter(date) {
	        return dateFilter(date, 'MMM');
	      }
	    }, {
	      key: 'MM',
	      regex: '0[1-9]|1[0-2]',
	      apply: function apply(value) {
	        this.month = value - 1;
	      },
	      formatter: function formatter(date) {
	        return dateFilter(date, 'MM');
	      }
	    }, {
	      key: 'M',
	      regex: '[1-9]|1[0-2]',
	      apply: function apply(value) {
	        this.month = value - 1;
	      },
	      formatter: function formatter(date) {
	        return dateFilter(date, 'M');
	      }
	    }, {
	      key: 'd!',
	      regex: '[0-2]?[0-9]{1}|3[0-1]{1}',
	      apply: function apply(value) {
	        this.date = +value;
	      },
	      formatter: function formatter(date) {
	        var value = date.getDate();
	        if (/^[1-9]$/.test(value)) {
	          return dateFilter(date, 'dd');
	        }

	        return dateFilter(date, 'd');
	      }
	    }, {
	      key: 'dd',
	      regex: '[0-2][0-9]{1}|3[0-1]{1}',
	      apply: function apply(value) {
	        this.date = +value;
	      },
	      formatter: function formatter(date) {
	        return dateFilter(date, 'dd');
	      }
	    }, {
	      key: 'd',
	      regex: '[1-2]?[0-9]{1}|3[0-1]{1}',
	      apply: function apply(value) {
	        this.date = +value;
	      },
	      formatter: function formatter(date) {
	        return dateFilter(date, 'd');
	      }
	    }, {
	      key: 'EEEE',
	      regex: $locale.DATETIME_FORMATS.DAY.join('|'),
	      formatter: function formatter(date) {
	        return dateFilter(date, 'EEEE');
	      }
	    }, {
	      key: 'EEE',
	      regex: $locale.DATETIME_FORMATS.SHORTDAY.join('|'),
	      formatter: function formatter(date) {
	        return dateFilter(date, 'EEE');
	      }
	    }, {
	      key: 'HH',
	      regex: '(?:0|1)[0-9]|2[0-3]',
	      apply: function apply(value) {
	        this.hours = +value;
	      },
	      formatter: function formatter(date) {
	        return dateFilter(date, 'HH');
	      }
	    }, {
	      key: 'hh',
	      regex: '0[0-9]|1[0-2]',
	      apply: function apply(value) {
	        this.hours = +value;
	      },
	      formatter: function formatter(date) {
	        return dateFilter(date, 'hh');
	      }
	    }, {
	      key: 'H',
	      regex: '1?[0-9]|2[0-3]',
	      apply: function apply(value) {
	        this.hours = +value;
	      },
	      formatter: function formatter(date) {
	        return dateFilter(date, 'H');
	      }
	    }, {
	      key: 'h',
	      regex: '[0-9]|1[0-2]',
	      apply: function apply(value) {
	        this.hours = +value;
	      },
	      formatter: function formatter(date) {
	        return dateFilter(date, 'h');
	      }
	    }, {
	      key: 'mm',
	      regex: '[0-5][0-9]',
	      apply: function apply(value) {
	        this.minutes = +value;
	      },
	      formatter: function formatter(date) {
	        return dateFilter(date, 'mm');
	      }
	    }, {
	      key: 'm',
	      regex: '[0-9]|[1-5][0-9]',
	      apply: function apply(value) {
	        this.minutes = +value;
	      },
	      formatter: function formatter(date) {
	        return dateFilter(date, 'm');
	      }
	    }, {
	      key: 'sss',
	      regex: '[0-9][0-9][0-9]',
	      apply: function apply(value) {
	        this.milliseconds = +value;
	      },
	      formatter: function formatter(date) {
	        return dateFilter(date, 'sss');
	      }
	    }, {
	      key: 'ss',
	      regex: '[0-5][0-9]',
	      apply: function apply(value) {
	        this.seconds = +value;
	      },
	      formatter: function formatter(date) {
	        return dateFilter(date, 'ss');
	      }
	    }, {
	      key: 's',
	      regex: '[0-9]|[1-5][0-9]',
	      apply: function apply(value) {
	        this.seconds = +value;
	      },
	      formatter: function formatter(date) {
	        return dateFilter(date, 's');
	      }
	    }, {
	      key: 'a',
	      regex: $locale.DATETIME_FORMATS.AMPMS.join('|'),
	      apply: function apply(value) {
	        if (this.hours === 12) {
	          this.hours = 0;
	        }

	        if (value === 'PM') {
	          this.hours += 12;
	        }
	      },
	      formatter: function formatter(date) {
	        return dateFilter(date, 'a');
	      }
	    }, {
	      key: 'Z',
	      regex: '[+-]\\d{4}',
	      apply: function apply(value) {
	        var matches = value.match(/([+-])(\d{2})(\d{2})/),
	            sign = matches[1],
	            hours = matches[2],
	            minutes = matches[3];
	        this.hours += toInt(sign + hours);
	        this.minutes += toInt(sign + minutes);
	      },
	      formatter: function formatter(date) {
	        return dateFilter(date, 'Z');
	      }
	    }, {
	      key: 'ww',
	      regex: '[0-4][0-9]|5[0-3]',
	      formatter: function formatter(date) {
	        return dateFilter(date, 'ww');
	      }
	    }, {
	      key: 'w',
	      regex: '[0-9]|[1-4][0-9]|5[0-3]',
	      formatter: function formatter(date) {
	        return dateFilter(date, 'w');
	      }
	    }, {
	      key: 'GGGG',
	      regex: $locale.DATETIME_FORMATS.ERANAMES.join('|').replace(/\s/g, '\\s'),
	      formatter: function formatter(date) {
	        return dateFilter(date, 'GGGG');
	      }
	    }, {
	      key: 'GGG',
	      regex: $locale.DATETIME_FORMATS.ERAS.join('|'),
	      formatter: function formatter(date) {
	        return dateFilter(date, 'GGG');
	      }
	    }, {
	      key: 'GG',
	      regex: $locale.DATETIME_FORMATS.ERAS.join('|'),
	      formatter: function formatter(date) {
	        return dateFilter(date, 'GG');
	      }
	    }, {
	      key: 'G',
	      regex: $locale.DATETIME_FORMATS.ERAS.join('|'),
	      formatter: function formatter(date) {
	        return dateFilter(date, 'G');
	      }
	    }];

	    if (angular.version.major >= 1 && angular.version.minor > 4) {
	      formatCodeToRegex.push({
	        key: 'LLLL',
	        regex: $locale.DATETIME_FORMATS.STANDALONEMONTH.join('|'),
	        apply: function apply(value) {
	          this.month = $locale.DATETIME_FORMATS.STANDALONEMONTH.indexOf(value);
	        },
	        formatter: function formatter(date) {
	          return dateFilter(date, 'LLLL');
	        }
	      });
	    }
	  };

	  this.init();

	  function createParser(format) {
	    var map = [],
	        regex = format.split('');

	    // check for literal values
	    var quoteIndex = format.indexOf('\'');
	    if (quoteIndex > -1) {
	      var inLiteral = false;
	      format = format.split('');
	      for (var i = quoteIndex; i < format.length; i++) {
	        if (inLiteral) {
	          if (format[i] === '\'') {
	            if (i + 1 < format.length && format[i + 1] === '\'') {
	              // escaped single quote
	              format[i + 1] = '$';
	              regex[i + 1] = '';
	            } else {
	              // end of literal
	              regex[i] = '';
	              inLiteral = false;
	            }
	          }
	          format[i] = '$';
	        } else {
	          if (format[i] === '\'') {
	            // start of literal
	            format[i] = '$';
	            regex[i] = '';
	            inLiteral = true;
	          }
	        }
	      }

	      format = format.join('');
	    }

	    angular.forEach(formatCodeToRegex, function (data) {
	      var index = format.indexOf(data.key);

	      if (index > -1) {
	        format = format.split('');

	        regex[index] = '(' + data.regex + ')';
	        format[index] = '$'; // Custom symbol to define consumed part of format
	        for (var i = index + 1, n = index + data.key.length; i < n; i++) {
	          regex[i] = '';
	          format[i] = '$';
	        }
	        format = format.join('');

	        map.push({
	          index: index,
	          key: data.key,
	          apply: data.apply,
	          matcher: data.regex
	        });
	      }
	    });

	    return {
	      regex: new RegExp('^' + regex.join('') + '$'),
	      map: orderByFilter(map, 'index')
	    };
	  }

	  function createFormatter(format) {
	    var formatters = [];
	    var i = 0;
	    var formatter, literalIdx;
	    while (i < format.length) {
	      if (angular.isNumber(literalIdx)) {
	        if (format.charAt(i) === '\'') {
	          if (i + 1 >= format.length || format.charAt(i + 1) !== '\'') {
	            formatters.push(constructLiteralFormatter(format, literalIdx, i));
	            literalIdx = null;
	          }
	        } else if (i === format.length) {
	          while (literalIdx < format.length) {
	            formatter = constructFormatterFromIdx(format, literalIdx);
	            formatters.push(formatter);
	            literalIdx = formatter.endIdx;
	          }
	        }

	        i++;
	        continue;
	      }

	      if (format.charAt(i) === '\'') {
	        literalIdx = i;
	        i++;
	        continue;
	      }

	      formatter = constructFormatterFromIdx(format, i);

	      formatters.push(formatter.parser);
	      i = formatter.endIdx;
	    }

	    return formatters;
	  }

	  function constructLiteralFormatter(format, literalIdx, endIdx) {
	    return function () {
	      return format.substr(literalIdx + 1, endIdx - literalIdx - 1);
	    };
	  }

	  function constructFormatterFromIdx(format, i) {
	    var currentPosStr = format.substr(i);
	    for (var j = 0; j < formatCodeToRegex.length; j++) {
	      if (new RegExp('^' + formatCodeToRegex[j].key).test(currentPosStr)) {
	        var data = formatCodeToRegex[j];
	        return {
	          endIdx: i + data.key.length,
	          parser: data.formatter
	        };
	      }
	    }

	    return {
	      endIdx: i + 1,
	      parser: function parser() {
	        return currentPosStr.charAt(0);
	      }
	    };
	  }

	  this.filter = function (date, format) {
	    if (!angular.isDate(date) || isNaN(date) || !format) {
	      return '';
	    }

	    format = $locale.DATETIME_FORMATS[format] || format;

	    if ($locale.id !== localeId) {
	      this.init();
	    }

	    if (!this.formatters[format]) {
	      this.formatters[format] = createFormatter(format);
	    }

	    var formatters = this.formatters[format];

	    return formatters.reduce(function (str, formatter) {
	      return str + formatter(date);
	    }, '');
	  };

	  this.parse = function (input, format, baseDate) {
	    if (!angular.isString(input) || !format) {
	      return input;
	    }

	    format = $locale.DATETIME_FORMATS[format] || format;
	    format = format.replace(SPECIAL_CHARACTERS_REGEXP, '\\$&');

	    if ($locale.id !== localeId) {
	      this.init();
	    }

	    if (!this.parsers[format]) {
	      this.parsers[format] = createParser(format, 'apply');
	    }

	    var parser = this.parsers[format],
	        regex = parser.regex,
	        map = parser.map,
	        results = input.match(regex),
	        tzOffset = false;
	    if (results && results.length) {
	      var fields, dt;
	      if (angular.isDate(baseDate) && !isNaN(baseDate.getTime())) {
	        fields = {
	          year: baseDate.getFullYear(),
	          month: baseDate.getMonth(),
	          date: baseDate.getDate(),
	          hours: baseDate.getHours(),
	          minutes: baseDate.getMinutes(),
	          seconds: baseDate.getSeconds(),
	          milliseconds: baseDate.getMilliseconds()
	        };
	      } else {
	        if (baseDate) {
	          $log.warn('dateparser:', 'baseDate is not a valid date');
	        }
	        fields = { year: 1900, month: 0, date: 1, hours: 0, minutes: 0, seconds: 0, milliseconds: 0 };
	      }

	      for (var i = 1, n = results.length; i < n; i++) {
	        var mapper = map[i - 1];
	        if (mapper.matcher === 'Z') {
	          tzOffset = true;
	        }

	        if (mapper.apply) {
	          mapper.apply.call(fields, results[i]);
	        }
	      }

	      var datesetter = tzOffset ? Date.prototype.setUTCFullYear : Date.prototype.setFullYear;
	      var timesetter = tzOffset ? Date.prototype.setUTCHours : Date.prototype.setHours;

	      if (isValid(fields.year, fields.month, fields.date)) {
	        if (angular.isDate(baseDate) && !isNaN(baseDate.getTime()) && !tzOffset) {
	          dt = new Date(baseDate);
	          datesetter.call(dt, fields.year, fields.month, fields.date);
	          timesetter.call(dt, fields.hours, fields.minutes, fields.seconds, fields.milliseconds);
	        } else {
	          dt = new Date(0);
	          datesetter.call(dt, fields.year, fields.month, fields.date);
	          timesetter.call(dt, fields.hours || 0, fields.minutes || 0, fields.seconds || 0, fields.milliseconds || 0);
	        }
	      }

	      return dt;
	    }
	  };

	  // Check if date is valid for specific month (and year for February).
	  // Month: 0 = Jan, 1 = Feb, etc
	  function isValid(year, month, date) {
	    if (date < 1) {
	      return false;
	    }

	    if (month === 1 && date > 28) {
	      return date === 29 && (year % 4 === 0 && year % 100 !== 0 || year % 400 === 0);
	    }

	    if (month === 3 || month === 5 || month === 8 || month === 10) {
	      return date < 31;
	    }

	    return true;
	  }

	  function toInt(str) {
	    return parseInt(str, 10);
	  }

	  this.toTimezone = toTimezone;
	  this.fromTimezone = fromTimezone;
	  this.timezoneToOffset = timezoneToOffset;
	  this.addDateMinutes = addDateMinutes;
	  this.convertTimezoneToLocal = convertTimezoneToLocal;

	  function toTimezone(date, timezone) {
	    return date && timezone ? convertTimezoneToLocal(date, timezone) : date;
	  }

	  function fromTimezone(date, timezone) {
	    return date && timezone ? convertTimezoneToLocal(date, timezone, true) : date;
	  }

	  //https://github.com/angular/angular.js/blob/622c42169699ec07fc6daaa19fe6d224e5d2f70e/src/Angular.js#L1207
	  function timezoneToOffset(timezone, fallback) {
	    timezone = timezone.replace(/:/g, '');
	    var requestedTimezoneOffset = Date.parse('Jan 01, 1970 00:00:00 ' + timezone) / 60000;
	    return isNaN(requestedTimezoneOffset) ? fallback : requestedTimezoneOffset;
	  }

	  function addDateMinutes(date, minutes) {
	    date = new Date(date.getTime());
	    date.setMinutes(date.getMinutes() + minutes);
	    return date;
	  }

	  function convertTimezoneToLocal(date, timezone, reverse) {
	    reverse = reverse ? -1 : 1;
	    var dateTimezoneOffset = date.getTimezoneOffset();
	    var timezoneOffset = timezoneToOffset(timezone, dateTimezoneOffset);
	    return addDateMinutes(date, reverse * (timezoneOffset - dateTimezoneOffset));
	  }
	}]);

	// Avoiding use of ng-class as it creates a lot of watchers when a class is to be applied to
	// at most one element.
	angular.module('ui.bootstrap.isClass', []).directive('uibIsClass', ['$animate', function ($animate) {
	  //                    11111111          22222222
	  var ON_REGEXP = /^\s*([\s\S]+?)\s+on\s+([\s\S]+?)\s*$/;
	  //                    11111111           22222222
	  var IS_REGEXP = /^\s*([\s\S]+?)\s+for\s+([\s\S]+?)\s*$/;

	  var dataPerTracked = {};

	  return {
	    restrict: 'A',
	    compile: function compile(tElement, tAttrs) {
	      var linkedScopes = [];
	      var instances = [];
	      var expToData = {};
	      var lastActivated = null;
	      var onExpMatches = tAttrs.uibIsClass.match(ON_REGEXP);
	      var onExp = onExpMatches[2];
	      var expsStr = onExpMatches[1];
	      var exps = expsStr.split(',');

	      return linkFn;

	      function linkFn(scope, element, attrs) {
	        linkedScopes.push(scope);
	        instances.push({
	          scope: scope,
	          element: element
	        });

	        exps.forEach(function (exp, k) {
	          addForExp(exp, scope);
	        });

	        scope.$on('$destroy', removeScope);
	      }

	      function addForExp(exp, scope) {
	        var matches = exp.match(IS_REGEXP);
	        var clazz = scope.$eval(matches[1]);
	        var compareWithExp = matches[2];
	        var data = expToData[exp];
	        if (!data) {
	          var watchFn = function watchFn(compareWithVal) {
	            var newActivated = null;
	            instances.some(function (instance) {
	              var thisVal = instance.scope.$eval(onExp);
	              if (thisVal === compareWithVal) {
	                newActivated = instance;
	                return true;
	              }
	            });
	            if (data.lastActivated !== newActivated) {
	              if (data.lastActivated) {
	                $animate.removeClass(data.lastActivated.element, clazz);
	              }
	              if (newActivated) {
	                $animate.addClass(newActivated.element, clazz);
	              }
	              data.lastActivated = newActivated;
	            }
	          };
	          expToData[exp] = data = {
	            lastActivated: null,
	            scope: scope,
	            watchFn: watchFn,
	            compareWithExp: compareWithExp,
	            watcher: scope.$watch(compareWithExp, watchFn)
	          };
	        }
	        data.watchFn(scope.$eval(compareWithExp));
	      }

	      function removeScope(e) {
	        var removedScope = e.targetScope;
	        var index = linkedScopes.indexOf(removedScope);
	        linkedScopes.splice(index, 1);
	        instances.splice(index, 1);
	        if (linkedScopes.length) {
	          var newWatchScope = linkedScopes[0];
	          angular.forEach(expToData, function (data) {
	            if (data.scope === removedScope) {
	              data.watcher = newWatchScope.$watch(data.compareWithExp, data.watchFn);
	              data.scope = newWatchScope;
	            }
	          });
	        } else {
	          expToData = {};
	        }
	      }
	    }
	  };
	}]);
	angular.module('ui.bootstrap.datepicker', ['ui.bootstrap.dateparser', 'ui.bootstrap.isClass']).value('$datepickerSuppressError', false).value('$datepickerLiteralWarning', true).constant('uibDatepickerConfig', {
	  datepickerMode: 'day',
	  formatDay: 'dd',
	  formatMonth: 'MMMM',
	  formatYear: 'yyyy',
	  formatDayHeader: 'EEE',
	  formatDayTitle: 'MMMM yyyy',
	  formatMonthTitle: 'yyyy',
	  maxDate: null,
	  maxMode: 'year',
	  minDate: null,
	  minMode: 'day',
	  monthColumns: 3,
	  ngModelOptions: {},
	  shortcutPropagation: false,
	  showWeeks: true,
	  yearColumns: 5,
	  yearRows: 4
	}).controller('UibDatepickerController', ['$scope', '$element', '$attrs', '$parse', '$interpolate', '$locale', '$log', 'dateFilter', 'uibDatepickerConfig', '$datepickerLiteralWarning', '$datepickerSuppressError', 'uibDateParser', function ($scope, $element, $attrs, $parse, $interpolate, $locale, $log, dateFilter, datepickerConfig, $datepickerLiteralWarning, $datepickerSuppressError, dateParser) {
	  var self = this,
	      ngModelCtrl = { $setViewValue: angular.noop },
	      // nullModelCtrl;
	  ngModelOptions = {},
	      watchListeners = [];

	  $element.addClass('uib-datepicker');
	  $attrs.$set('role', 'application');

	  if (!$scope.datepickerOptions) {
	    $scope.datepickerOptions = {};
	  }

	  // Modes chain
	  this.modes = ['day', 'month', 'year'];

	  ['customClass', 'dateDisabled', 'datepickerMode', 'formatDay', 'formatDayHeader', 'formatDayTitle', 'formatMonth', 'formatMonthTitle', 'formatYear', 'maxDate', 'maxMode', 'minDate', 'minMode', 'monthColumns', 'showWeeks', 'shortcutPropagation', 'startingDay', 'yearColumns', 'yearRows'].forEach(function (key) {
	    switch (key) {
	      case 'customClass':
	      case 'dateDisabled':
	        $scope[key] = $scope.datepickerOptions[key] || angular.noop;
	        break;
	      case 'datepickerMode':
	        $scope.datepickerMode = angular.isDefined($scope.datepickerOptions.datepickerMode) ? $scope.datepickerOptions.datepickerMode : datepickerConfig.datepickerMode;
	        break;
	      case 'formatDay':
	      case 'formatDayHeader':
	      case 'formatDayTitle':
	      case 'formatMonth':
	      case 'formatMonthTitle':
	      case 'formatYear':
	        self[key] = angular.isDefined($scope.datepickerOptions[key]) ? $interpolate($scope.datepickerOptions[key])($scope.$parent) : datepickerConfig[key];
	        break;
	      case 'monthColumns':
	      case 'showWeeks':
	      case 'shortcutPropagation':
	      case 'yearColumns':
	      case 'yearRows':
	        self[key] = angular.isDefined($scope.datepickerOptions[key]) ? $scope.datepickerOptions[key] : datepickerConfig[key];
	        break;
	      case 'startingDay':
	        if (angular.isDefined($scope.datepickerOptions.startingDay)) {
	          self.startingDay = $scope.datepickerOptions.startingDay;
	        } else if (angular.isNumber(datepickerConfig.startingDay)) {
	          self.startingDay = datepickerConfig.startingDay;
	        } else {
	          self.startingDay = ($locale.DATETIME_FORMATS.FIRSTDAYOFWEEK + 8) % 7;
	        }

	        break;
	      case 'maxDate':
	      case 'minDate':
	        $scope.$watch('datepickerOptions.' + key, function (value) {
	          if (value) {
	            if (angular.isDate(value)) {
	              self[key] = dateParser.fromTimezone(new Date(value), ngModelOptions.timezone);
	            } else {
	              if ($datepickerLiteralWarning) {
	                $log.warn('Literal date support has been deprecated, please switch to date object usage');
	              }

	              self[key] = new Date(dateFilter(value, 'medium'));
	            }
	          } else {
	            self[key] = datepickerConfig[key] ? dateParser.fromTimezone(new Date(datepickerConfig[key]), ngModelOptions.timezone) : null;
	          }

	          self.refreshView();
	        });

	        break;
	      case 'maxMode':
	      case 'minMode':
	        if ($scope.datepickerOptions[key]) {
	          $scope.$watch(function () {
	            return $scope.datepickerOptions[key];
	          }, function (value) {
	            self[key] = $scope[key] = angular.isDefined(value) ? value : $scope.datepickerOptions[key];
	            if (key === 'minMode' && self.modes.indexOf($scope.datepickerOptions.datepickerMode) < self.modes.indexOf(self[key]) || key === 'maxMode' && self.modes.indexOf($scope.datepickerOptions.datepickerMode) > self.modes.indexOf(self[key])) {
	              $scope.datepickerMode = self[key];
	              $scope.datepickerOptions.datepickerMode = self[key];
	            }
	          });
	        } else {
	          self[key] = $scope[key] = datepickerConfig[key] || null;
	        }

	        break;
	    }
	  });

	  $scope.uniqueId = 'datepicker-' + $scope.$id + '-' + Math.floor(Math.random() * 10000);

	  $scope.disabled = angular.isDefined($attrs.disabled) || false;
	  if (angular.isDefined($attrs.ngDisabled)) {
	    watchListeners.push($scope.$parent.$watch($attrs.ngDisabled, function (disabled) {
	      $scope.disabled = disabled;
	      self.refreshView();
	    }));
	  }

	  $scope.isActive = function (dateObject) {
	    if (self.compare(dateObject.date, self.activeDate) === 0) {
	      $scope.activeDateId = dateObject.uid;
	      return true;
	    }
	    return false;
	  };

	  this.init = function (ngModelCtrl_) {
	    ngModelCtrl = ngModelCtrl_;
	    ngModelOptions = ngModelCtrl_.$options || $scope.datepickerOptions.ngModelOptions || datepickerConfig.ngModelOptions;
	    if ($scope.datepickerOptions.initDate) {
	      self.activeDate = dateParser.fromTimezone($scope.datepickerOptions.initDate, ngModelOptions.timezone) || new Date();
	      $scope.$watch('datepickerOptions.initDate', function (initDate) {
	        if (initDate && (ngModelCtrl.$isEmpty(ngModelCtrl.$modelValue) || ngModelCtrl.$invalid)) {
	          self.activeDate = dateParser.fromTimezone(initDate, ngModelOptions.timezone);
	          self.refreshView();
	        }
	      });
	    } else {
	      self.activeDate = new Date();
	    }

	    var date = ngModelCtrl.$modelValue ? new Date(ngModelCtrl.$modelValue) : new Date();
	    this.activeDate = !isNaN(date) ? dateParser.fromTimezone(date, ngModelOptions.timezone) : dateParser.fromTimezone(new Date(), ngModelOptions.timezone);

	    ngModelCtrl.$render = function () {
	      self.render();
	    };
	  };

	  this.render = function () {
	    if (ngModelCtrl.$viewValue) {
	      var date = new Date(ngModelCtrl.$viewValue),
	          isValid = !isNaN(date);

	      if (isValid) {
	        this.activeDate = dateParser.fromTimezone(date, ngModelOptions.timezone);
	      } else if (!$datepickerSuppressError) {
	        $log.error('Datepicker directive: "ng-model" value must be a Date object');
	      }
	    }
	    this.refreshView();
	  };

	  this.refreshView = function () {
	    if (this.element) {
	      $scope.selectedDt = null;
	      this._refreshView();
	      if ($scope.activeDt) {
	        $scope.activeDateId = $scope.activeDt.uid;
	      }

	      var date = ngModelCtrl.$viewValue ? new Date(ngModelCtrl.$viewValue) : null;
	      date = dateParser.fromTimezone(date, ngModelOptions.timezone);
	      ngModelCtrl.$setValidity('dateDisabled', !date || this.element && !this.isDisabled(date));
	    }
	  };

	  this.createDateObject = function (date, format) {
	    var model = ngModelCtrl.$viewValue ? new Date(ngModelCtrl.$viewValue) : null;
	    model = dateParser.fromTimezone(model, ngModelOptions.timezone);
	    var today = new Date();
	    today = dateParser.fromTimezone(today, ngModelOptions.timezone);
	    var time = this.compare(date, today);
	    var dt = {
	      date: date,
	      label: dateParser.filter(date, format),
	      selected: model && this.compare(date, model) === 0,
	      disabled: this.isDisabled(date),
	      past: time < 0,
	      current: time === 0,
	      future: time > 0,
	      customClass: this.customClass(date) || null
	    };

	    if (model && this.compare(date, model) === 0) {
	      $scope.selectedDt = dt;
	    }

	    if (self.activeDate && this.compare(dt.date, self.activeDate) === 0) {
	      $scope.activeDt = dt;
	    }

	    return dt;
	  };

	  this.isDisabled = function (date) {
	    return $scope.disabled || this.minDate && this.compare(date, this.minDate) < 0 || this.maxDate && this.compare(date, this.maxDate) > 0 || $scope.dateDisabled && $scope.dateDisabled({ date: date, mode: $scope.datepickerMode });
	  };

	  this.customClass = function (date) {
	    return $scope.customClass({ date: date, mode: $scope.datepickerMode });
	  };

	  // Split array into smaller arrays
	  this.split = function (arr, size) {
	    var arrays = [];
	    while (arr.length > 0) {
	      arrays.push(arr.splice(0, size));
	    }
	    return arrays;
	  };

	  $scope.select = function (date) {
	    if ($scope.datepickerMode === self.minMode) {
	      var dt = ngModelCtrl.$viewValue ? dateParser.fromTimezone(new Date(ngModelCtrl.$viewValue), ngModelOptions.timezone) : new Date(0, 0, 0, 0, 0, 0, 0);
	      dt.setFullYear(date.getFullYear(), date.getMonth(), date.getDate());
	      dt = dateParser.toTimezone(dt, ngModelOptions.timezone);
	      ngModelCtrl.$setViewValue(dt);
	      ngModelCtrl.$render();
	    } else {
	      self.activeDate = date;
	      setMode(self.modes[self.modes.indexOf($scope.datepickerMode) - 1]);

	      $scope.$emit('uib:datepicker.mode');
	    }

	    $scope.$broadcast('uib:datepicker.focus');
	  };

	  $scope.move = function (direction) {
	    var year = self.activeDate.getFullYear() + direction * (self.step.years || 0),
	        month = self.activeDate.getMonth() + direction * (self.step.months || 0);
	    self.activeDate.setFullYear(year, month, 1);
	    self.refreshView();
	  };

	  $scope.toggleMode = function (direction) {
	    direction = direction || 1;

	    if ($scope.datepickerMode === self.maxMode && direction === 1 || $scope.datepickerMode === self.minMode && direction === -1) {
	      return;
	    }

	    setMode(self.modes[self.modes.indexOf($scope.datepickerMode) + direction]);

	    $scope.$emit('uib:datepicker.mode');
	  };

	  // Key event mapper
	  $scope.keys = { 13: 'enter', 32: 'space', 33: 'pageup', 34: 'pagedown', 35: 'end', 36: 'home', 37: 'left', 38: 'up', 39: 'right', 40: 'down' };

	  var focusElement = function focusElement() {
	    self.element[0].focus();
	  };

	  // Listen for focus requests from popup directive
	  $scope.$on('uib:datepicker.focus', focusElement);

	  $scope.keydown = function (evt) {
	    var key = $scope.keys[evt.which];

	    if (!key || evt.shiftKey || evt.altKey || $scope.disabled) {
	      return;
	    }

	    evt.preventDefault();
	    if (!self.shortcutPropagation) {
	      evt.stopPropagation();
	    }

	    if (key === 'enter' || key === 'space') {
	      if (self.isDisabled(self.activeDate)) {
	        return; // do nothing
	      }
	      $scope.select(self.activeDate);
	    } else if (evt.ctrlKey && (key === 'up' || key === 'down')) {
	      $scope.toggleMode(key === 'up' ? 1 : -1);
	    } else {
	      self.handleKeyDown(key, evt);
	      self.refreshView();
	    }
	  };

	  $element.on('keydown', function (evt) {
	    $scope.$apply(function () {
	      $scope.keydown(evt);
	    });
	  });

	  $scope.$on('$destroy', function () {
	    //Clear all watch listeners on destroy
	    while (watchListeners.length) {
	      watchListeners.shift()();
	    }
	  });

	  function setMode(mode) {
	    $scope.datepickerMode = mode;
	    $scope.datepickerOptions.datepickerMode = mode;
	  }
	}]).controller('UibDaypickerController', ['$scope', '$element', 'dateFilter', function (scope, $element, dateFilter) {
	  var DAYS_IN_MONTH = [31, 28, 31, 30, 31, 30, 31, 31, 30, 31, 30, 31];

	  this.step = { months: 1 };
	  this.element = $element;
	  function getDaysInMonth(year, month) {
	    return month === 1 && year % 4 === 0 && (year % 100 !== 0 || year % 400 === 0) ? 29 : DAYS_IN_MONTH[month];
	  }

	  this.init = function (ctrl) {
	    angular.extend(ctrl, this);
	    scope.showWeeks = ctrl.showWeeks;
	    ctrl.refreshView();
	  };

	  this.getDates = function (startDate, n) {
	    var dates = new Array(n),
	        current = new Date(startDate),
	        i = 0,
	        date;
	    while (i < n) {
	      date = new Date(current);
	      dates[i++] = date;
	      current.setDate(current.getDate() + 1);
	    }
	    return dates;
	  };

	  this._refreshView = function () {
	    var year = this.activeDate.getFullYear(),
	        month = this.activeDate.getMonth(),
	        firstDayOfMonth = new Date(this.activeDate);

	    firstDayOfMonth.setFullYear(year, month, 1);

	    var difference = this.startingDay - firstDayOfMonth.getDay(),
	        numDisplayedFromPreviousMonth = difference > 0 ? 7 - difference : -difference,
	        firstDate = new Date(firstDayOfMonth);

	    if (numDisplayedFromPreviousMonth > 0) {
	      firstDate.setDate(-numDisplayedFromPreviousMonth + 1);
	    }

	    // 42 is the number of days on a six-week calendar
	    var days = this.getDates(firstDate, 42);
	    for (var i = 0; i < 42; i++) {
	      days[i] = angular.extend(this.createDateObject(days[i], this.formatDay), {
	        secondary: days[i].getMonth() !== month,
	        uid: scope.uniqueId + '-' + i
	      });
	    }

	    scope.labels = new Array(7);
	    for (var j = 0; j < 7; j++) {
	      scope.labels[j] = {
	        abbr: dateFilter(days[j].date, this.formatDayHeader),
	        full: dateFilter(days[j].date, 'EEEE')
	      };
	    }

	    scope.title = dateFilter(this.activeDate, this.formatDayTitle);
	    scope.rows = this.split(days, 7);

	    if (scope.showWeeks) {
	      scope.weekNumbers = [];
	      var thursdayIndex = (4 + 7 - this.startingDay) % 7,
	          numWeeks = scope.rows.length;
	      for (var curWeek = 0; curWeek < numWeeks; curWeek++) {
	        scope.weekNumbers.push(getISO8601WeekNumber(scope.rows[curWeek][thursdayIndex].date));
	      }
	    }
	  };

	  this.compare = function (date1, date2) {
	    var _date1 = new Date(date1.getFullYear(), date1.getMonth(), date1.getDate());
	    var _date2 = new Date(date2.getFullYear(), date2.getMonth(), date2.getDate());
	    _date1.setFullYear(date1.getFullYear());
	    _date2.setFullYear(date2.getFullYear());
	    return _date1 - _date2;
	  };

	  function getISO8601WeekNumber(date) {
	    var checkDate = new Date(date);
	    checkDate.setDate(checkDate.getDate() + 4 - (checkDate.getDay() || 7)); // Thursday
	    var time = checkDate.getTime();
	    checkDate.setMonth(0); // Compare with Jan 1
	    checkDate.setDate(1);
	    return Math.floor(Math.round((time - checkDate) / 86400000) / 7) + 1;
	  }

	  this.handleKeyDown = function (key, evt) {
	    var date = this.activeDate.getDate();

	    if (key === 'left') {
	      date = date - 1;
	    } else if (key === 'up') {
	      date = date - 7;
	    } else if (key === 'right') {
	      date = date + 1;
	    } else if (key === 'down') {
	      date = date + 7;
	    } else if (key === 'pageup' || key === 'pagedown') {
	      var month = this.activeDate.getMonth() + (key === 'pageup' ? -1 : 1);
	      this.activeDate.setMonth(month, 1);
	      date = Math.min(getDaysInMonth(this.activeDate.getFullYear(), this.activeDate.getMonth()), date);
	    } else if (key === 'home') {
	      date = 1;
	    } else if (key === 'end') {
	      date = getDaysInMonth(this.activeDate.getFullYear(), this.activeDate.getMonth());
	    }
	    this.activeDate.setDate(date);
	  };
	}]).controller('UibMonthpickerController', ['$scope', '$element', 'dateFilter', function (scope, $element, dateFilter) {
	  this.step = { years: 1 };
	  this.element = $element;

	  this.init = function (ctrl) {
	    angular.extend(ctrl, this);
	    ctrl.refreshView();
	  };

	  this._refreshView = function () {
	    var months = new Array(12),
	        year = this.activeDate.getFullYear(),
	        date;

	    for (var i = 0; i < 12; i++) {
	      date = new Date(this.activeDate);
	      date.setFullYear(year, i, 1);
	      months[i] = angular.extend(this.createDateObject(date, this.formatMonth), {
	        uid: scope.uniqueId + '-' + i
	      });
	    }

	    scope.title = dateFilter(this.activeDate, this.formatMonthTitle);
	    scope.rows = this.split(months, this.monthColumns);
	    scope.yearHeaderColspan = this.monthColumns > 3 ? this.monthColumns - 2 : 1;
	  };

	  this.compare = function (date1, date2) {
	    var _date1 = new Date(date1.getFullYear(), date1.getMonth());
	    var _date2 = new Date(date2.getFullYear(), date2.getMonth());
	    _date1.setFullYear(date1.getFullYear());
	    _date2.setFullYear(date2.getFullYear());
	    return _date1 - _date2;
	  };

	  this.handleKeyDown = function (key, evt) {
	    var date = this.activeDate.getMonth();

	    if (key === 'left') {
	      date = date - 1;
	    } else if (key === 'up') {
	      date = date - this.monthColumns;
	    } else if (key === 'right') {
	      date = date + 1;
	    } else if (key === 'down') {
	      date = date + this.monthColumns;
	    } else if (key === 'pageup' || key === 'pagedown') {
	      var year = this.activeDate.getFullYear() + (key === 'pageup' ? -1 : 1);
	      this.activeDate.setFullYear(year);
	    } else if (key === 'home') {
	      date = 0;
	    } else if (key === 'end') {
	      date = 11;
	    }
	    this.activeDate.setMonth(date);
	  };
	}]).controller('UibYearpickerController', ['$scope', '$element', 'dateFilter', function (scope, $element, dateFilter) {
	  var columns, range;
	  this.element = $element;

	  function getStartingYear(year) {
	    return parseInt((year - 1) / range, 10) * range + 1;
	  }

	  this.yearpickerInit = function () {
	    columns = this.yearColumns;
	    range = this.yearRows * columns;
	    this.step = { years: range };
	  };

	  this._refreshView = function () {
	    var years = new Array(range),
	        date;

	    for (var i = 0, start = getStartingYear(this.activeDate.getFullYear()); i < range; i++) {
	      date = new Date(this.activeDate);
	      date.setFullYear(start + i, 0, 1);
	      years[i] = angular.extend(this.createDateObject(date, this.formatYear), {
	        uid: scope.uniqueId + '-' + i
	      });
	    }

	    scope.title = [years[0].label, years[range - 1].label].join(' - ');
	    scope.rows = this.split(years, columns);
	    scope.columns = columns;
	  };

	  this.compare = function (date1, date2) {
	    return date1.getFullYear() - date2.getFullYear();
	  };

	  this.handleKeyDown = function (key, evt) {
	    var date = this.activeDate.getFullYear();

	    if (key === 'left') {
	      date = date - 1;
	    } else if (key === 'up') {
	      date = date - columns;
	    } else if (key === 'right') {
	      date = date + 1;
	    } else if (key === 'down') {
	      date = date + columns;
	    } else if (key === 'pageup' || key === 'pagedown') {
	      date += (key === 'pageup' ? -1 : 1) * range;
	    } else if (key === 'home') {
	      date = getStartingYear(this.activeDate.getFullYear());
	    } else if (key === 'end') {
	      date = getStartingYear(this.activeDate.getFullYear()) + range - 1;
	    }
	    this.activeDate.setFullYear(date);
	  };
	}]).directive('uibDatepicker', function () {
	  return {
	    templateUrl: function templateUrl(element, attrs) {
	      return attrs.templateUrl || 'uib/template/datepicker/datepicker.html';
	    },
	    scope: {
	      datepickerOptions: '=?'
	    },
	    require: ['uibDatepicker', '^ngModel'],
	    restrict: 'A',
	    controller: 'UibDatepickerController',
	    controllerAs: 'datepicker',
	    link: function link(scope, element, attrs, ctrls) {
	      var datepickerCtrl = ctrls[0],
	          ngModelCtrl = ctrls[1];

	      datepickerCtrl.init(ngModelCtrl);
	    }
	  };
	}).directive('uibDaypicker', function () {
	  return {
	    templateUrl: function templateUrl(element, attrs) {
	      return attrs.templateUrl || 'uib/template/datepicker/day.html';
	    },
	    require: ['^uibDatepicker', 'uibDaypicker'],
	    restrict: 'A',
	    controller: 'UibDaypickerController',
	    link: function link(scope, element, attrs, ctrls) {
	      var datepickerCtrl = ctrls[0],
	          daypickerCtrl = ctrls[1];

	      daypickerCtrl.init(datepickerCtrl);
	    }
	  };
	}).directive('uibMonthpicker', function () {
	  return {
	    templateUrl: function templateUrl(element, attrs) {
	      return attrs.templateUrl || 'uib/template/datepicker/month.html';
	    },
	    require: ['^uibDatepicker', 'uibMonthpicker'],
	    restrict: 'A',
	    controller: 'UibMonthpickerController',
	    link: function link(scope, element, attrs, ctrls) {
	      var datepickerCtrl = ctrls[0],
	          monthpickerCtrl = ctrls[1];

	      monthpickerCtrl.init(datepickerCtrl);
	    }
	  };
	}).directive('uibYearpicker', function () {
	  return {
	    templateUrl: function templateUrl(element, attrs) {
	      return attrs.templateUrl || 'uib/template/datepicker/year.html';
	    },
	    require: ['^uibDatepicker', 'uibYearpicker'],
	    restrict: 'A',
	    controller: 'UibYearpickerController',
	    link: function link(scope, element, attrs, ctrls) {
	      var ctrl = ctrls[0];
	      angular.extend(ctrl, ctrls[1]);
	      ctrl.yearpickerInit();

	      ctrl.refreshView();
	    }
	  };
	});

	angular.module('ui.bootstrap.position', [])

	/**
	 * A set of utility methods for working with the DOM.
	 * It is meant to be used where we need to absolute-position elements in
	 * relation to another element (this is the case for tooltips, popovers,
	 * typeahead suggestions etc.).
	 */
	.factory('$uibPosition', ['$document', '$window', function ($document, $window) {
	  /**
	   * Used by scrollbarWidth() function to cache scrollbar's width.
	   * Do not access this variable directly, use scrollbarWidth() instead.
	   */
	  var SCROLLBAR_WIDTH;
	  /**
	   * scrollbar on body and html element in IE and Edge overlay
	   * content and should be considered 0 width.
	   */
	  var BODY_SCROLLBAR_WIDTH;
	  var OVERFLOW_REGEX = {
	    normal: /(auto|scroll)/,
	    hidden: /(auto|scroll|hidden)/
	  };
	  var PLACEMENT_REGEX = {
	    auto: /\s?auto?\s?/i,
	    primary: /^(top|bottom|left|right)$/,
	    secondary: /^(top|bottom|left|right|center)$/,
	    vertical: /^(top|bottom)$/
	  };
	  var BODY_REGEX = /(HTML|BODY)/;

	  return {

	    /**
	     * Provides a raw DOM element from a jQuery/jQLite element.
	     *
	     * @param {element} elem - The element to convert.
	     *
	     * @returns {element} A HTML element.
	     */
	    getRawNode: function getRawNode(elem) {
	      return elem.nodeName ? elem : elem[0] || elem;
	    },

	    /**
	     * Provides a parsed number for a style property.  Strips
	     * units and casts invalid numbers to 0.
	     *
	     * @param {string} value - The style value to parse.
	     *
	     * @returns {number} A valid number.
	     */
	    parseStyle: function parseStyle(value) {
	      value = parseFloat(value);
	      return isFinite(value) ? value : 0;
	    },

	    /**
	     * Provides the closest positioned ancestor.
	     *
	     * @param {element} element - The element to get the offest parent for.
	     *
	     * @returns {element} The closest positioned ancestor.
	     */
	    offsetParent: function offsetParent(elem) {
	      elem = this.getRawNode(elem);

	      var offsetParent = elem.offsetParent || $document[0].documentElement;

	      function isStaticPositioned(el) {
	        return ($window.getComputedStyle(el).position || 'static') === 'static';
	      }

	      while (offsetParent && offsetParent !== $document[0].documentElement && isStaticPositioned(offsetParent)) {
	        offsetParent = offsetParent.offsetParent;
	      }

	      return offsetParent || $document[0].documentElement;
	    },

	    /**
	     * Provides the scrollbar width, concept from TWBS measureScrollbar()
	     * function in https://github.com/twbs/bootstrap/blob/master/js/modal.js
	     * In IE and Edge, scollbar on body and html element overlay and should
	     * return a width of 0.
	     *
	     * @returns {number} The width of the browser scollbar.
	     */
	    scrollbarWidth: function scrollbarWidth(isBody) {
	      if (isBody) {
	        if (angular.isUndefined(BODY_SCROLLBAR_WIDTH)) {
	          var bodyElem = $document.find('body');
	          bodyElem.addClass('uib-position-body-scrollbar-measure');
	          BODY_SCROLLBAR_WIDTH = $window.innerWidth - bodyElem[0].clientWidth;
	          BODY_SCROLLBAR_WIDTH = isFinite(BODY_SCROLLBAR_WIDTH) ? BODY_SCROLLBAR_WIDTH : 0;
	          bodyElem.removeClass('uib-position-body-scrollbar-measure');
	        }
	        return BODY_SCROLLBAR_WIDTH;
	      }

	      if (angular.isUndefined(SCROLLBAR_WIDTH)) {
	        var scrollElem = angular.element('<div class="uib-position-scrollbar-measure"></div>');
	        $document.find('body').append(scrollElem);
	        SCROLLBAR_WIDTH = scrollElem[0].offsetWidth - scrollElem[0].clientWidth;
	        SCROLLBAR_WIDTH = isFinite(SCROLLBAR_WIDTH) ? SCROLLBAR_WIDTH : 0;
	        scrollElem.remove();
	      }

	      return SCROLLBAR_WIDTH;
	    },

	    /**
	     * Provides the padding required on an element to replace the scrollbar.
	     *
	     * @returns {object} An object with the following properties:
	     *   <ul>
	     *     <li>**scrollbarWidth**: the width of the scrollbar</li>
	     *     <li>**widthOverflow**: whether the the width is overflowing</li>
	     *     <li>**right**: the amount of right padding on the element needed to replace the scrollbar</li>
	     *     <li>**rightOriginal**: the amount of right padding currently on the element</li>
	     *     <li>**heightOverflow**: whether the the height is overflowing</li>
	     *     <li>**bottom**: the amount of bottom padding on the element needed to replace the scrollbar</li>
	     *     <li>**bottomOriginal**: the amount of bottom padding currently on the element</li>
	     *   </ul>
	     */
	    scrollbarPadding: function scrollbarPadding(elem) {
	      elem = this.getRawNode(elem);

	      var elemStyle = $window.getComputedStyle(elem);
	      var paddingRight = this.parseStyle(elemStyle.paddingRight);
	      var paddingBottom = this.parseStyle(elemStyle.paddingBottom);
	      var scrollParent = this.scrollParent(elem, false, true);
	      var scrollbarWidth = this.scrollbarWidth(BODY_REGEX.test(scrollParent.tagName));

	      return {
	        scrollbarWidth: scrollbarWidth,
	        widthOverflow: scrollParent.scrollWidth > scrollParent.clientWidth,
	        right: paddingRight + scrollbarWidth,
	        originalRight: paddingRight,
	        heightOverflow: scrollParent.scrollHeight > scrollParent.clientHeight,
	        bottom: paddingBottom + scrollbarWidth,
	        originalBottom: paddingBottom
	      };
	    },

	    /**
	     * Checks to see if the element is scrollable.
	     *
	     * @param {element} elem - The element to check.
	     * @param {boolean=} [includeHidden=false] - Should scroll style of 'hidden' be considered,
	     *   default is false.
	     *
	     * @returns {boolean} Whether the element is scrollable.
	     */
	    isScrollable: function isScrollable(elem, includeHidden) {
	      elem = this.getRawNode(elem);

	      var overflowRegex = includeHidden ? OVERFLOW_REGEX.hidden : OVERFLOW_REGEX.normal;
	      var elemStyle = $window.getComputedStyle(elem);
	      return overflowRegex.test(elemStyle.overflow + elemStyle.overflowY + elemStyle.overflowX);
	    },

	    /**
	     * Provides the closest scrollable ancestor.
	     * A port of the jQuery UI scrollParent method:
	     * https://github.com/jquery/jquery-ui/blob/master/ui/scroll-parent.js
	     *
	     * @param {element} elem - The element to find the scroll parent of.
	     * @param {boolean=} [includeHidden=false] - Should scroll style of 'hidden' be considered,
	     *   default is false.
	     * @param {boolean=} [includeSelf=false] - Should the element being passed be
	     * included in the scrollable llokup.
	     *
	     * @returns {element} A HTML element.
	     */
	    scrollParent: function scrollParent(elem, includeHidden, includeSelf) {
	      elem = this.getRawNode(elem);

	      var overflowRegex = includeHidden ? OVERFLOW_REGEX.hidden : OVERFLOW_REGEX.normal;
	      var documentEl = $document[0].documentElement;
	      var elemStyle = $window.getComputedStyle(elem);
	      if (includeSelf && overflowRegex.test(elemStyle.overflow + elemStyle.overflowY + elemStyle.overflowX)) {
	        return elem;
	      }
	      var excludeStatic = elemStyle.position === 'absolute';
	      var scrollParent = elem.parentElement || documentEl;

	      if (scrollParent === documentEl || elemStyle.position === 'fixed') {
	        return documentEl;
	      }

	      while (scrollParent.parentElement && scrollParent !== documentEl) {
	        var spStyle = $window.getComputedStyle(scrollParent);
	        if (excludeStatic && spStyle.position !== 'static') {
	          excludeStatic = false;
	        }

	        if (!excludeStatic && overflowRegex.test(spStyle.overflow + spStyle.overflowY + spStyle.overflowX)) {
	          break;
	        }
	        scrollParent = scrollParent.parentElement;
	      }

	      return scrollParent;
	    },

	    /**
	     * Provides read-only equivalent of jQuery's position function:
	     * http://api.jquery.com/position/ - distance to closest positioned
	     * ancestor.  Does not account for margins by default like jQuery position.
	     *
	     * @param {element} elem - The element to caclulate the position on.
	     * @param {boolean=} [includeMargins=false] - Should margins be accounted
	     * for, default is false.
	     *
	     * @returns {object} An object with the following properties:
	     *   <ul>
	     *     <li>**width**: the width of the element</li>
	     *     <li>**height**: the height of the element</li>
	     *     <li>**top**: distance to top edge of offset parent</li>
	     *     <li>**left**: distance to left edge of offset parent</li>
	     *   </ul>
	     */
	    position: function position(elem, includeMagins) {
	      elem = this.getRawNode(elem);

	      var elemOffset = this.offset(elem);
	      if (includeMagins) {
	        var elemStyle = $window.getComputedStyle(elem);
	        elemOffset.top -= this.parseStyle(elemStyle.marginTop);
	        elemOffset.left -= this.parseStyle(elemStyle.marginLeft);
	      }
	      var parent = this.offsetParent(elem);
	      var parentOffset = { top: 0, left: 0 };

	      if (parent !== $document[0].documentElement) {
	        parentOffset = this.offset(parent);
	        parentOffset.top += parent.clientTop - parent.scrollTop;
	        parentOffset.left += parent.clientLeft - parent.scrollLeft;
	      }

	      return {
	        width: Math.round(angular.isNumber(elemOffset.width) ? elemOffset.width : elem.offsetWidth),
	        height: Math.round(angular.isNumber(elemOffset.height) ? elemOffset.height : elem.offsetHeight),
	        top: Math.round(elemOffset.top - parentOffset.top),
	        left: Math.round(elemOffset.left - parentOffset.left)
	      };
	    },

	    /**
	     * Provides read-only equivalent of jQuery's offset function:
	     * http://api.jquery.com/offset/ - distance to viewport.  Does
	     * not account for borders, margins, or padding on the body
	     * element.
	     *
	     * @param {element} elem - The element to calculate the offset on.
	     *
	     * @returns {object} An object with the following properties:
	     *   <ul>
	     *     <li>**width**: the width of the element</li>
	     *     <li>**height**: the height of the element</li>
	     *     <li>**top**: distance to top edge of viewport</li>
	     *     <li>**right**: distance to bottom edge of viewport</li>
	     *   </ul>
	     */
	    offset: function offset(elem) {
	      elem = this.getRawNode(elem);

	      var elemBCR = elem.getBoundingClientRect();
	      return {
	        width: Math.round(angular.isNumber(elemBCR.width) ? elemBCR.width : elem.offsetWidth),
	        height: Math.round(angular.isNumber(elemBCR.height) ? elemBCR.height : elem.offsetHeight),
	        top: Math.round(elemBCR.top + ($window.pageYOffset || $document[0].documentElement.scrollTop)),
	        left: Math.round(elemBCR.left + ($window.pageXOffset || $document[0].documentElement.scrollLeft))
	      };
	    },

	    /**
	     * Provides offset distance to the closest scrollable ancestor
	     * or viewport.  Accounts for border and scrollbar width.
	     *
	     * Right and bottom dimensions represent the distance to the
	     * respective edge of the viewport element.  If the element
	     * edge extends beyond the viewport, a negative value will be
	     * reported.
	     *
	     * @param {element} elem - The element to get the viewport offset for.
	     * @param {boolean=} [useDocument=false] - Should the viewport be the document element instead
	     * of the first scrollable element, default is false.
	     * @param {boolean=} [includePadding=true] - Should the padding on the offset parent element
	     * be accounted for, default is true.
	     *
	     * @returns {object} An object with the following properties:
	     *   <ul>
	     *     <li>**top**: distance to the top content edge of viewport element</li>
	     *     <li>**bottom**: distance to the bottom content edge of viewport element</li>
	     *     <li>**left**: distance to the left content edge of viewport element</li>
	     *     <li>**right**: distance to the right content edge of viewport element</li>
	     *   </ul>
	     */
	    viewportOffset: function viewportOffset(elem, useDocument, includePadding) {
	      elem = this.getRawNode(elem);
	      includePadding = includePadding !== false ? true : false;

	      var elemBCR = elem.getBoundingClientRect();
	      var offsetBCR = { top: 0, left: 0, bottom: 0, right: 0 };

	      var offsetParent = useDocument ? $document[0].documentElement : this.scrollParent(elem);
	      var offsetParentBCR = offsetParent.getBoundingClientRect();

	      offsetBCR.top = offsetParentBCR.top + offsetParent.clientTop;
	      offsetBCR.left = offsetParentBCR.left + offsetParent.clientLeft;
	      if (offsetParent === $document[0].documentElement) {
	        offsetBCR.top += $window.pageYOffset;
	        offsetBCR.left += $window.pageXOffset;
	      }
	      offsetBCR.bottom = offsetBCR.top + offsetParent.clientHeight;
	      offsetBCR.right = offsetBCR.left + offsetParent.clientWidth;

	      if (includePadding) {
	        var offsetParentStyle = $window.getComputedStyle(offsetParent);
	        offsetBCR.top += this.parseStyle(offsetParentStyle.paddingTop);
	        offsetBCR.bottom -= this.parseStyle(offsetParentStyle.paddingBottom);
	        offsetBCR.left += this.parseStyle(offsetParentStyle.paddingLeft);
	        offsetBCR.right -= this.parseStyle(offsetParentStyle.paddingRight);
	      }

	      return {
	        top: Math.round(elemBCR.top - offsetBCR.top),
	        bottom: Math.round(offsetBCR.bottom - elemBCR.bottom),
	        left: Math.round(elemBCR.left - offsetBCR.left),
	        right: Math.round(offsetBCR.right - elemBCR.right)
	      };
	    },

	    /**
	     * Provides an array of placement values parsed from a placement string.
	     * Along with the 'auto' indicator, supported placement strings are:
	     *   <ul>
	     *     <li>top: element on top, horizontally centered on host element.</li>
	     *     <li>top-left: element on top, left edge aligned with host element left edge.</li>
	     *     <li>top-right: element on top, lerightft edge aligned with host element right edge.</li>
	     *     <li>bottom: element on bottom, horizontally centered on host element.</li>
	     *     <li>bottom-left: element on bottom, left edge aligned with host element left edge.</li>
	     *     <li>bottom-right: element on bottom, right edge aligned with host element right edge.</li>
	     *     <li>left: element on left, vertically centered on host element.</li>
	     *     <li>left-top: element on left, top edge aligned with host element top edge.</li>
	     *     <li>left-bottom: element on left, bottom edge aligned with host element bottom edge.</li>
	     *     <li>right: element on right, vertically centered on host element.</li>
	     *     <li>right-top: element on right, top edge aligned with host element top edge.</li>
	     *     <li>right-bottom: element on right, bottom edge aligned with host element bottom edge.</li>
	     *   </ul>
	     * A placement string with an 'auto' indicator is expected to be
	     * space separated from the placement, i.e: 'auto bottom-left'  If
	     * the primary and secondary placement values do not match 'top,
	     * bottom, left, right' then 'top' will be the primary placement and
	     * 'center' will be the secondary placement.  If 'auto' is passed, true
	     * will be returned as the 3rd value of the array.
	     *
	     * @param {string} placement - The placement string to parse.
	     *
	     * @returns {array} An array with the following values
	     * <ul>
	     *   <li>**[0]**: The primary placement.</li>
	     *   <li>**[1]**: The secondary placement.</li>
	     *   <li>**[2]**: If auto is passed: true, else undefined.</li>
	     * </ul>
	     */
	    parsePlacement: function parsePlacement(placement) {
	      var autoPlace = PLACEMENT_REGEX.auto.test(placement);
	      if (autoPlace) {
	        placement = placement.replace(PLACEMENT_REGEX.auto, '');
	      }

	      placement = placement.split('-');

	      placement[0] = placement[0] || 'top';
	      if (!PLACEMENT_REGEX.primary.test(placement[0])) {
	        placement[0] = 'top';
	      }

	      placement[1] = placement[1] || 'center';
	      if (!PLACEMENT_REGEX.secondary.test(placement[1])) {
	        placement[1] = 'center';
	      }

	      if (autoPlace) {
	        placement[2] = true;
	      } else {
	        placement[2] = false;
	      }

	      return placement;
	    },

	    /**
	     * Provides coordinates for an element to be positioned relative to
	     * another element.  Passing 'auto' as part of the placement parameter
	     * will enable smart placement - where the element fits. i.e:
	     * 'auto left-top' will check to see if there is enough space to the left
	     * of the hostElem to fit the targetElem, if not place right (same for secondary
	     * top placement).  Available space is calculated using the viewportOffset
	     * function.
	     *
	     * @param {element} hostElem - The element to position against.
	     * @param {element} targetElem - The element to position.
	     * @param {string=} [placement=top] - The placement for the targetElem,
	     *   default is 'top'. 'center' is assumed as secondary placement for
	     *   'top', 'left', 'right', and 'bottom' placements.  Available placements are:
	     *   <ul>
	     *     <li>top</li>
	     *     <li>top-right</li>
	     *     <li>top-left</li>
	     *     <li>bottom</li>
	     *     <li>bottom-left</li>
	     *     <li>bottom-right</li>
	     *     <li>left</li>
	     *     <li>left-top</li>
	     *     <li>left-bottom</li>
	     *     <li>right</li>
	     *     <li>right-top</li>
	     *     <li>right-bottom</li>
	     *   </ul>
	     * @param {boolean=} [appendToBody=false] - Should the top and left values returned
	     *   be calculated from the body element, default is false.
	     *
	     * @returns {object} An object with the following properties:
	     *   <ul>
	     *     <li>**top**: Value for targetElem top.</li>
	     *     <li>**left**: Value for targetElem left.</li>
	     *     <li>**placement**: The resolved placement.</li>
	     *   </ul>
	     */
	    positionElements: function positionElements(hostElem, targetElem, placement, appendToBody) {
	      hostElem = this.getRawNode(hostElem);
	      targetElem = this.getRawNode(targetElem);

	      // need to read from prop to support tests.
	      var targetWidth = angular.isDefined(targetElem.offsetWidth) ? targetElem.offsetWidth : targetElem.prop('offsetWidth');
	      var targetHeight = angular.isDefined(targetElem.offsetHeight) ? targetElem.offsetHeight : targetElem.prop('offsetHeight');

	      placement = this.parsePlacement(placement);

	      var hostElemPos = appendToBody ? this.offset(hostElem) : this.position(hostElem);
	      var targetElemPos = { top: 0, left: 0, placement: '' };

	      if (placement[2]) {
	        var viewportOffset = this.viewportOffset(hostElem, appendToBody);

	        var targetElemStyle = $window.getComputedStyle(targetElem);
	        var adjustedSize = {
	          width: targetWidth + Math.round(Math.abs(this.parseStyle(targetElemStyle.marginLeft) + this.parseStyle(targetElemStyle.marginRight))),
	          height: targetHeight + Math.round(Math.abs(this.parseStyle(targetElemStyle.marginTop) + this.parseStyle(targetElemStyle.marginBottom)))
	        };

	        placement[0] = placement[0] === 'top' && adjustedSize.height > viewportOffset.top && adjustedSize.height <= viewportOffset.bottom ? 'bottom' : placement[0] === 'bottom' && adjustedSize.height > viewportOffset.bottom && adjustedSize.height <= viewportOffset.top ? 'top' : placement[0] === 'left' && adjustedSize.width > viewportOffset.left && adjustedSize.width <= viewportOffset.right ? 'right' : placement[0] === 'right' && adjustedSize.width > viewportOffset.right && adjustedSize.width <= viewportOffset.left ? 'left' : placement[0];

	        placement[1] = placement[1] === 'top' && adjustedSize.height - hostElemPos.height > viewportOffset.bottom && adjustedSize.height - hostElemPos.height <= viewportOffset.top ? 'bottom' : placement[1] === 'bottom' && adjustedSize.height - hostElemPos.height > viewportOffset.top && adjustedSize.height - hostElemPos.height <= viewportOffset.bottom ? 'top' : placement[1] === 'left' && adjustedSize.width - hostElemPos.width > viewportOffset.right && adjustedSize.width - hostElemPos.width <= viewportOffset.left ? 'right' : placement[1] === 'right' && adjustedSize.width - hostElemPos.width > viewportOffset.left && adjustedSize.width - hostElemPos.width <= viewportOffset.right ? 'left' : placement[1];

	        if (placement[1] === 'center') {
	          if (PLACEMENT_REGEX.vertical.test(placement[0])) {
	            var xOverflow = hostElemPos.width / 2 - targetWidth / 2;
	            if (viewportOffset.left + xOverflow < 0 && adjustedSize.width - hostElemPos.width <= viewportOffset.right) {
	              placement[1] = 'left';
	            } else if (viewportOffset.right + xOverflow < 0 && adjustedSize.width - hostElemPos.width <= viewportOffset.left) {
	              placement[1] = 'right';
	            }
	          } else {
	            var yOverflow = hostElemPos.height / 2 - adjustedSize.height / 2;
	            if (viewportOffset.top + yOverflow < 0 && adjustedSize.height - hostElemPos.height <= viewportOffset.bottom) {
	              placement[1] = 'top';
	            } else if (viewportOffset.bottom + yOverflow < 0 && adjustedSize.height - hostElemPos.height <= viewportOffset.top) {
	              placement[1] = 'bottom';
	            }
	          }
	        }
	      }

	      switch (placement[0]) {
	        case 'top':
	          targetElemPos.top = hostElemPos.top - targetHeight;
	          break;
	        case 'bottom':
	          targetElemPos.top = hostElemPos.top + hostElemPos.height;
	          break;
	        case 'left':
	          targetElemPos.left = hostElemPos.left - targetWidth;
	          break;
	        case 'right':
	          targetElemPos.left = hostElemPos.left + hostElemPos.width;
	          break;
	      }

	      switch (placement[1]) {
	        case 'top':
	          targetElemPos.top = hostElemPos.top;
	          break;
	        case 'bottom':
	          targetElemPos.top = hostElemPos.top + hostElemPos.height - targetHeight;
	          break;
	        case 'left':
	          targetElemPos.left = hostElemPos.left;
	          break;
	        case 'right':
	          targetElemPos.left = hostElemPos.left + hostElemPos.width - targetWidth;
	          break;
	        case 'center':
	          if (PLACEMENT_REGEX.vertical.test(placement[0])) {
	            targetElemPos.left = hostElemPos.left + hostElemPos.width / 2 - targetWidth / 2;
	          } else {
	            targetElemPos.top = hostElemPos.top + hostElemPos.height / 2 - targetHeight / 2;
	          }
	          break;
	      }

	      targetElemPos.top = Math.round(targetElemPos.top);
	      targetElemPos.left = Math.round(targetElemPos.left);
	      targetElemPos.placement = placement[1] === 'center' ? placement[0] : placement[0] + '-' + placement[1];

	      return targetElemPos;
	    },

	    /**
	     * Provides a way to adjust the top positioning after first
	     * render to correctly align element to top after content
	     * rendering causes resized element height
	     *
	     * @param {array} placementClasses - The array of strings of classes
	     * element should have.
	     * @param {object} containerPosition - The object with container
	     * position information
	     * @param {number} initialHeight - The initial height for the elem.
	     * @param {number} currentHeight - The current height for the elem.
	     */
	    adjustTop: function adjustTop(placementClasses, containerPosition, initialHeight, currentHeight) {
	      if (placementClasses.indexOf('top') !== -1 && initialHeight !== currentHeight) {
	        return {
	          top: containerPosition.top - currentHeight + 'px'
	        };
	      }
	    },

	    /**
	     * Provides a way for positioning tooltip & dropdown
	     * arrows when using placement options beyond the standard
	     * left, right, top, or bottom.
	     *
	     * @param {element} elem - The tooltip/dropdown element.
	     * @param {string} placement - The placement for the elem.
	     */
	    positionArrow: function positionArrow(elem, placement) {
	      elem = this.getRawNode(elem);

	      var innerElem = elem.querySelector('.tooltip-inner, .popover-inner');
	      if (!innerElem) {
	        return;
	      }

	      var isTooltip = angular.element(innerElem).hasClass('tooltip-inner');

	      var arrowElem = isTooltip ? elem.querySelector('.tooltip-arrow') : elem.querySelector('.arrow');
	      if (!arrowElem) {
	        return;
	      }

	      var arrowCss = {
	        top: '',
	        bottom: '',
	        left: '',
	        right: ''
	      };

	      placement = this.parsePlacement(placement);
	      if (placement[1] === 'center') {
	        // no adjustment necessary - just reset styles
	        angular.element(arrowElem).css(arrowCss);
	        return;
	      }

	      var borderProp = 'border-' + placement[0] + '-width';
	      var borderWidth = $window.getComputedStyle(arrowElem)[borderProp];

	      var borderRadiusProp = 'border-';
	      if (PLACEMENT_REGEX.vertical.test(placement[0])) {
	        borderRadiusProp += placement[0] + '-' + placement[1];
	      } else {
	        borderRadiusProp += placement[1] + '-' + placement[0];
	      }
	      borderRadiusProp += '-radius';
	      var borderRadius = $window.getComputedStyle(isTooltip ? innerElem : elem)[borderRadiusProp];

	      switch (placement[0]) {
	        case 'top':
	          arrowCss.bottom = isTooltip ? '0' : '-' + borderWidth;
	          break;
	        case 'bottom':
	          arrowCss.top = isTooltip ? '0' : '-' + borderWidth;
	          break;
	        case 'left':
	          arrowCss.right = isTooltip ? '0' : '-' + borderWidth;
	          break;
	        case 'right':
	          arrowCss.left = isTooltip ? '0' : '-' + borderWidth;
	          break;
	      }

	      arrowCss[placement[1]] = borderRadius;

	      angular.element(arrowElem).css(arrowCss);
	    }
	  };
	}]);

	angular.module('ui.bootstrap.datepickerPopup', ['ui.bootstrap.datepicker', 'ui.bootstrap.position']).value('$datepickerPopupLiteralWarning', true).constant('uibDatepickerPopupConfig', {
	  altInputFormats: [],
	  appendToBody: false,
	  clearText: 'Clear',
	  closeOnDateSelection: true,
	  closeText: 'Done',
	  currentText: 'Today',
	  datepickerPopup: 'yyyy-MM-dd',
	  datepickerPopupTemplateUrl: 'uib/template/datepickerPopup/popup.html',
	  datepickerTemplateUrl: 'uib/template/datepicker/datepicker.html',
	  html5Types: {
	    date: 'yyyy-MM-dd',
	    'datetime-local': 'yyyy-MM-ddTHH:mm:ss.sss',
	    'month': 'yyyy-MM'
	  },
	  onOpenFocus: true,
	  showButtonBar: true,
	  placement: 'auto bottom-left'
	}).controller('UibDatepickerPopupController', ['$scope', '$element', '$attrs', '$compile', '$log', '$parse', '$window', '$document', '$rootScope', '$uibPosition', 'dateFilter', 'uibDateParser', 'uibDatepickerPopupConfig', '$timeout', 'uibDatepickerConfig', '$datepickerPopupLiteralWarning', function ($scope, $element, $attrs, $compile, $log, $parse, $window, $document, $rootScope, $position, dateFilter, dateParser, datepickerPopupConfig, $timeout, datepickerConfig, $datepickerPopupLiteralWarning) {
	  var cache = {},
	      isHtml5DateInput = false;
	  var dateFormat,
	      closeOnDateSelection,
	      appendToBody,
	      onOpenFocus,
	      datepickerPopupTemplateUrl,
	      datepickerTemplateUrl,
	      popupEl,
	      datepickerEl,
	      scrollParentEl,
	      ngModel,
	      ngModelOptions,
	      $popup,
	      altInputFormats,
	      watchListeners = [];

	  this.init = function (_ngModel_) {
	    ngModel = _ngModel_;
	    ngModelOptions = angular.isObject(_ngModel_.$options) ? _ngModel_.$options : {
	      timezone: null
	    };
	    closeOnDateSelection = angular.isDefined($attrs.closeOnDateSelection) ? $scope.$parent.$eval($attrs.closeOnDateSelection) : datepickerPopupConfig.closeOnDateSelection;
	    appendToBody = angular.isDefined($attrs.datepickerAppendToBody) ? $scope.$parent.$eval($attrs.datepickerAppendToBody) : datepickerPopupConfig.appendToBody;
	    onOpenFocus = angular.isDefined($attrs.onOpenFocus) ? $scope.$parent.$eval($attrs.onOpenFocus) : datepickerPopupConfig.onOpenFocus;
	    datepickerPopupTemplateUrl = angular.isDefined($attrs.datepickerPopupTemplateUrl) ? $attrs.datepickerPopupTemplateUrl : datepickerPopupConfig.datepickerPopupTemplateUrl;
	    datepickerTemplateUrl = angular.isDefined($attrs.datepickerTemplateUrl) ? $attrs.datepickerTemplateUrl : datepickerPopupConfig.datepickerTemplateUrl;
	    altInputFormats = angular.isDefined($attrs.altInputFormats) ? $scope.$parent.$eval($attrs.altInputFormats) : datepickerPopupConfig.altInputFormats;

	    $scope.showButtonBar = angular.isDefined($attrs.showButtonBar) ? $scope.$parent.$eval($attrs.showButtonBar) : datepickerPopupConfig.showButtonBar;

	    if (datepickerPopupConfig.html5Types[$attrs.type]) {
	      dateFormat = datepickerPopupConfig.html5Types[$attrs.type];
	      isHtml5DateInput = true;
	    } else {
	      dateFormat = $attrs.uibDatepickerPopup || datepickerPopupConfig.datepickerPopup;
	      $attrs.$observe('uibDatepickerPopup', function (value, oldValue) {
	        var newDateFormat = value || datepickerPopupConfig.datepickerPopup;
	        // Invalidate the $modelValue to ensure that formatters re-run
	        // FIXME: Refactor when PR is merged: https://github.com/angular/angular.js/pull/10764
	        if (newDateFormat !== dateFormat) {
	          dateFormat = newDateFormat;
	          ngModel.$modelValue = null;

	          if (!dateFormat) {
	            throw new Error('uibDatepickerPopup must have a date format specified.');
	          }
	        }
	      });
	    }

	    if (!dateFormat) {
	      throw new Error('uibDatepickerPopup must have a date format specified.');
	    }

	    if (isHtml5DateInput && $attrs.uibDatepickerPopup) {
	      throw new Error('HTML5 date input types do not support custom formats.');
	    }

	    // popup element used to display calendar
	    popupEl = angular.element('<div uib-datepicker-popup-wrap><div uib-datepicker></div></div>');

	    popupEl.attr({
	      'ng-model': 'date',
	      'ng-change': 'dateSelection(date)',
	      'template-url': datepickerPopupTemplateUrl
	    });

	    // datepicker element
	    datepickerEl = angular.element(popupEl.children()[0]);
	    datepickerEl.attr('template-url', datepickerTemplateUrl);

	    if (!$scope.datepickerOptions) {
	      $scope.datepickerOptions = {};
	    }

	    if (isHtml5DateInput) {
	      if ($attrs.type === 'month') {
	        $scope.datepickerOptions.datepickerMode = 'month';
	        $scope.datepickerOptions.minMode = 'month';
	      }
	    }

	    datepickerEl.attr('datepicker-options', 'datepickerOptions');

	    if (!isHtml5DateInput) {
	      // Internal API to maintain the correct ng-invalid-[key] class
	      ngModel.$$parserName = 'date';
	      ngModel.$validators.date = validator;
	      ngModel.$parsers.unshift(parseDate);
	      ngModel.$formatters.push(function (value) {
	        if (ngModel.$isEmpty(value)) {
	          $scope.date = value;
	          return value;
	        }

	        if (angular.isNumber(value)) {
	          value = new Date(value);
	        }

	        $scope.date = dateParser.fromTimezone(value, ngModelOptions.timezone);

	        return dateParser.filter($scope.date, dateFormat);
	      });
	    } else {
	      ngModel.$formatters.push(function (value) {
	        $scope.date = dateParser.fromTimezone(value, ngModelOptions.timezone);
	        return value;
	      });
	    }

	    // Detect changes in the view from the text box
	    ngModel.$viewChangeListeners.push(function () {
	      $scope.date = parseDateString(ngModel.$viewValue);
	    });

	    $element.on('keydown', inputKeydownBind);

	    $popup = $compile(popupEl)($scope);
	    // Prevent jQuery cache memory leak (template is now redundant after linking)
	    popupEl.remove();

	    if (appendToBody) {
	      $document.find('body').append($popup);
	    } else {
	      $element.after($popup);
	    }

	    $scope.$on('$destroy', function () {
	      if ($scope.isOpen === true) {
	        if (!$rootScope.$$phase) {
	          $scope.$apply(function () {
	            $scope.isOpen = false;
	          });
	        }
	      }

	      $popup.remove();
	      $element.off('keydown', inputKeydownBind);
	      $document.off('click', documentClickBind);
	      if (scrollParentEl) {
	        scrollParentEl.off('scroll', positionPopup);
	      }
	      angular.element($window).off('resize', positionPopup);

	      //Clear all watch listeners on destroy
	      while (watchListeners.length) {
	        watchListeners.shift()();
	      }
	    });
	  };

	  $scope.getText = function (key) {
	    return $scope[key + 'Text'] || datepickerPopupConfig[key + 'Text'];
	  };

	  $scope.isDisabled = function (date) {
	    if (date === 'today') {
	      date = dateParser.fromTimezone(new Date(), ngModelOptions.timezone);
	    }

	    var dates = {};
	    angular.forEach(['minDate', 'maxDate'], function (key) {
	      if (!$scope.datepickerOptions[key]) {
	        dates[key] = null;
	      } else if (angular.isDate($scope.datepickerOptions[key])) {
	        dates[key] = new Date($scope.datepickerOptions[key]);
	      } else {
	        if ($datepickerPopupLiteralWarning) {
	          $log.warn('Literal date support has been deprecated, please switch to date object usage');
	        }

	        dates[key] = new Date(dateFilter($scope.datepickerOptions[key], 'medium'));
	      }
	    });

	    return $scope.datepickerOptions && dates.minDate && $scope.compare(date, dates.minDate) < 0 || dates.maxDate && $scope.compare(date, dates.maxDate) > 0;
	  };

	  $scope.compare = function (date1, date2) {
	    return new Date(date1.getFullYear(), date1.getMonth(), date1.getDate()) - new Date(date2.getFullYear(), date2.getMonth(), date2.getDate());
	  };

	  // Inner change
	  $scope.dateSelection = function (dt) {
	    $scope.date = dt;
	    var date = $scope.date ? dateParser.filter($scope.date, dateFormat) : null; // Setting to NULL is necessary for form validators to function
	    $element.val(date);
	    ngModel.$setViewValue(date);

	    if (closeOnDateSelection) {
	      $scope.isOpen = false;
	      $element[0].focus();
	    }
	  };

	  $scope.keydown = function (evt) {
	    if (evt.which === 27) {
	      evt.stopPropagation();
	      $scope.isOpen = false;
	      $element[0].focus();
	    }
	  };

	  $scope.select = function (date, evt) {
	    evt.stopPropagation();

	    if (date === 'today') {
	      var today = new Date();
	      if (angular.isDate($scope.date)) {
	        date = new Date($scope.date);
	        date.setFullYear(today.getFullYear(), today.getMonth(), today.getDate());
	      } else {
	        date = dateParser.fromTimezone(today, ngModelOptions.timezone);
	        date.setHours(0, 0, 0, 0);
	      }
	    }
	    $scope.dateSelection(date);
	  };

	  $scope.close = function (evt) {
	    evt.stopPropagation();

	    $scope.isOpen = false;
	    $element[0].focus();
	  };

	  $scope.disabled = angular.isDefined($attrs.disabled) || false;
	  if ($attrs.ngDisabled) {
	    watchListeners.push($scope.$parent.$watch($parse($attrs.ngDisabled), function (disabled) {
	      $scope.disabled = disabled;
	    }));
	  }

	  $scope.$watch('isOpen', function (value) {
	    if (value) {
	      if (!$scope.disabled) {
	        $timeout(function () {
	          positionPopup();

	          if (onOpenFocus) {
	            $scope.$broadcast('uib:datepicker.focus');
	          }

	          $document.on('click', documentClickBind);

	          var placement = $attrs.popupPlacement ? $attrs.popupPlacement : datepickerPopupConfig.placement;
	          if (appendToBody || $position.parsePlacement(placement)[2]) {
	            scrollParentEl = scrollParentEl || angular.element($position.scrollParent($element));
	            if (scrollParentEl) {
	              scrollParentEl.on('scroll', positionPopup);
	            }
	          } else {
	            scrollParentEl = null;
	          }

	          angular.element($window).on('resize', positionPopup);
	        }, 0, false);
	      } else {
	        $scope.isOpen = false;
	      }
	    } else {
	      $document.off('click', documentClickBind);
	      if (scrollParentEl) {
	        scrollParentEl.off('scroll', positionPopup);
	      }
	      angular.element($window).off('resize', positionPopup);
	    }
	  });

	  function cameltoDash(string) {
	    return string.replace(/([A-Z])/g, function ($1) {
	      return '-' + $1.toLowerCase();
	    });
	  }

	  function parseDateString(viewValue) {
	    var date = dateParser.parse(viewValue, dateFormat, $scope.date);
	    if (isNaN(date)) {
	      for (var i = 0; i < altInputFormats.length; i++) {
	        date = dateParser.parse(viewValue, altInputFormats[i], $scope.date);
	        if (!isNaN(date)) {
	          return date;
	        }
	      }
	    }
	    return date;
	  }

	  function parseDate(viewValue) {
	    if (angular.isNumber(viewValue)) {
	      // presumably timestamp to date object
	      viewValue = new Date(viewValue);
	    }

	    if (!viewValue) {
	      return null;
	    }

	    if (angular.isDate(viewValue) && !isNaN(viewValue)) {
	      return viewValue;
	    }

	    if (angular.isString(viewValue)) {
	      var date = parseDateString(viewValue);
	      if (!isNaN(date)) {
	        return dateParser.toTimezone(date, ngModelOptions.timezone);
	      }
	    }

	    return ngModel.$options && ngModel.$options.allowInvalid ? viewValue : undefined;
	  }

	  function validator(modelValue, viewValue) {
	    var value = modelValue || viewValue;

	    if (!$attrs.ngRequired && !value) {
	      return true;
	    }

	    if (angular.isNumber(value)) {
	      value = new Date(value);
	    }

	    if (!value) {
	      return true;
	    }

	    if (angular.isDate(value) && !isNaN(value)) {
	      return true;
	    }

	    if (angular.isString(value)) {
	      return !isNaN(parseDateString(value));
	    }

	    return false;
	  }

	  function documentClickBind(event) {
	    if (!$scope.isOpen && $scope.disabled) {
	      return;
	    }

	    var popup = $popup[0];
	    var dpContainsTarget = $element[0].contains(event.target);
	    // The popup node may not be an element node
	    // In some browsers (IE) only element nodes have the 'contains' function
	    var popupContainsTarget = popup.contains !== undefined && popup.contains(event.target);
	    if ($scope.isOpen && !(dpContainsTarget || popupContainsTarget)) {
	      $scope.$apply(function () {
	        $scope.isOpen = false;
	      });
	    }
	  }

	  function inputKeydownBind(evt) {
	    if (evt.which === 27 && $scope.isOpen) {
	      evt.preventDefault();
	      evt.stopPropagation();
	      $scope.$apply(function () {
	        $scope.isOpen = false;
	      });
	      $element[0].focus();
	    } else if (evt.which === 40 && !$scope.isOpen) {
	      evt.preventDefault();
	      evt.stopPropagation();
	      $scope.$apply(function () {
	        $scope.isOpen = true;
	      });
	    }
	  }

	  function positionPopup() {
	    if ($scope.isOpen) {
	      var dpElement = angular.element($popup[0].querySelector('.uib-datepicker-popup'));
	      var placement = $attrs.popupPlacement ? $attrs.popupPlacement : datepickerPopupConfig.placement;
	      var position = $position.positionElements($element, dpElement, placement, appendToBody);
	      dpElement.css({ top: position.top + 'px', left: position.left + 'px' });
	      if (dpElement.hasClass('uib-position-measure')) {
	        dpElement.removeClass('uib-position-measure');
	      }
	    }
	  }

	  $scope.$on('uib:datepicker.mode', function () {
	    $timeout(positionPopup, 0, false);
	  });
	}]).directive('uibDatepickerPopup', function () {
	  return {
	    require: ['ngModel', 'uibDatepickerPopup'],
	    controller: 'UibDatepickerPopupController',
	    scope: {
	      datepickerOptions: '=?',
	      isOpen: '=?',
	      currentText: '@',
	      clearText: '@',
	      closeText: '@'
	    },
	    link: function link(scope, element, attrs, ctrls) {
	      var ngModel = ctrls[0],
	          ctrl = ctrls[1];

	      ctrl.init(ngModel);
	    }
	  };
	}).directive('uibDatepickerPopupWrap', function () {
	  return {
	    restrict: 'A',
	    transclude: true,
	    templateUrl: function templateUrl(element, attrs) {
	      return attrs.templateUrl || 'uib/template/datepickerPopup/popup.html';
	    }
	  };
	});

	angular.module('ui.bootstrap.debounce', [])
	/**
	 * A helper, internal service that debounces a function
	 */
	.factory('$$debounce', ['$timeout', function ($timeout) {
	  return function (callback, debounceTime) {
	    var timeoutPromise;

	    return function () {
	      var self = this;
	      var args = Array.prototype.slice.call(arguments);
	      if (timeoutPromise) {
	        $timeout.cancel(timeoutPromise);
	      }

	      timeoutPromise = $timeout(function () {
	        callback.apply(self, args);
	      }, debounceTime);
	    };
	  };
	}]);

	angular.module('ui.bootstrap.multiMap', [])
	/**
	 * A helper, internal data structure that stores all references attached to key
	 */
	.factory('$$multiMap', function () {
	  return {
	    createNew: function createNew() {
	      var map = {};

	      return {
	        entries: function entries() {
	          return Object.keys(map).map(function (key) {
	            return {
	              key: key,
	              value: map[key]
	            };
	          });
	        },
	        get: function get(key) {
	          return map[key];
	        },
	        hasKey: function hasKey(key) {
	          return !!map[key];
	        },
	        keys: function keys() {
	          return Object.keys(map);
	        },
	        put: function put(key, value) {
	          if (!map[key]) {
	            map[key] = [];
	          }

	          map[key].push(value);
	        },
	        remove: function remove(key, value) {
	          var values = map[key];

	          if (!values) {
	            return;
	          }

	          var idx = values.indexOf(value);

	          if (idx !== -1) {
	            values.splice(idx, 1);
	          }

	          if (!values.length) {
	            delete map[key];
	          }
	        }
	      };
	    }
	  };
	});

	angular.module('ui.bootstrap.dropdown', ['ui.bootstrap.multiMap', 'ui.bootstrap.position']).constant('uibDropdownConfig', {
	  appendToOpenClass: 'uib-dropdown-open',
	  openClass: 'open'
	}).service('uibDropdownService', ['$document', '$rootScope', '$$multiMap', function ($document, $rootScope, $$multiMap) {
	  var openScope = null;
	  var openedContainers = $$multiMap.createNew();

	  this.isOnlyOpen = function (dropdownScope, appendTo) {
	    var openedDropdowns = openedContainers.get(appendTo);
	    if (openedDropdowns) {
	      var openDropdown = openedDropdowns.reduce(function (toClose, dropdown) {
	        if (dropdown.scope === dropdownScope) {
	          return dropdown;
	        }

	        return toClose;
	      }, {});
	      if (openDropdown) {
	        return openedDropdowns.length === 1;
	      }
	    }

	    return false;
	  };

	  this.open = function (dropdownScope, element, appendTo) {
	    if (!openScope) {
	      $document.on('click', closeDropdown);
	    }

	    if (openScope && openScope !== dropdownScope) {
	      openScope.isOpen = false;
	    }

	    openScope = dropdownScope;

	    if (!appendTo) {
	      return;
	    }

	    var openedDropdowns = openedContainers.get(appendTo);
	    if (openedDropdowns) {
	      var openedScopes = openedDropdowns.map(function (dropdown) {
	        return dropdown.scope;
	      });
	      if (openedScopes.indexOf(dropdownScope) === -1) {
	        openedContainers.put(appendTo, {
	          scope: dropdownScope
	        });
	      }
	    } else {
	      openedContainers.put(appendTo, {
	        scope: dropdownScope
	      });
	    }
	  };

	  this.close = function (dropdownScope, element, appendTo) {
	    if (openScope === dropdownScope) {
	      $document.off('click', closeDropdown);
	      $document.off('keydown', this.keybindFilter);
	      openScope = null;
	    }

	    if (!appendTo) {
	      return;
	    }

	    var openedDropdowns = openedContainers.get(appendTo);
	    if (openedDropdowns) {
	      var dropdownToClose = openedDropdowns.reduce(function (toClose, dropdown) {
	        if (dropdown.scope === dropdownScope) {
	          return dropdown;
	        }

	        return toClose;
	      }, {});
	      if (dropdownToClose) {
	        openedContainers.remove(appendTo, dropdownToClose);
	      }
	    }
	  };

	  var closeDropdown = function closeDropdown(evt) {
	    // This method may still be called during the same mouse event that
	    // unbound this event handler. So check openScope before proceeding.
	    if (!openScope) {
	      return;
	    }

	    if (evt && openScope.getAutoClose() === 'disabled') {
	      return;
	    }

	    if (evt && evt.which === 3) {
	      return;
	    }

	    var toggleElement = openScope.getToggleElement();
	    if (evt && toggleElement && toggleElement[0].contains(evt.target)) {
	      return;
	    }

	    var dropdownElement = openScope.getDropdownElement();
	    if (evt && openScope.getAutoClose() === 'outsideClick' && dropdownElement && dropdownElement[0].contains(evt.target)) {
	      return;
	    }

	    openScope.focusToggleElement();
	    openScope.isOpen = false;

	    if (!$rootScope.$$phase) {
	      openScope.$apply();
	    }
	  };

	  this.keybindFilter = function (evt) {
	    if (!openScope) {
	      // see this.close as ESC could have been pressed which kills the scope so we can not proceed
	      return;
	    }

	    var dropdownElement = openScope.getDropdownElement();
	    var toggleElement = openScope.getToggleElement();
	    var dropdownElementTargeted = dropdownElement && dropdownElement[0].contains(evt.target);
	    var toggleElementTargeted = toggleElement && toggleElement[0].contains(evt.target);
	    if (evt.which === 27) {
	      evt.stopPropagation();
	      openScope.focusToggleElement();
	      closeDropdown();
	    } else if (openScope.isKeynavEnabled() && [38, 40].indexOf(evt.which) !== -1 && openScope.isOpen && (dropdownElementTargeted || toggleElementTargeted)) {
	      evt.preventDefault();
	      evt.stopPropagation();
	      openScope.focusDropdownEntry(evt.which);
	    }
	  };
	}]).controller('UibDropdownController', ['$scope', '$element', '$attrs', '$parse', 'uibDropdownConfig', 'uibDropdownService', '$animate', '$uibPosition', '$document', '$compile', '$templateRequest', function ($scope, $element, $attrs, $parse, dropdownConfig, uibDropdownService, $animate, $position, $document, $compile, $templateRequest) {
	  var self = this,
	      scope = $scope.$new(),
	      // create a child scope so we are not polluting original one
	  templateScope,
	      appendToOpenClass = dropdownConfig.appendToOpenClass,
	      openClass = dropdownConfig.openClass,
	      getIsOpen,
	      setIsOpen = angular.noop,
	      toggleInvoker = $attrs.onToggle ? $parse($attrs.onToggle) : angular.noop,
	      appendToBody = false,
	      appendTo = null,
	      keynavEnabled = false,
	      selectedOption = null,
	      body = $document.find('body');

	  $element.addClass('dropdown');

	  this.init = function () {
	    if ($attrs.isOpen) {
	      getIsOpen = $parse($attrs.isOpen);
	      setIsOpen = getIsOpen.assign;

	      $scope.$watch(getIsOpen, function (value) {
	        scope.isOpen = !!value;
	      });
	    }

	    if (angular.isDefined($attrs.dropdownAppendTo)) {
	      var appendToEl = $parse($attrs.dropdownAppendTo)(scope);
	      if (appendToEl) {
	        appendTo = angular.element(appendToEl);
	      }
	    }

	    appendToBody = angular.isDefined($attrs.dropdownAppendToBody);
	    keynavEnabled = angular.isDefined($attrs.keyboardNav);

	    if (appendToBody && !appendTo) {
	      appendTo = body;
	    }

	    if (appendTo && self.dropdownMenu) {
	      appendTo.append(self.dropdownMenu);
	      $element.on('$destroy', function handleDestroyEvent() {
	        self.dropdownMenu.remove();
	      });
	    }
	  };

	  this.toggle = function (open) {
	    scope.isOpen = arguments.length ? !!open : !scope.isOpen;
	    if (angular.isFunction(setIsOpen)) {
	      setIsOpen(scope, scope.isOpen);
	    }

	    return scope.isOpen;
	  };

	  // Allow other directives to watch status
	  this.isOpen = function () {
	    return scope.isOpen;
	  };

	  scope.getToggleElement = function () {
	    return self.toggleElement;
	  };

	  scope.getAutoClose = function () {
	    return $attrs.autoClose || 'always'; //or 'outsideClick' or 'disabled'
	  };

	  scope.getElement = function () {
	    return $element;
	  };

	  scope.isKeynavEnabled = function () {
	    return keynavEnabled;
	  };

	  scope.focusDropdownEntry = function (keyCode) {
	    var elems = self.dropdownMenu ? //If append to body is used.
	    angular.element(self.dropdownMenu).find('a') : $element.find('ul').eq(0).find('a');

	    switch (keyCode) {
	      case 40:
	        {
	          if (!angular.isNumber(self.selectedOption)) {
	            self.selectedOption = 0;
	          } else {
	            self.selectedOption = self.selectedOption === elems.length - 1 ? self.selectedOption : self.selectedOption + 1;
	          }
	          break;
	        }
	      case 38:
	        {
	          if (!angular.isNumber(self.selectedOption)) {
	            self.selectedOption = elems.length - 1;
	          } else {
	            self.selectedOption = self.selectedOption === 0 ? 0 : self.selectedOption - 1;
	          }
	          break;
	        }
	    }
	    elems[self.selectedOption].focus();
	  };

	  scope.getDropdownElement = function () {
	    return self.dropdownMenu;
	  };

	  scope.focusToggleElement = function () {
	    if (self.toggleElement) {
	      self.toggleElement[0].focus();
	    }
	  };

	  scope.$watch('isOpen', function (isOpen, wasOpen) {
	    if (appendTo && self.dropdownMenu) {
	      var pos = $position.positionElements($element, self.dropdownMenu, 'bottom-left', true),
	          css,
	          rightalign,
	          scrollbarPadding,
	          scrollbarWidth = 0;

	      css = {
	        top: pos.top + 'px',
	        display: isOpen ? 'block' : 'none'
	      };

	      rightalign = self.dropdownMenu.hasClass('dropdown-menu-right');
	      if (!rightalign) {
	        css.left = pos.left + 'px';
	        css.right = 'auto';
	      } else {
	        css.left = 'auto';
	        scrollbarPadding = $position.scrollbarPadding(appendTo);

	        if (scrollbarPadding.heightOverflow && scrollbarPadding.scrollbarWidth) {
	          scrollbarWidth = scrollbarPadding.scrollbarWidth;
	        }

	        css.right = window.innerWidth - scrollbarWidth - (pos.left + $element.prop('offsetWidth')) + 'px';
	      }

	      // Need to adjust our positioning to be relative to the appendTo container
	      // if it's not the body element
	      if (!appendToBody) {
	        var appendOffset = $position.offset(appendTo);

	        css.top = pos.top - appendOffset.top + 'px';

	        if (!rightalign) {
	          css.left = pos.left - appendOffset.left + 'px';
	        } else {
	          css.right = window.innerWidth - (pos.left - appendOffset.left + $element.prop('offsetWidth')) + 'px';
	        }
	      }

	      self.dropdownMenu.css(css);
	    }

	    var openContainer = appendTo ? appendTo : $element;
	    var dropdownOpenClass = appendTo ? appendToOpenClass : openClass;
	    var hasOpenClass = openContainer.hasClass(dropdownOpenClass);
	    var isOnlyOpen = uibDropdownService.isOnlyOpen($scope, appendTo);

	    if (hasOpenClass === !isOpen) {
	      var toggleClass;
	      if (appendTo) {
	        toggleClass = !isOnlyOpen ? 'addClass' : 'removeClass';
	      } else {
	        toggleClass = isOpen ? 'addClass' : 'removeClass';
	      }
	      $animate[toggleClass](openContainer, dropdownOpenClass).then(function () {
	        if (angular.isDefined(isOpen) && isOpen !== wasOpen) {
	          toggleInvoker($scope, { open: !!isOpen });
	        }
	      });
	    }

	    if (isOpen) {
	      if (self.dropdownMenuTemplateUrl) {
	        $templateRequest(self.dropdownMenuTemplateUrl).then(function (tplContent) {
	          templateScope = scope.$new();
	          $compile(tplContent.trim())(templateScope, function (dropdownElement) {
	            var newEl = dropdownElement;
	            self.dropdownMenu.replaceWith(newEl);
	            self.dropdownMenu = newEl;
	            $document.on('keydown', uibDropdownService.keybindFilter);
	          });
	        });
	      } else {
	        $document.on('keydown', uibDropdownService.keybindFilter);
	      }

	      scope.focusToggleElement();
	      uibDropdownService.open(scope, $element, appendTo);
	    } else {
	      if (self.dropdownMenuTemplateUrl) {
	        if (templateScope) {
	          templateScope.$destroy();
	        }
	        var newEl = angular.element('<ul class="dropdown-menu"></ul>');
	        self.dropdownMenu.replaceWith(newEl);
	        self.dropdownMenu = newEl;
	      }

	      self.selectedOption = null;
	    }

	    if (angular.isFunction(setIsOpen)) {
	      setIsOpen($scope, isOpen);
	    }
	  });
	}]).directive('uibDropdown', function () {
	  return {
	    controller: 'UibDropdownController',
	    link: function link(scope, element, attrs, dropdownCtrl) {
	      dropdownCtrl.init();
	    }
	  };
	}).directive('uibDropdownMenu', function () {
	  return {
	    restrict: 'A',
	    require: '?^uibDropdown',
	    link: function link(scope, element, attrs, dropdownCtrl) {
	      if (!dropdownCtrl || angular.isDefined(attrs.dropdownNested)) {
	        return;
	      }

	      element.addClass('dropdown-menu');

	      var tplUrl = attrs.templateUrl;
	      if (tplUrl) {
	        dropdownCtrl.dropdownMenuTemplateUrl = tplUrl;
	      }

	      if (!dropdownCtrl.dropdownMenu) {
	        dropdownCtrl.dropdownMenu = element;
	      }
	    }
	  };
	}).directive('uibDropdownToggle', function () {
	  return {
	    require: '?^uibDropdown',
	    link: function link(scope, element, attrs, dropdownCtrl) {
	      if (!dropdownCtrl) {
	        return;
	      }

	      element.addClass('dropdown-toggle');

	      dropdownCtrl.toggleElement = element;

	      var toggleDropdown = function toggleDropdown(event) {
	        event.preventDefault();

	        if (!element.hasClass('disabled') && !attrs.disabled) {
	          scope.$apply(function () {
	            dropdownCtrl.toggle();
	          });
	        }
	      };

	      element.on('click', toggleDropdown);

	      // WAI-ARIA
	      element.attr({ 'aria-haspopup': true, 'aria-expanded': false });
	      scope.$watch(dropdownCtrl.isOpen, function (isOpen) {
	        element.attr('aria-expanded', !!isOpen);
	      });

	      scope.$on('$destroy', function () {
	        element.off('click', toggleDropdown);
	      });
	    }
	  };
	});

	angular.module('ui.bootstrap.stackedMap', [])
	/**
	 * A helper, internal data structure that acts as a map but also allows getting / removing
	 * elements in the LIFO order
	 */
	.factory('$$stackedMap', function () {
	  return {
	    createNew: function createNew() {
	      var stack = [];

	      return {
	        add: function add(key, value) {
	          stack.push({
	            key: key,
	            value: value
	          });
	        },
	        get: function get(key) {
	          for (var i = 0; i < stack.length; i++) {
	            if (key === stack[i].key) {
	              return stack[i];
	            }
	          }
	        },
	        keys: function keys() {
	          var keys = [];
	          for (var i = 0; i < stack.length; i++) {
	            keys.push(stack[i].key);
	          }
	          return keys;
	        },
	        top: function top() {
	          return stack[stack.length - 1];
	        },
	        remove: function remove(key) {
	          var idx = -1;
	          for (var i = 0; i < stack.length; i++) {
	            if (key === stack[i].key) {
	              idx = i;
	              break;
	            }
	          }
	          return stack.splice(idx, 1)[0];
	        },
	        removeTop: function removeTop() {
	          return stack.pop();
	        },
	        length: function length() {
	          return stack.length;
	        }
	      };
	    }
	  };
	});
	angular.module('ui.bootstrap.modal', ['ui.bootstrap.multiMap', 'ui.bootstrap.stackedMap', 'ui.bootstrap.position'])
	/**
	 * Pluggable resolve mechanism for the modal resolve resolution
	 * Supports UI Router's $resolve service
	 */
	.provider('$uibResolve', function () {
	  var resolve = this;
	  this.resolver = null;

	  this.setResolver = function (resolver) {
	    this.resolver = resolver;
	  };

	  this.$get = ['$injector', '$q', function ($injector, $q) {
	    var resolver = resolve.resolver ? $injector.get(resolve.resolver) : null;
	    return {
	      resolve: function resolve(invocables, locals, parent, self) {
	        if (resolver) {
	          return resolver.resolve(invocables, locals, parent, self);
	        }

	        var promises = [];

	        angular.forEach(invocables, function (value) {
	          if (angular.isFunction(value) || angular.isArray(value)) {
	            promises.push($q.resolve($injector.invoke(value)));
	          } else if (angular.isString(value)) {
	            promises.push($q.resolve($injector.get(value)));
	          } else {
	            promises.push($q.resolve(value));
	          }
	        });

	        return $q.all(promises).then(function (resolves) {
	          var resolveObj = {};
	          var resolveIter = 0;
	          angular.forEach(invocables, function (value, key) {
	            resolveObj[key] = resolves[resolveIter++];
	          });

	          return resolveObj;
	        });
	      }
	    };
	  }];
	})

	/**
	 * A helper directive for the $modal service. It creates a backdrop element.
	 */
	.directive('uibModalBackdrop', ['$animate', '$injector', '$uibModalStack', function ($animate, $injector, $modalStack) {
	  return {
	    restrict: 'A',
	    compile: function compile(tElement, tAttrs) {
	      tElement.addClass(tAttrs.backdropClass);
	      return linkFn;
	    }
	  };

	  function linkFn(scope, element, attrs) {
	    if (attrs.modalInClass) {
	      $animate.addClass(element, attrs.modalInClass);

	      scope.$on($modalStack.NOW_CLOSING_EVENT, function (e, setIsAsync) {
	        var done = setIsAsync();
	        if (scope.modalOptions.animation) {
	          $animate.removeClass(element, attrs.modalInClass).then(done);
	        } else {
	          done();
	        }
	      });
	    }
	  }
	}]).directive('uibModalWindow', ['$uibModalStack', '$q', '$animateCss', '$document', function ($modalStack, $q, $animateCss, $document) {
	  return {
	    scope: {
	      index: '@'
	    },
	    restrict: 'A',
	    transclude: true,
	    templateUrl: function templateUrl(tElement, tAttrs) {
	      return tAttrs.templateUrl || 'uib/template/modal/window.html';
	    },
	    link: function link(scope, element, attrs) {
	      element.addClass(attrs.windowTopClass || '');
	      scope.size = attrs.size;

	      scope.close = function (evt) {
	        var modal = $modalStack.getTop();
	        if (modal && modal.value.backdrop && modal.value.backdrop !== 'static' && evt.target === evt.currentTarget) {
	          evt.preventDefault();
	          evt.stopPropagation();
	          $modalStack.dismiss(modal.key, 'backdrop click');
	        }
	      };

	      // moved from template to fix issue #2280
	      element.on('click', scope.close);

	      // This property is only added to the scope for the purpose of detecting when this directive is rendered.
	      // We can detect that by using this property in the template associated with this directive and then use
	      // {@link Attribute#$observe} on it. For more details please see {@link TableColumnResize}.
	      scope.$isRendered = true;

	      // Deferred object that will be resolved when this modal is rendered.
	      var modalRenderDeferObj = $q.defer();
	      // Resolve render promise post-digest
	      scope.$$postDigest(function () {
	        modalRenderDeferObj.resolve();
	      });

	      modalRenderDeferObj.promise.then(function () {
	        var animationPromise = null;

	        if (attrs.modalInClass) {
	          animationPromise = $animateCss(element, {
	            addClass: attrs.modalInClass
	          }).start();

	          scope.$on($modalStack.NOW_CLOSING_EVENT, function (e, setIsAsync) {
	            var done = setIsAsync();
	            $animateCss(element, {
	              removeClass: attrs.modalInClass
	            }).start().then(done);
	          });
	        }

	        $q.when(animationPromise).then(function () {
	          // Notify {@link $modalStack} that modal is rendered.
	          var modal = $modalStack.getTop();
	          if (modal) {
	            $modalStack.modalRendered(modal.key);
	          }

	          /**
	           * If something within the freshly-opened modal already has focus (perhaps via a
	           * directive that causes focus) then there's no need to try to focus anything.
	           */
	          if (!($document[0].activeElement && element[0].contains($document[0].activeElement))) {
	            var inputWithAutofocus = element[0].querySelector('[autofocus]');
	            /**
	             * Auto-focusing of a freshly-opened modal element causes any child elements
	             * with the autofocus attribute to lose focus. This is an issue on touch
	             * based devices which will show and then hide the onscreen keyboard.
	             * Attempts to refocus the autofocus element via JavaScript will not reopen
	             * the onscreen keyboard. Fixed by updated the focusing logic to only autofocus
	             * the modal element if the modal does not contain an autofocus element.
	             */
	            if (inputWithAutofocus) {
	              inputWithAutofocus.focus();
	            } else {
	              element[0].focus();
	            }
	          }
	        });
	      });
	    }
	  };
	}]).directive('uibModalAnimationClass', function () {
	  return {
	    compile: function compile(tElement, tAttrs) {
	      if (tAttrs.modalAnimation) {
	        tElement.addClass(tAttrs.uibModalAnimationClass);
	      }
	    }
	  };
	}).directive('uibModalTransclude', ['$animate', function ($animate) {
	  return {
	    link: function link(scope, element, attrs, controller, transclude) {
	      transclude(scope.$parent, function (clone) {
	        element.empty();
	        $animate.enter(clone, element);
	      });
	    }
	  };
	}]).factory('$uibModalStack', ['$animate', '$animateCss', '$document', '$compile', '$rootScope', '$q', '$$multiMap', '$$stackedMap', '$uibPosition', function ($animate, $animateCss, $document, $compile, $rootScope, $q, $$multiMap, $$stackedMap, $uibPosition) {
	  var OPENED_MODAL_CLASS = 'modal-open';

	  var backdropDomEl, backdropScope;
	  var openedWindows = $$stackedMap.createNew();
	  var openedClasses = $$multiMap.createNew();
	  var $modalStack = {
	    NOW_CLOSING_EVENT: 'modal.stack.now-closing'
	  };
	  var topModalIndex = 0;
	  var previousTopOpenedModal = null;
	  var ARIA_HIDDEN_ATTRIBUTE_NAME = 'data-bootstrap-modal-aria-hidden-count';

	  //Modal focus behavior
	  var tabbableSelector = 'a[href], area[href], input:not([disabled]):not([tabindex=\'-1\']), ' + 'button:not([disabled]):not([tabindex=\'-1\']),select:not([disabled]):not([tabindex=\'-1\']), textarea:not([disabled]):not([tabindex=\'-1\']), ' + 'iframe, object, embed, *[tabindex]:not([tabindex=\'-1\']), *[contenteditable=true]';
	  var scrollbarPadding;
	  var SNAKE_CASE_REGEXP = /[A-Z]/g;

	  // TODO: extract into common dependency with tooltip
	  function snake_case(name) {
	    var separator = '-';
	    return name.replace(SNAKE_CASE_REGEXP, function (letter, pos) {
	      return (pos ? separator : '') + letter.toLowerCase();
	    });
	  }

	  function isVisible(element) {
	    return !!(element.offsetWidth || element.offsetHeight || element.getClientRects().length);
	  }

	  function backdropIndex() {
	    var topBackdropIndex = -1;
	    var opened = openedWindows.keys();
	    for (var i = 0; i < opened.length; i++) {
	      if (openedWindows.get(opened[i]).value.backdrop) {
	        topBackdropIndex = i;
	      }
	    }

	    // If any backdrop exist, ensure that it's index is always
	    // right below the top modal
	    if (topBackdropIndex > -1 && topBackdropIndex < topModalIndex) {
	      topBackdropIndex = topModalIndex;
	    }
	    return topBackdropIndex;
	  }

	  $rootScope.$watch(backdropIndex, function (newBackdropIndex) {
	    if (backdropScope) {
	      backdropScope.index = newBackdropIndex;
	    }
	  });

	  function removeModalWindow(modalInstance, elementToReceiveFocus) {
	    var modalWindow = openedWindows.get(modalInstance).value;
	    var appendToElement = modalWindow.appendTo;

	    //clean up the stack
	    openedWindows.remove(modalInstance);
	    previousTopOpenedModal = openedWindows.top();
	    if (previousTopOpenedModal) {
	      topModalIndex = parseInt(previousTopOpenedModal.value.modalDomEl.attr('index'), 10);
	    }

	    removeAfterAnimate(modalWindow.modalDomEl, modalWindow.modalScope, function () {
	      var modalBodyClass = modalWindow.openedClass || OPENED_MODAL_CLASS;
	      openedClasses.remove(modalBodyClass, modalInstance);
	      var areAnyOpen = openedClasses.hasKey(modalBodyClass);
	      appendToElement.toggleClass(modalBodyClass, areAnyOpen);
	      if (!areAnyOpen && scrollbarPadding && scrollbarPadding.heightOverflow && scrollbarPadding.scrollbarWidth) {
	        if (scrollbarPadding.originalRight) {
	          appendToElement.css({ paddingRight: scrollbarPadding.originalRight + 'px' });
	        } else {
	          appendToElement.css({ paddingRight: '' });
	        }
	        scrollbarPadding = null;
	      }
	      toggleTopWindowClass(true);
	    }, modalWindow.closedDeferred);
	    checkRemoveBackdrop();

	    //move focus to specified element if available, or else to body
	    if (elementToReceiveFocus && elementToReceiveFocus.focus) {
	      elementToReceiveFocus.focus();
	    } else if (appendToElement.focus) {
	      appendToElement.focus();
	    }
	  }

	  // Add or remove "windowTopClass" from the top window in the stack
	  function toggleTopWindowClass(toggleSwitch) {
	    var modalWindow;

	    if (openedWindows.length() > 0) {
	      modalWindow = openedWindows.top().value;
	      modalWindow.modalDomEl.toggleClass(modalWindow.windowTopClass || '', toggleSwitch);
	    }
	  }

	  function checkRemoveBackdrop() {
	    //remove backdrop if no longer needed
	    if (backdropDomEl && backdropIndex() === -1) {
	      var backdropScopeRef = backdropScope;
	      removeAfterAnimate(backdropDomEl, backdropScope, function () {
	        backdropScopeRef = null;
	      });
	      backdropDomEl = undefined;
	      backdropScope = undefined;
	    }
	  }

	  function removeAfterAnimate(domEl, scope, done, closedDeferred) {
	    var asyncDeferred;
	    var asyncPromise = null;
	    var setIsAsync = function setIsAsync() {
	      if (!asyncDeferred) {
	        asyncDeferred = $q.defer();
	        asyncPromise = asyncDeferred.promise;
	      }

	      return function asyncDone() {
	        asyncDeferred.resolve();
	      };
	    };
	    scope.$broadcast($modalStack.NOW_CLOSING_EVENT, setIsAsync);

	    // Note that it's intentional that asyncPromise might be null.
	    // That's when setIsAsync has not been called during the
	    // NOW_CLOSING_EVENT broadcast.
	    return $q.when(asyncPromise).then(afterAnimating);

	    function afterAnimating() {
	      if (afterAnimating.done) {
	        return;
	      }
	      afterAnimating.done = true;

	      $animate.leave(domEl).then(function () {
	        if (done) {
	          done();
	        }

	        domEl.remove();
	        if (closedDeferred) {
	          closedDeferred.resolve();
	        }
	      });

	      scope.$destroy();
	    }
	  }

	  $document.on('keydown', keydownListener);

	  $rootScope.$on('$destroy', function () {
	    $document.off('keydown', keydownListener);
	  });

	  function keydownListener(evt) {
	    if (evt.isDefaultPrevented()) {
	      return evt;
	    }

	    var modal = openedWindows.top();
	    if (modal) {
	      switch (evt.which) {
	        case 27:
	          {
	            if (modal.value.keyboard) {
	              evt.preventDefault();
	              $rootScope.$apply(function () {
	                $modalStack.dismiss(modal.key, 'escape key press');
	              });
	            }
	            break;
	          }
	        case 9:
	          {
	            var list = $modalStack.loadFocusElementList(modal);
	            var focusChanged = false;
	            if (evt.shiftKey) {
	              if ($modalStack.isFocusInFirstItem(evt, list) || $modalStack.isModalFocused(evt, modal)) {
	                focusChanged = $modalStack.focusLastFocusableElement(list);
	              }
	            } else {
	              if ($modalStack.isFocusInLastItem(evt, list)) {
	                focusChanged = $modalStack.focusFirstFocusableElement(list);
	              }
	            }

	            if (focusChanged) {
	              evt.preventDefault();
	              evt.stopPropagation();
	            }

	            break;
	          }
	      }
	    }
	  }

	  $modalStack.open = function (modalInstance, modal) {
	    var modalOpener = $document[0].activeElement,
	        modalBodyClass = modal.openedClass || OPENED_MODAL_CLASS;

	    toggleTopWindowClass(false);

	    // Store the current top first, to determine what index we ought to use
	    // for the current top modal
	    previousTopOpenedModal = openedWindows.top();

	    openedWindows.add(modalInstance, {
	      deferred: modal.deferred,
	      renderDeferred: modal.renderDeferred,
	      closedDeferred: modal.closedDeferred,
	      modalScope: modal.scope,
	      backdrop: modal.backdrop,
	      keyboard: modal.keyboard,
	      openedClass: modal.openedClass,
	      windowTopClass: modal.windowTopClass,
	      animation: modal.animation,
	      appendTo: modal.appendTo
	    });

	    openedClasses.put(modalBodyClass, modalInstance);

	    var appendToElement = modal.appendTo,
	        currBackdropIndex = backdropIndex();

	    if (!appendToElement.length) {
	      throw new Error('appendTo element not found. Make sure that the element passed is in DOM.');
	    }

	    if (currBackdropIndex >= 0 && !backdropDomEl) {
	      backdropScope = $rootScope.$new(true);
	      backdropScope.modalOptions = modal;
	      backdropScope.index = currBackdropIndex;
	      backdropDomEl = angular.element('<div uib-modal-backdrop="modal-backdrop"></div>');
	      backdropDomEl.attr({
	        'class': 'modal-backdrop',
	        'ng-style': '{\'z-index\': 1040 + (index && 1 || 0) + index*10}',
	        'uib-modal-animation-class': 'fade',
	        'modal-in-class': 'in'
	      });
	      if (modal.backdropClass) {
	        backdropDomEl.addClass(modal.backdropClass);
	      }

	      if (modal.animation) {
	        backdropDomEl.attr('modal-animation', 'true');
	      }
	      $compile(backdropDomEl)(backdropScope);
	      $animate.enter(backdropDomEl, appendToElement);
	      if ($uibPosition.isScrollable(appendToElement)) {
	        scrollbarPadding = $uibPosition.scrollbarPadding(appendToElement);
	        if (scrollbarPadding.heightOverflow && scrollbarPadding.scrollbarWidth) {
	          appendToElement.css({ paddingRight: scrollbarPadding.right + 'px' });
	        }
	      }
	    }

	    var content;
	    if (modal.component) {
	      content = document.createElement(snake_case(modal.component.name));
	      content = angular.element(content);
	      content.attr({
	        resolve: '$resolve',
	        'modal-instance': '$uibModalInstance',
	        close: '$close($value)',
	        dismiss: '$dismiss($value)'
	      });
	    } else {
	      content = modal.content;
	    }

	    // Set the top modal index based on the index of the previous top modal
	    topModalIndex = previousTopOpenedModal ? parseInt(previousTopOpenedModal.value.modalDomEl.attr('index'), 10) + 1 : 0;
	    var angularDomEl = angular.element('<div uib-modal-window="modal-window"></div>');
	    angularDomEl.attr({
	      'class': 'modal',
	      'template-url': modal.windowTemplateUrl,
	      'window-top-class': modal.windowTopClass,
	      'role': 'dialog',
	      'aria-labelledby': modal.ariaLabelledBy,
	      'aria-describedby': modal.ariaDescribedBy,
	      'size': modal.size,
	      'index': topModalIndex,
	      'animate': 'animate',
	      'ng-style': '{\'z-index\': 1050 + $$topModalIndex*10, display: \'block\'}',
	      'tabindex': -1,
	      'uib-modal-animation-class': 'fade',
	      'modal-in-class': 'in'
	    }).append(content);
	    if (modal.windowClass) {
	      angularDomEl.addClass(modal.windowClass);
	    }

	    if (modal.animation) {
	      angularDomEl.attr('modal-animation', 'true');
	    }

	    appendToElement.addClass(modalBodyClass);
	    if (modal.scope) {
	      // we need to explicitly add the modal index to the modal scope
	      // because it is needed by ngStyle to compute the zIndex property.
	      modal.scope.$$topModalIndex = topModalIndex;
	    }
	    $animate.enter($compile(angularDomEl)(modal.scope), appendToElement);

	    openedWindows.top().value.modalDomEl = angularDomEl;
	    openedWindows.top().value.modalOpener = modalOpener;

	    applyAriaHidden(angularDomEl);

	    function applyAriaHidden(el) {
	      if (!el || el[0].tagName === 'BODY') {
	        return;
	      }

	      getSiblings(el).forEach(function (sibling) {
	        var elemIsAlreadyHidden = sibling.getAttribute('aria-hidden') === 'true',
	            ariaHiddenCount = parseInt(sibling.getAttribute(ARIA_HIDDEN_ATTRIBUTE_NAME), 10);

	        if (!ariaHiddenCount) {
	          ariaHiddenCount = elemIsAlreadyHidden ? 1 : 0;
	        }

	        sibling.setAttribute(ARIA_HIDDEN_ATTRIBUTE_NAME, ariaHiddenCount + 1);
	        sibling.setAttribute('aria-hidden', 'true');
	      });

	      return applyAriaHidden(el.parent());

	      function getSiblings(el) {
	        var children = el.parent() ? el.parent().children() : [];

	        return Array.prototype.filter.call(children, function (child) {
	          return child !== el[0];
	        });
	      }
	    }
	  };

	  function broadcastClosing(modalWindow, resultOrReason, closing) {
	    return !modalWindow.value.modalScope.$broadcast('modal.closing', resultOrReason, closing).defaultPrevented;
	  }

	  function unhideBackgroundElements() {
	    Array.prototype.forEach.call(document.querySelectorAll('[' + ARIA_HIDDEN_ATTRIBUTE_NAME + ']'), function (hiddenEl) {
	      var ariaHiddenCount = parseInt(hiddenEl.getAttribute(ARIA_HIDDEN_ATTRIBUTE_NAME), 10),
	          newHiddenCount = ariaHiddenCount - 1;
	      hiddenEl.setAttribute(ARIA_HIDDEN_ATTRIBUTE_NAME, newHiddenCount);

	      if (!newHiddenCount) {
	        hiddenEl.removeAttribute(ARIA_HIDDEN_ATTRIBUTE_NAME);
	        hiddenEl.removeAttribute('aria-hidden');
	      }
	    });
	  }

	  $modalStack.close = function (modalInstance, result) {
	    var modalWindow = openedWindows.get(modalInstance);
	    unhideBackgroundElements();
	    if (modalWindow && broadcastClosing(modalWindow, result, true)) {
	      modalWindow.value.modalScope.$$uibDestructionScheduled = true;
	      modalWindow.value.deferred.resolve(result);
	      removeModalWindow(modalInstance, modalWindow.value.modalOpener);
	      return true;
	    }

	    return !modalWindow;
	  };

	  $modalStack.dismiss = function (modalInstance, reason) {
	    var modalWindow = openedWindows.get(modalInstance);
	    unhideBackgroundElements();
	    if (modalWindow && broadcastClosing(modalWindow, reason, false)) {
	      modalWindow.value.modalScope.$$uibDestructionScheduled = true;
	      modalWindow.value.deferred.reject(reason);
	      removeModalWindow(modalInstance, modalWindow.value.modalOpener);
	      return true;
	    }
	    return !modalWindow;
	  };

	  $modalStack.dismissAll = function (reason) {
	    var topModal = this.getTop();
	    while (topModal && this.dismiss(topModal.key, reason)) {
	      topModal = this.getTop();
	    }
	  };

	  $modalStack.getTop = function () {
	    return openedWindows.top();
	  };

	  $modalStack.modalRendered = function (modalInstance) {
	    var modalWindow = openedWindows.get(modalInstance);
	    if (modalWindow) {
	      modalWindow.value.renderDeferred.resolve();
	    }
	  };

	  $modalStack.focusFirstFocusableElement = function (list) {
	    if (list.length > 0) {
	      list[0].focus();
	      return true;
	    }
	    return false;
	  };

	  $modalStack.focusLastFocusableElement = function (list) {
	    if (list.length > 0) {
	      list[list.length - 1].focus();
	      return true;
	    }
	    return false;
	  };

	  $modalStack.isModalFocused = function (evt, modalWindow) {
	    if (evt && modalWindow) {
	      var modalDomEl = modalWindow.value.modalDomEl;
	      if (modalDomEl && modalDomEl.length) {
	        return (evt.target || evt.srcElement) === modalDomEl[0];
	      }
	    }
	    return false;
	  };

	  $modalStack.isFocusInFirstItem = function (evt, list) {
	    if (list.length > 0) {
	      return (evt.target || evt.srcElement) === list[0];
	    }
	    return false;
	  };

	  $modalStack.isFocusInLastItem = function (evt, list) {
	    if (list.length > 0) {
	      return (evt.target || evt.srcElement) === list[list.length - 1];
	    }
	    return false;
	  };

	  $modalStack.loadFocusElementList = function (modalWindow) {
	    if (modalWindow) {
	      var modalDomE1 = modalWindow.value.modalDomEl;
	      if (modalDomE1 && modalDomE1.length) {
	        var elements = modalDomE1[0].querySelectorAll(tabbableSelector);
	        return elements ? Array.prototype.filter.call(elements, function (element) {
	          return isVisible(element);
	        }) : elements;
	      }
	    }
	  };

	  return $modalStack;
	}]).provider('$uibModal', function () {
	  var $modalProvider = {
	    options: {
	      animation: true,
	      backdrop: true, //can also be false or 'static'
	      keyboard: true
	    },
	    $get: ['$rootScope', '$q', '$document', '$templateRequest', '$controller', '$uibResolve', '$uibModalStack', function ($rootScope, $q, $document, $templateRequest, $controller, $uibResolve, $modalStack) {
	      var $modal = {};

	      function getTemplatePromise(options) {
	        return options.template ? $q.when(options.template) : $templateRequest(angular.isFunction(options.templateUrl) ? options.templateUrl() : options.templateUrl);
	      }

	      var promiseChain = null;
	      $modal.getPromiseChain = function () {
	        return promiseChain;
	      };

	      $modal.open = function (modalOptions) {
	        var modalResultDeferred = $q.defer();
	        var modalOpenedDeferred = $q.defer();
	        var modalClosedDeferred = $q.defer();
	        var modalRenderDeferred = $q.defer();

	        //prepare an instance of a modal to be injected into controllers and returned to a caller
	        var modalInstance = {
	          result: modalResultDeferred.promise,
	          opened: modalOpenedDeferred.promise,
	          closed: modalClosedDeferred.promise,
	          rendered: modalRenderDeferred.promise,
	          close: function close(result) {
	            return $modalStack.close(modalInstance, result);
	          },
	          dismiss: function dismiss(reason) {
	            return $modalStack.dismiss(modalInstance, reason);
	          }
	        };

	        //merge and clean up options
	        modalOptions = angular.extend({}, $modalProvider.options, modalOptions);
	        modalOptions.resolve = modalOptions.resolve || {};
	        modalOptions.appendTo = modalOptions.appendTo || $document.find('body').eq(0);

	        //verify options
	        if (!modalOptions.component && !modalOptions.template && !modalOptions.templateUrl) {
	          throw new Error('One of component or template or templateUrl options is required.');
	        }

	        var templateAndResolvePromise;
	        if (modalOptions.component) {
	          templateAndResolvePromise = $q.when($uibResolve.resolve(modalOptions.resolve, {}, null, null));
	        } else {
	          templateAndResolvePromise = $q.all([getTemplatePromise(modalOptions), $uibResolve.resolve(modalOptions.resolve, {}, null, null)]);
	        }

	        function resolveWithTemplate() {
	          return templateAndResolvePromise;
	        }

	        // Wait for the resolution of the existing promise chain.
	        // Then switch to our own combined promise dependency (regardless of how the previous modal fared).
	        // Then add to $modalStack and resolve opened.
	        // Finally clean up the chain variable if no subsequent modal has overwritten it.
	        var samePromise;
	        samePromise = promiseChain = $q.all([promiseChain]).then(resolveWithTemplate, resolveWithTemplate).then(function resolveSuccess(tplAndVars) {
	          var providedScope = modalOptions.scope || $rootScope;

	          var modalScope = providedScope.$new();
	          modalScope.$close = modalInstance.close;
	          modalScope.$dismiss = modalInstance.dismiss;

	          modalScope.$on('$destroy', function () {
	            if (!modalScope.$$uibDestructionScheduled) {
	              modalScope.$dismiss('$uibUnscheduledDestruction');
	            }
	          });

	          var modal = {
	            scope: modalScope,
	            deferred: modalResultDeferred,
	            renderDeferred: modalRenderDeferred,
	            closedDeferred: modalClosedDeferred,
	            animation: modalOptions.animation,
	            backdrop: modalOptions.backdrop,
	            keyboard: modalOptions.keyboard,
	            backdropClass: modalOptions.backdropClass,
	            windowTopClass: modalOptions.windowTopClass,
	            windowClass: modalOptions.windowClass,
	            windowTemplateUrl: modalOptions.windowTemplateUrl,
	            ariaLabelledBy: modalOptions.ariaLabelledBy,
	            ariaDescribedBy: modalOptions.ariaDescribedBy,
	            size: modalOptions.size,
	            openedClass: modalOptions.openedClass,
	            appendTo: modalOptions.appendTo
	          };

	          var component = {};
	          var ctrlInstance,
	              ctrlInstantiate,
	              ctrlLocals = {};

	          if (modalOptions.component) {
	            constructLocals(component, false, true, false);
	            component.name = modalOptions.component;
	            modal.component = component;
	          } else if (modalOptions.controller) {
	            constructLocals(ctrlLocals, true, false, true);

	            // the third param will make the controller instantiate later,private api
	            // @see https://github.com/angular/angular.js/blob/master/src/ng/controller.js#L126
	            ctrlInstantiate = $controller(modalOptions.controller, ctrlLocals, true, modalOptions.controllerAs);
	            if (modalOptions.controllerAs && modalOptions.bindToController) {
	              ctrlInstance = ctrlInstantiate.instance;
	              ctrlInstance.$close = modalScope.$close;
	              ctrlInstance.$dismiss = modalScope.$dismiss;
	              angular.extend(ctrlInstance, {
	                $resolve: ctrlLocals.$scope.$resolve
	              }, providedScope);
	            }

	            ctrlInstance = ctrlInstantiate();

	            if (angular.isFunction(ctrlInstance.$onInit)) {
	              ctrlInstance.$onInit();
	            }
	          }

	          if (!modalOptions.component) {
	            modal.content = tplAndVars[0];
	          }

	          $modalStack.open(modalInstance, modal);
	          modalOpenedDeferred.resolve(true);

	          function constructLocals(obj, template, instanceOnScope, injectable) {
	            obj.$scope = modalScope;
	            obj.$scope.$resolve = {};
	            if (instanceOnScope) {
	              obj.$scope.$uibModalInstance = modalInstance;
	            } else {
	              obj.$uibModalInstance = modalInstance;
	            }

	            var resolves = template ? tplAndVars[1] : tplAndVars;
	            angular.forEach(resolves, function (value, key) {
	              if (injectable) {
	                obj[key] = value;
	              }

	              obj.$scope.$resolve[key] = value;
	            });
	          }
	        }, function resolveError(reason) {
	          modalOpenedDeferred.reject(reason);
	          modalResultDeferred.reject(reason);
	        })['finally'](function () {
	          if (promiseChain === samePromise) {
	            promiseChain = null;
	          }
	        });

	        return modalInstance;
	      };

	      return $modal;
	    }]
	  };

	  return $modalProvider;
	});

	angular.module('ui.bootstrap.paging', [])
	/**
	 * Helper internal service for generating common controller code between the
	 * pager and pagination components
	 */
	.factory('uibPaging', ['$parse', function ($parse) {
	  return {
	    create: function create(ctrl, $scope, $attrs) {
	      ctrl.setNumPages = $attrs.numPages ? $parse($attrs.numPages).assign : angular.noop;
	      ctrl.ngModelCtrl = { $setViewValue: angular.noop }; // nullModelCtrl
	      ctrl._watchers = [];

	      ctrl.init = function (ngModelCtrl, config) {
	        ctrl.ngModelCtrl = ngModelCtrl;
	        ctrl.config = config;

	        ngModelCtrl.$render = function () {
	          ctrl.render();
	        };

	        if ($attrs.itemsPerPage) {
	          ctrl._watchers.push($scope.$parent.$watch($attrs.itemsPerPage, function (value) {
	            ctrl.itemsPerPage = parseInt(value, 10);
	            $scope.totalPages = ctrl.calculateTotalPages();
	            ctrl.updatePage();
	          }));
	        } else {
	          ctrl.itemsPerPage = config.itemsPerPage;
	        }

	        $scope.$watch('totalItems', function (newTotal, oldTotal) {
	          if (angular.isDefined(newTotal) || newTotal !== oldTotal) {
	            $scope.totalPages = ctrl.calculateTotalPages();
	            ctrl.updatePage();
	          }
	        });
	      };

	      ctrl.calculateTotalPages = function () {
	        var totalPages = ctrl.itemsPerPage < 1 ? 1 : Math.ceil($scope.totalItems / ctrl.itemsPerPage);
	        return Math.max(totalPages || 0, 1);
	      };

	      ctrl.render = function () {
	        $scope.page = parseInt(ctrl.ngModelCtrl.$viewValue, 10) || 1;
	      };

	      $scope.selectPage = function (page, evt) {
	        if (evt) {
	          evt.preventDefault();
	        }

	        var clickAllowed = !$scope.ngDisabled || !evt;
	        if (clickAllowed && $scope.page !== page && page > 0 && page <= $scope.totalPages) {
	          if (evt && evt.target) {
	            evt.target.blur();
	          }
	          ctrl.ngModelCtrl.$setViewValue(page);
	          ctrl.ngModelCtrl.$render();
	        }
	      };

	      $scope.getText = function (key) {
	        return $scope[key + 'Text'] || ctrl.config[key + 'Text'];
	      };

	      $scope.noPrevious = function () {
	        return $scope.page === 1;
	      };

	      $scope.noNext = function () {
	        return $scope.page === $scope.totalPages;
	      };

	      ctrl.updatePage = function () {
	        ctrl.setNumPages($scope.$parent, $scope.totalPages); // Readonly variable

	        if ($scope.page > $scope.totalPages) {
	          $scope.selectPage($scope.totalPages);
	        } else {
	          ctrl.ngModelCtrl.$render();
	        }
	      };

	      $scope.$on('$destroy', function () {
	        while (ctrl._watchers.length) {
	          ctrl._watchers.shift()();
	        }
	      });
	    }
	  };
	}]);

	angular.module('ui.bootstrap.pager', ['ui.bootstrap.paging', 'ui.bootstrap.tabindex']).controller('UibPagerController', ['$scope', '$attrs', 'uibPaging', 'uibPagerConfig', function ($scope, $attrs, uibPaging, uibPagerConfig) {
	  $scope.align = angular.isDefined($attrs.align) ? $scope.$parent.$eval($attrs.align) : uibPagerConfig.align;

	  uibPaging.create(this, $scope, $attrs);
	}]).constant('uibPagerConfig', {
	  itemsPerPage: 10,
	  previousText: '« Previous',
	  nextText: 'Next »',
	  align: true
	}).directive('uibPager', ['uibPagerConfig', function (uibPagerConfig) {
	  return {
	    scope: {
	      totalItems: '=',
	      previousText: '@',
	      nextText: '@',
	      ngDisabled: '='
	    },
	    require: ['uibPager', '?ngModel'],
	    restrict: 'A',
	    controller: 'UibPagerController',
	    controllerAs: 'pager',
	    templateUrl: function templateUrl(element, attrs) {
	      return attrs.templateUrl || 'uib/template/pager/pager.html';
	    },
	    link: function link(scope, element, attrs, ctrls) {
	      element.addClass('pager');
	      var paginationCtrl = ctrls[0],
	          ngModelCtrl = ctrls[1];

	      if (!ngModelCtrl) {
	        return; // do nothing if no ng-model
	      }

	      paginationCtrl.init(ngModelCtrl, uibPagerConfig);
	    }
	  };
	}]);

	angular.module('ui.bootstrap.pagination', ['ui.bootstrap.paging', 'ui.bootstrap.tabindex']).controller('UibPaginationController', ['$scope', '$attrs', '$parse', 'uibPaging', 'uibPaginationConfig', function ($scope, $attrs, $parse, uibPaging, uibPaginationConfig) {
	  var ctrl = this;
	  // Setup configuration parameters
	  var maxSize = angular.isDefined($attrs.maxSize) ? $scope.$parent.$eval($attrs.maxSize) : uibPaginationConfig.maxSize,
	      rotate = angular.isDefined($attrs.rotate) ? $scope.$parent.$eval($attrs.rotate) : uibPaginationConfig.rotate,
	      forceEllipses = angular.isDefined($attrs.forceEllipses) ? $scope.$parent.$eval($attrs.forceEllipses) : uibPaginationConfig.forceEllipses,
	      boundaryLinkNumbers = angular.isDefined($attrs.boundaryLinkNumbers) ? $scope.$parent.$eval($attrs.boundaryLinkNumbers) : uibPaginationConfig.boundaryLinkNumbers,
	      pageLabel = angular.isDefined($attrs.pageLabel) ? function (idx) {
	    return $scope.$parent.$eval($attrs.pageLabel, { $page: idx });
	  } : angular.identity;
	  $scope.boundaryLinks = angular.isDefined($attrs.boundaryLinks) ? $scope.$parent.$eval($attrs.boundaryLinks) : uibPaginationConfig.boundaryLinks;
	  $scope.directionLinks = angular.isDefined($attrs.directionLinks) ? $scope.$parent.$eval($attrs.directionLinks) : uibPaginationConfig.directionLinks;

	  uibPaging.create(this, $scope, $attrs);

	  if ($attrs.maxSize) {
	    ctrl._watchers.push($scope.$parent.$watch($parse($attrs.maxSize), function (value) {
	      maxSize = parseInt(value, 10);
	      ctrl.render();
	    }));
	  }

	  // Create page object used in template
	  function makePage(number, text, isActive) {
	    return {
	      number: number,
	      text: text,
	      active: isActive
	    };
	  }

	  function getPages(currentPage, totalPages) {
	    var pages = [];

	    // Default page limits
	    var startPage = 1,
	        endPage = totalPages;
	    var isMaxSized = angular.isDefined(maxSize) && maxSize < totalPages;

	    // recompute if maxSize
	    if (isMaxSized) {
	      if (rotate) {
	        // Current page is displayed in the middle of the visible ones
	        startPage = Math.max(currentPage - Math.floor(maxSize / 2), 1);
	        endPage = startPage + maxSize - 1;

	        // Adjust if limit is exceeded
	        if (endPage > totalPages) {
	          endPage = totalPages;
	          startPage = endPage - maxSize + 1;
	        }
	      } else {
	        // Visible pages are paginated with maxSize
	        startPage = (Math.ceil(currentPage / maxSize) - 1) * maxSize + 1;

	        // Adjust last page if limit is exceeded
	        endPage = Math.min(startPage + maxSize - 1, totalPages);
	      }
	    }

	    // Add page number links
	    for (var number = startPage; number <= endPage; number++) {
	      var page = makePage(number, pageLabel(number), number === currentPage);
	      pages.push(page);
	    }

	    // Add links to move between page sets
	    if (isMaxSized && maxSize > 0 && (!rotate || forceEllipses || boundaryLinkNumbers)) {
	      if (startPage > 1) {
	        if (!boundaryLinkNumbers || startPage > 3) {
	          //need ellipsis for all options unless range is too close to beginning
	          var previousPageSet = makePage(startPage - 1, '...', false);
	          pages.unshift(previousPageSet);
	        }
	        if (boundaryLinkNumbers) {
	          if (startPage === 3) {
	            //need to replace ellipsis when the buttons would be sequential
	            var secondPageLink = makePage(2, '2', false);
	            pages.unshift(secondPageLink);
	          }
	          //add the first page
	          var firstPageLink = makePage(1, '1', false);
	          pages.unshift(firstPageLink);
	        }
	      }

	      if (endPage < totalPages) {
	        if (!boundaryLinkNumbers || endPage < totalPages - 2) {
	          //need ellipsis for all options unless range is too close to end
	          var nextPageSet = makePage(endPage + 1, '...', false);
	          pages.push(nextPageSet);
	        }
	        if (boundaryLinkNumbers) {
	          if (endPage === totalPages - 2) {
	            //need to replace ellipsis when the buttons would be sequential
	            var secondToLastPageLink = makePage(totalPages - 1, totalPages - 1, false);
	            pages.push(secondToLastPageLink);
	          }
	          //add the last page
	          var lastPageLink = makePage(totalPages, totalPages, false);
	          pages.push(lastPageLink);
	        }
	      }
	    }
	    return pages;
	  }

	  var originalRender = this.render;
	  this.render = function () {
	    originalRender();
	    if ($scope.page > 0 && $scope.page <= $scope.totalPages) {
	      $scope.pages = getPages($scope.page, $scope.totalPages);
	    }
	  };
	}]).constant('uibPaginationConfig', {
	  itemsPerPage: 10,
	  boundaryLinks: false,
	  boundaryLinkNumbers: false,
	  directionLinks: true,
	  firstText: 'First',
	  previousText: 'Previous',
	  nextText: 'Next',
	  lastText: 'Last',
	  rotate: true,
	  forceEllipses: false
	}).directive('uibPagination', ['$parse', 'uibPaginationConfig', function ($parse, uibPaginationConfig) {
	  return {
	    scope: {
	      totalItems: '=',
	      firstText: '@',
	      previousText: '@',
	      nextText: '@',
	      lastText: '@',
	      ngDisabled: '='
	    },
	    require: ['uibPagination', '?ngModel'],
	    restrict: 'A',
	    controller: 'UibPaginationController',
	    controllerAs: 'pagination',
	    templateUrl: function templateUrl(element, attrs) {
	      return attrs.templateUrl || 'uib/template/pagination/pagination.html';
	    },
	    link: function link(scope, element, attrs, ctrls) {
	      element.addClass('pagination');
	      var paginationCtrl = ctrls[0],
	          ngModelCtrl = ctrls[1];

	      if (!ngModelCtrl) {
	        return; // do nothing if no ng-model
	      }

	      paginationCtrl.init(ngModelCtrl, uibPaginationConfig);
	    }
	  };
	}]);

	/**
	 * The following features are still outstanding: animation as a
	 * function, placement as a function, inside, support for more triggers than
	 * just mouse enter/leave, html tooltips, and selector delegation.
	 */
	angular.module('ui.bootstrap.tooltip', ['ui.bootstrap.position', 'ui.bootstrap.stackedMap'])

	/**
	 * The $tooltip service creates tooltip- and popover-like directives as well as
	 * houses global options for them.
	 */
	.provider('$uibTooltip', function () {
	  // The default options tooltip and popover.
	  var defaultOptions = {
	    placement: 'top',
	    placementClassPrefix: '',
	    animation: true,
	    popupDelay: 0,
	    popupCloseDelay: 0,
	    useContentExp: false
	  };

	  // Default hide triggers for each show trigger
	  var triggerMap = {
	    'mouseenter': 'mouseleave',
	    'click': 'click',
	    'outsideClick': 'outsideClick',
	    'focus': 'blur',
	    'none': ''
	  };

	  // The options specified to the provider globally.
	  var globalOptions = {};

	  /**
	   * `options({})` allows global configuration of all tooltips in the
	   * application.
	   *
	   *   var app = angular.module( 'App', ['ui.bootstrap.tooltip'], function( $tooltipProvider ) {
	   *     // place tooltips left instead of top by default
	   *     $tooltipProvider.options( { placement: 'left' } );
	   *   });
	   */
	  this.options = function (value) {
	    angular.extend(globalOptions, value);
	  };

	  /**
	   * This allows you to extend the set of trigger mappings available. E.g.:
	   *
	   *   $tooltipProvider.setTriggers( { 'openTrigger': 'closeTrigger' } );
	   */
	  this.setTriggers = function setTriggers(triggers) {
	    angular.extend(triggerMap, triggers);
	  };

	  /**
	   * This is a helper function for translating camel-case to snake_case.
	   */
	  function snake_case(name) {
	    var regexp = /[A-Z]/g;
	    var separator = '-';
	    return name.replace(regexp, function (letter, pos) {
	      return (pos ? separator : '') + letter.toLowerCase();
	    });
	  }

	  /**
	   * Returns the actual instance of the $tooltip service.
	   * TODO support multiple triggers
	   */
	  this.$get = ['$window', '$compile', '$timeout', '$document', '$uibPosition', '$interpolate', '$rootScope', '$parse', '$$stackedMap', function ($window, $compile, $timeout, $document, $position, $interpolate, $rootScope, $parse, $$stackedMap) {
	    var openedTooltips = $$stackedMap.createNew();
	    $document.on('keyup', keypressListener);

	    $rootScope.$on('$destroy', function () {
	      $document.off('keyup', keypressListener);
	    });

	    function keypressListener(e) {
	      if (e.which === 27) {
	        var last = openedTooltips.top();
	        if (last) {
	          last.value.close();
	          last = null;
	        }
	      }
	    }

	    return function $tooltip(ttType, prefix, defaultTriggerShow, options) {
	      options = angular.extend({}, defaultOptions, globalOptions, options);

	      /**
	       * Returns an object of show and hide triggers.
	       *
	       * If a trigger is supplied,
	       * it is used to show the tooltip; otherwise, it will use the `trigger`
	       * option passed to the `$tooltipProvider.options` method; else it will
	       * default to the trigger supplied to this directive factory.
	       *
	       * The hide trigger is based on the show trigger. If the `trigger` option
	       * was passed to the `$tooltipProvider.options` method, it will use the
	       * mapped trigger from `triggerMap` or the passed trigger if the map is
	       * undefined; otherwise, it uses the `triggerMap` value of the show
	       * trigger; else it will just use the show trigger.
	       */
	      function getTriggers(trigger) {
	        var show = (trigger || options.trigger || defaultTriggerShow).split(' ');
	        var hide = show.map(function (trigger) {
	          return triggerMap[trigger] || trigger;
	        });
	        return {
	          show: show,
	          hide: hide
	        };
	      }

	      var directiveName = snake_case(ttType);

	      var startSym = $interpolate.startSymbol();
	      var endSym = $interpolate.endSymbol();
	      var template = '<div ' + directiveName + '-popup ' + 'uib-title="' + startSym + 'title' + endSym + '" ' + (options.useContentExp ? 'content-exp="contentExp()" ' : 'content="' + startSym + 'content' + endSym + '" ') + 'origin-scope="origScope" ' + 'class="uib-position-measure ' + prefix + '" ' + 'tooltip-animation-class="fade"' + 'uib-tooltip-classes ' + 'ng-class="{ in: isOpen }" ' + '>' + '</div>';

	      return {
	        compile: function compile(tElem, tAttrs) {
	          var tooltipLinker = $compile(template);

	          return function link(scope, element, attrs, tooltipCtrl) {
	            var tooltip;
	            var tooltipLinkedScope;
	            var transitionTimeout;
	            var showTimeout;
	            var hideTimeout;
	            var positionTimeout;
	            var adjustmentTimeout;
	            var appendToBody = angular.isDefined(options.appendToBody) ? options.appendToBody : false;
	            var triggers = getTriggers(undefined);
	            var hasEnableExp = angular.isDefined(attrs[prefix + 'Enable']);
	            var ttScope = scope.$new(true);
	            var repositionScheduled = false;
	            var isOpenParse = angular.isDefined(attrs[prefix + 'IsOpen']) ? $parse(attrs[prefix + 'IsOpen']) : false;
	            var contentParse = options.useContentExp ? $parse(attrs[ttType]) : false;
	            var observers = [];
	            var lastPlacement;

	            var positionTooltip = function positionTooltip() {
	              // check if tooltip exists and is not empty
	              if (!tooltip || !tooltip.html()) {
	                return;
	              }

	              if (!positionTimeout) {
	                positionTimeout = $timeout(function () {
	                  var ttPosition = $position.positionElements(element, tooltip, ttScope.placement, appendToBody);
	                  var initialHeight = angular.isDefined(tooltip.offsetHeight) ? tooltip.offsetHeight : tooltip.prop('offsetHeight');
	                  var elementPos = appendToBody ? $position.offset(element) : $position.position(element);
	                  tooltip.css({ top: ttPosition.top + 'px', left: ttPosition.left + 'px' });
	                  var placementClasses = ttPosition.placement.split('-');

	                  if (!tooltip.hasClass(placementClasses[0])) {
	                    tooltip.removeClass(lastPlacement.split('-')[0]);
	                    tooltip.addClass(placementClasses[0]);
	                  }

	                  if (!tooltip.hasClass(options.placementClassPrefix + ttPosition.placement)) {
	                    tooltip.removeClass(options.placementClassPrefix + lastPlacement);
	                    tooltip.addClass(options.placementClassPrefix + ttPosition.placement);
	                  }

	                  adjustmentTimeout = $timeout(function () {
	                    var currentHeight = angular.isDefined(tooltip.offsetHeight) ? tooltip.offsetHeight : tooltip.prop('offsetHeight');
	                    var adjustment = $position.adjustTop(placementClasses, elementPos, initialHeight, currentHeight);
	                    if (adjustment) {
	                      tooltip.css(adjustment);
	                    }
	                    adjustmentTimeout = null;
	                  }, 0, false);

	                  // first time through tt element will have the
	                  // uib-position-measure class or if the placement
	                  // has changed we need to position the arrow.
	                  if (tooltip.hasClass('uib-position-measure')) {
	                    $position.positionArrow(tooltip, ttPosition.placement);
	                    tooltip.removeClass('uib-position-measure');
	                  } else if (lastPlacement !== ttPosition.placement) {
	                    $position.positionArrow(tooltip, ttPosition.placement);
	                  }
	                  lastPlacement = ttPosition.placement;

	                  positionTimeout = null;
	                }, 0, false);
	              }
	            };

	            // Set up the correct scope to allow transclusion later
	            ttScope.origScope = scope;

	            // By default, the tooltip is not open.
	            // TODO add ability to start tooltip opened
	            ttScope.isOpen = false;

	            function toggleTooltipBind() {
	              if (!ttScope.isOpen) {
	                showTooltipBind();
	              } else {
	                hideTooltipBind();
	              }
	            }

	            // Show the tooltip with delay if specified, otherwise show it immediately
	            function showTooltipBind() {
	              if (hasEnableExp && !scope.$eval(attrs[prefix + 'Enable'])) {
	                return;
	              }

	              cancelHide();
	              prepareTooltip();

	              if (ttScope.popupDelay) {
	                // Do nothing if the tooltip was already scheduled to pop-up.
	                // This happens if show is triggered multiple times before any hide is triggered.
	                if (!showTimeout) {
	                  showTimeout = $timeout(show, ttScope.popupDelay, false);
	                }
	              } else {
	                show();
	              }
	            }

	            function hideTooltipBind() {
	              cancelShow();

	              if (ttScope.popupCloseDelay) {
	                if (!hideTimeout) {
	                  hideTimeout = $timeout(hide, ttScope.popupCloseDelay, false);
	                }
	              } else {
	                hide();
	              }
	            }

	            // Show the tooltip popup element.
	            function show() {
	              cancelShow();
	              cancelHide();

	              // Don't show empty tooltips.
	              if (!ttScope.content) {
	                return angular.noop;
	              }

	              createTooltip();

	              // And show the tooltip.
	              ttScope.$evalAsync(function () {
	                ttScope.isOpen = true;
	                assignIsOpen(true);
	                positionTooltip();
	              });
	            }

	            function cancelShow() {
	              if (showTimeout) {
	                $timeout.cancel(showTimeout);
	                showTimeout = null;
	              }

	              if (positionTimeout) {
	                $timeout.cancel(positionTimeout);
	                positionTimeout = null;
	              }
	            }

	            // Hide the tooltip popup element.
	            function hide() {
	              if (!ttScope) {
	                return;
	              }

	              // First things first: we don't show it anymore.
	              ttScope.$evalAsync(function () {
	                if (ttScope) {
	                  ttScope.isOpen = false;
	                  assignIsOpen(false);
	                  // And now we remove it from the DOM. However, if we have animation, we
	                  // need to wait for it to expire beforehand.
	                  // FIXME: this is a placeholder for a port of the transitions library.
	                  // The fade transition in TWBS is 150ms.
	                  if (ttScope.animation) {
	                    if (!transitionTimeout) {
	                      transitionTimeout = $timeout(removeTooltip, 150, false);
	                    }
	                  } else {
	                    removeTooltip();
	                  }
	                }
	              });
	            }

	            function cancelHide() {
	              if (hideTimeout) {
	                $timeout.cancel(hideTimeout);
	                hideTimeout = null;
	              }

	              if (transitionTimeout) {
	                $timeout.cancel(transitionTimeout);
	                transitionTimeout = null;
	              }
	            }

	            function createTooltip() {
	              // There can only be one tooltip element per directive shown at once.
	              if (tooltip) {
	                return;
	              }

	              tooltipLinkedScope = ttScope.$new();
	              tooltip = tooltipLinker(tooltipLinkedScope, function (tooltip) {
	                if (appendToBody) {
	                  $document.find('body').append(tooltip);
	                } else {
	                  element.after(tooltip);
	                }
	              });

	              openedTooltips.add(ttScope, {
	                close: hide
	              });

	              prepObservers();
	            }

	            function removeTooltip() {
	              cancelShow();
	              cancelHide();
	              unregisterObservers();

	              if (tooltip) {
	                tooltip.remove();

	                tooltip = null;
	                if (adjustmentTimeout) {
	                  $timeout.cancel(adjustmentTimeout);
	                }
	              }

	              openedTooltips.remove(ttScope);

	              if (tooltipLinkedScope) {
	                tooltipLinkedScope.$destroy();
	                tooltipLinkedScope = null;
	              }
	            }

	            /**
	             * Set the initial scope values. Once
	             * the tooltip is created, the observers
	             * will be added to keep things in sync.
	             */
	            function prepareTooltip() {
	              ttScope.title = attrs[prefix + 'Title'];
	              if (contentParse) {
	                ttScope.content = contentParse(scope);
	              } else {
	                ttScope.content = attrs[ttType];
	              }

	              ttScope.popupClass = attrs[prefix + 'Class'];
	              ttScope.placement = angular.isDefined(attrs[prefix + 'Placement']) ? attrs[prefix + 'Placement'] : options.placement;
	              var placement = $position.parsePlacement(ttScope.placement);
	              lastPlacement = placement[1] ? placement[0] + '-' + placement[1] : placement[0];

	              var delay = parseInt(attrs[prefix + 'PopupDelay'], 10);
	              var closeDelay = parseInt(attrs[prefix + 'PopupCloseDelay'], 10);
	              ttScope.popupDelay = !isNaN(delay) ? delay : options.popupDelay;
	              ttScope.popupCloseDelay = !isNaN(closeDelay) ? closeDelay : options.popupCloseDelay;
	            }

	            function assignIsOpen(isOpen) {
	              if (isOpenParse && angular.isFunction(isOpenParse.assign)) {
	                isOpenParse.assign(scope, isOpen);
	              }
	            }

	            ttScope.contentExp = function () {
	              return ttScope.content;
	            };

	            /**
	             * Observe the relevant attributes.
	             */
	            attrs.$observe('disabled', function (val) {
	              if (val) {
	                cancelShow();
	              }

	              if (val && ttScope.isOpen) {
	                hide();
	              }
	            });

	            if (isOpenParse) {
	              scope.$watch(isOpenParse, function (val) {
	                if (ttScope && !val === ttScope.isOpen) {
	                  toggleTooltipBind();
	                }
	              });
	            }

	            function prepObservers() {
	              observers.length = 0;

	              if (contentParse) {
	                observers.push(scope.$watch(contentParse, function (val) {
	                  ttScope.content = val;
	                  if (!val && ttScope.isOpen) {
	                    hide();
	                  }
	                }));

	                observers.push(tooltipLinkedScope.$watch(function () {
	                  if (!repositionScheduled) {
	                    repositionScheduled = true;
	                    tooltipLinkedScope.$$postDigest(function () {
	                      repositionScheduled = false;
	                      if (ttScope && ttScope.isOpen) {
	                        positionTooltip();
	                      }
	                    });
	                  }
	                }));
	              } else {
	                observers.push(attrs.$observe(ttType, function (val) {
	                  ttScope.content = val;
	                  if (!val && ttScope.isOpen) {
	                    hide();
	                  } else {
	                    positionTooltip();
	                  }
	                }));
	              }

	              observers.push(attrs.$observe(prefix + 'Title', function (val) {
	                ttScope.title = val;
	                if (ttScope.isOpen) {
	                  positionTooltip();
	                }
	              }));

	              observers.push(attrs.$observe(prefix + 'Placement', function (val) {
	                ttScope.placement = val ? val : options.placement;
	                if (ttScope.isOpen) {
	                  positionTooltip();
	                }
	              }));
	            }

	            function unregisterObservers() {
	              if (observers.length) {
	                angular.forEach(observers, function (observer) {
	                  observer();
	                });
	                observers.length = 0;
	              }
	            }

	            // hide tooltips/popovers for outsideClick trigger
	            function bodyHideTooltipBind(e) {
	              if (!ttScope || !ttScope.isOpen || !tooltip) {
	                return;
	              }
	              // make sure the tooltip/popover link or tool tooltip/popover itself were not clicked
	              if (!element[0].contains(e.target) && !tooltip[0].contains(e.target)) {
	                hideTooltipBind();
	              }
	            }

	            var unregisterTriggers = function unregisterTriggers() {
	              triggers.show.forEach(function (trigger) {
	                if (trigger === 'outsideClick') {
	                  element.off('click', toggleTooltipBind);
	                } else {
	                  element.off(trigger, showTooltipBind);
	                  element.off(trigger, toggleTooltipBind);
	                }
	              });
	              triggers.hide.forEach(function (trigger) {
	                if (trigger === 'outsideClick') {
	                  $document.off('click', bodyHideTooltipBind);
	                } else {
	                  element.off(trigger, hideTooltipBind);
	                }
	              });
	            };

	            function prepTriggers() {
	              var showTriggers = [],
	                  hideTriggers = [];
	              var val = scope.$eval(attrs[prefix + 'Trigger']);
	              unregisterTriggers();

	              if (angular.isObject(val)) {
	                Object.keys(val).forEach(function (key) {
	                  showTriggers.push(key);
	                  hideTriggers.push(val[key]);
	                });
	                triggers = {
	                  show: showTriggers,
	                  hide: hideTriggers
	                };
	              } else {
	                triggers = getTriggers(val);
	              }

	              if (triggers.show !== 'none') {
	                triggers.show.forEach(function (trigger, idx) {
	                  if (trigger === 'outsideClick') {
	                    element.on('click', toggleTooltipBind);
	                    $document.on('click', bodyHideTooltipBind);
	                  } else if (trigger === triggers.hide[idx]) {
	                    element.on(trigger, toggleTooltipBind);
	                  } else if (trigger) {
	                    element.on(trigger, showTooltipBind);
	                    element.on(triggers.hide[idx], hideTooltipBind);
	                  }

	                  element.on('keypress', function (e) {
	                    if (e.which === 27) {
	                      hideTooltipBind();
	                    }
	                  });
	                });
	              }
	            }

	            prepTriggers();

	            var animation = scope.$eval(attrs[prefix + 'Animation']);
	            ttScope.animation = angular.isDefined(animation) ? !!animation : options.animation;

	            var appendToBodyVal;
	            var appendKey = prefix + 'AppendToBody';
	            if (appendKey in attrs && attrs[appendKey] === undefined) {
	              appendToBodyVal = true;
	            } else {
	              appendToBodyVal = scope.$eval(attrs[appendKey]);
	            }

	            appendToBody = angular.isDefined(appendToBodyVal) ? appendToBodyVal : appendToBody;

	            // Make sure tooltip is destroyed and removed.
	            scope.$on('$destroy', function onDestroyTooltip() {
	              unregisterTriggers();
	              removeTooltip();
	              ttScope = null;
	            });
	          };
	        }
	      };
	    };
	  }];
	})

	// This is mostly ngInclude code but with a custom scope
	.directive('uibTooltipTemplateTransclude', ['$animate', '$sce', '$compile', '$templateRequest', function ($animate, $sce, $compile, $templateRequest) {
	  return {
	    link: function link(scope, elem, attrs) {
	      var origScope = scope.$eval(attrs.tooltipTemplateTranscludeScope);

	      var changeCounter = 0,
	          currentScope,
	          previousElement,
	          currentElement;

	      var cleanupLastIncludeContent = function cleanupLastIncludeContent() {
	        if (previousElement) {
	          previousElement.remove();
	          previousElement = null;
	        }

	        if (currentScope) {
	          currentScope.$destroy();
	          currentScope = null;
	        }

	        if (currentElement) {
	          $animate.leave(currentElement).then(function () {
	            previousElement = null;
	          });
	          previousElement = currentElement;
	          currentElement = null;
	        }
	      };

	      scope.$watch($sce.parseAsResourceUrl(attrs.uibTooltipTemplateTransclude), function (src) {
	        var thisChangeId = ++changeCounter;

	        if (src) {
	          //set the 2nd param to true to ignore the template request error so that the inner
	          //contents and scope can be cleaned up.
	          $templateRequest(src, true).then(function (response) {
	            if (thisChangeId !== changeCounter) {
	              return;
	            }
	            var newScope = origScope.$new();
	            var template = response;

	            var clone = $compile(template)(newScope, function (clone) {
	              cleanupLastIncludeContent();
	              $animate.enter(clone, elem);
	            });

	            currentScope = newScope;
	            currentElement = clone;

	            currentScope.$emit('$includeContentLoaded', src);
	          }, function () {
	            if (thisChangeId === changeCounter) {
	              cleanupLastIncludeContent();
	              scope.$emit('$includeContentError', src);
	            }
	          });
	          scope.$emit('$includeContentRequested', src);
	        } else {
	          cleanupLastIncludeContent();
	        }
	      });

	      scope.$on('$destroy', cleanupLastIncludeContent);
	    }
	  };
	}])

	/**
	 * Note that it's intentional that these classes are *not* applied through $animate.
	 * They must not be animated as they're expected to be present on the tooltip on
	 * initialization.
	 */
	.directive('uibTooltipClasses', ['$uibPosition', function ($uibPosition) {
	  return {
	    restrict: 'A',
	    link: function link(scope, element, attrs) {
	      // need to set the primary position so the
	      // arrow has space during position measure.
	      // tooltip.positionTooltip()
	      if (scope.placement) {
	        // // There are no top-left etc... classes
	        // // in TWBS, so we need the primary position.
	        var position = $uibPosition.parsePlacement(scope.placement);
	        element.addClass(position[0]);
	      }

	      if (scope.popupClass) {
	        element.addClass(scope.popupClass);
	      }

	      if (scope.animation) {
	        element.addClass(attrs.tooltipAnimationClass);
	      }
	    }
	  };
	}]).directive('uibTooltipPopup', function () {
	  return {
	    restrict: 'A',
	    scope: { content: '@' },
	    templateUrl: 'uib/template/tooltip/tooltip-popup.html'
	  };
	}).directive('uibTooltip', ['$uibTooltip', function ($uibTooltip) {
	  return $uibTooltip('uibTooltip', 'tooltip', 'mouseenter');
	}]).directive('uibTooltipTemplatePopup', function () {
	  return {
	    restrict: 'A',
	    scope: { contentExp: '&', originScope: '&' },
	    templateUrl: 'uib/template/tooltip/tooltip-template-popup.html'
	  };
	}).directive('uibTooltipTemplate', ['$uibTooltip', function ($uibTooltip) {
	  return $uibTooltip('uibTooltipTemplate', 'tooltip', 'mouseenter', {
	    useContentExp: true
	  });
	}]).directive('uibTooltipHtmlPopup', function () {
	  return {
	    restrict: 'A',
	    scope: { contentExp: '&' },
	    templateUrl: 'uib/template/tooltip/tooltip-html-popup.html'
	  };
	}).directive('uibTooltipHtml', ['$uibTooltip', function ($uibTooltip) {
	  return $uibTooltip('uibTooltipHtml', 'tooltip', 'mouseenter', {
	    useContentExp: true
	  });
	}]);

	/**
	 * The following features are still outstanding: popup delay, animation as a
	 * function, placement as a function, inside, support for more triggers than
	 * just mouse enter/leave, and selector delegatation.
	 */
	angular.module('ui.bootstrap.popover', ['ui.bootstrap.tooltip']).directive('uibPopoverTemplatePopup', function () {
	  return {
	    restrict: 'A',
	    scope: { uibTitle: '@', contentExp: '&', originScope: '&' },
	    templateUrl: 'uib/template/popover/popover-template.html'
	  };
	}).directive('uibPopoverTemplate', ['$uibTooltip', function ($uibTooltip) {
	  return $uibTooltip('uibPopoverTemplate', 'popover', 'click', {
	    useContentExp: true
	  });
	}]).directive('uibPopoverHtmlPopup', function () {
	  return {
	    restrict: 'A',
	    scope: { contentExp: '&', uibTitle: '@' },
	    templateUrl: 'uib/template/popover/popover-html.html'
	  };
	}).directive('uibPopoverHtml', ['$uibTooltip', function ($uibTooltip) {
	  return $uibTooltip('uibPopoverHtml', 'popover', 'click', {
	    useContentExp: true
	  });
	}]).directive('uibPopoverPopup', function () {
	  return {
	    restrict: 'A',
	    scope: { uibTitle: '@', content: '@' },
	    templateUrl: 'uib/template/popover/popover.html'
	  };
	}).directive('uibPopover', ['$uibTooltip', function ($uibTooltip) {
	  return $uibTooltip('uibPopover', 'popover', 'click');
	}]);

	angular.module('ui.bootstrap.progressbar', []).constant('uibProgressConfig', {
	  animate: true,
	  max: 100
	}).controller('UibProgressController', ['$scope', '$attrs', 'uibProgressConfig', function ($scope, $attrs, progressConfig) {
	  var self = this,
	      animate = angular.isDefined($attrs.animate) ? $scope.$parent.$eval($attrs.animate) : progressConfig.animate;

	  this.bars = [];
	  $scope.max = getMaxOrDefault();

	  this.addBar = function (bar, element, attrs) {
	    if (!animate) {
	      element.css({ 'transition': 'none' });
	    }

	    this.bars.push(bar);

	    bar.max = getMaxOrDefault();
	    bar.title = attrs && angular.isDefined(attrs.title) ? attrs.title : 'progressbar';

	    bar.$watch('value', function (value) {
	      bar.recalculatePercentage();
	    });

	    bar.recalculatePercentage = function () {
	      var totalPercentage = self.bars.reduce(function (total, bar) {
	        bar.percent = +(100 * bar.value / bar.max).toFixed(2);
	        return total + bar.percent;
	      }, 0);

	      if (totalPercentage > 100) {
	        bar.percent -= totalPercentage - 100;
	      }
	    };

	    bar.$on('$destroy', function () {
	      element = null;
	      self.removeBar(bar);
	    });
	  };

	  this.removeBar = function (bar) {
	    this.bars.splice(this.bars.indexOf(bar), 1);
	    this.bars.forEach(function (bar) {
	      bar.recalculatePercentage();
	    });
	  };

	  //$attrs.$observe('maxParam', function(maxParam) {
	  $scope.$watch('maxParam', function (maxParam) {
	    self.bars.forEach(function (bar) {
	      bar.max = getMaxOrDefault();
	      bar.recalculatePercentage();
	    });
	  });

	  function getMaxOrDefault() {
	    return angular.isDefined($scope.maxParam) ? $scope.maxParam : progressConfig.max;
	  }
	}]).directive('uibProgress', function () {
	  return {
	    replace: true,
	    transclude: true,
	    controller: 'UibProgressController',
	    require: 'uibProgress',
	    scope: {
	      maxParam: '=?max'
	    },
	    templateUrl: 'uib/template/progressbar/progress.html'
	  };
	}).directive('uibBar', function () {
	  return {
	    replace: true,
	    transclude: true,
	    require: '^uibProgress',
	    scope: {
	      value: '=',
	      type: '@'
	    },
	    templateUrl: 'uib/template/progressbar/bar.html',
	    link: function link(scope, element, attrs, progressCtrl) {
	      progressCtrl.addBar(scope, element, attrs);
	    }
	  };
	}).directive('uibProgressbar', function () {
	  return {
	    replace: true,
	    transclude: true,
	    controller: 'UibProgressController',
	    scope: {
	      value: '=',
	      maxParam: '=?max',
	      type: '@'
	    },
	    templateUrl: 'uib/template/progressbar/progressbar.html',
	    link: function link(scope, element, attrs, progressCtrl) {
	      progressCtrl.addBar(scope, angular.element(element.children()[0]), { title: attrs.title });
	    }
	  };
	});

	angular.module('ui.bootstrap.rating', []).constant('uibRatingConfig', {
	  max: 5,
	  stateOn: null,
	  stateOff: null,
	  enableReset: true,
	  titles: ['one', 'two', 'three', 'four', 'five']
	}).controller('UibRatingController', ['$scope', '$attrs', 'uibRatingConfig', function ($scope, $attrs, ratingConfig) {
	  var ngModelCtrl = { $setViewValue: angular.noop },
	      self = this;

	  this.init = function (ngModelCtrl_) {
	    ngModelCtrl = ngModelCtrl_;
	    ngModelCtrl.$render = this.render;

	    ngModelCtrl.$formatters.push(function (value) {
	      if (angular.isNumber(value) && value << 0 !== value) {
	        value = Math.round(value);
	      }

	      return value;
	    });

	    this.stateOn = angular.isDefined($attrs.stateOn) ? $scope.$parent.$eval($attrs.stateOn) : ratingConfig.stateOn;
	    this.stateOff = angular.isDefined($attrs.stateOff) ? $scope.$parent.$eval($attrs.stateOff) : ratingConfig.stateOff;
	    this.enableReset = angular.isDefined($attrs.enableReset) ? $scope.$parent.$eval($attrs.enableReset) : ratingConfig.enableReset;
	    var tmpTitles = angular.isDefined($attrs.titles) ? $scope.$parent.$eval($attrs.titles) : ratingConfig.titles;
	    this.titles = angular.isArray(tmpTitles) && tmpTitles.length > 0 ? tmpTitles : ratingConfig.titles;

	    var ratingStates = angular.isDefined($attrs.ratingStates) ? $scope.$parent.$eval($attrs.ratingStates) : new Array(angular.isDefined($attrs.max) ? $scope.$parent.$eval($attrs.max) : ratingConfig.max);
	    $scope.range = this.buildTemplateObjects(ratingStates);
	  };

	  this.buildTemplateObjects = function (states) {
	    for (var i = 0, n = states.length; i < n; i++) {
	      states[i] = angular.extend({ index: i }, { stateOn: this.stateOn, stateOff: this.stateOff, title: this.getTitle(i) }, states[i]);
	    }
	    return states;
	  };

	  this.getTitle = function (index) {
	    if (index >= this.titles.length) {
	      return index + 1;
	    }

	    return this.titles[index];
	  };

	  $scope.rate = function (value) {
	    if (!$scope.readonly && value >= 0 && value <= $scope.range.length) {
	      var newViewValue = self.enableReset && ngModelCtrl.$viewValue === value ? 0 : value;
	      ngModelCtrl.$setViewValue(newViewValue);
	      ngModelCtrl.$render();
	    }
	  };

	  $scope.enter = function (value) {
	    if (!$scope.readonly) {
	      $scope.value = value;
	    }
	    $scope.onHover({ value: value });
	  };

	  $scope.reset = function () {
	    $scope.value = ngModelCtrl.$viewValue;
	    $scope.onLeave();
	  };

	  $scope.onKeydown = function (evt) {
	    if (/(37|38|39|40)/.test(evt.which)) {
	      evt.preventDefault();
	      evt.stopPropagation();
	      $scope.rate($scope.value + (evt.which === 38 || evt.which === 39 ? 1 : -1));
	    }
	  };

	  this.render = function () {
	    $scope.value = ngModelCtrl.$viewValue;
	    $scope.title = self.getTitle($scope.value - 1);
	  };
	}]).directive('uibRating', function () {
	  return {
	    require: ['uibRating', 'ngModel'],
	    restrict: 'A',
	    scope: {
	      readonly: '=?readOnly',
	      onHover: '&',
	      onLeave: '&'
	    },
	    controller: 'UibRatingController',
	    templateUrl: 'uib/template/rating/rating.html',
	    link: function link(scope, element, attrs, ctrls) {
	      var ratingCtrl = ctrls[0],
	          ngModelCtrl = ctrls[1];
	      ratingCtrl.init(ngModelCtrl);
	    }
	  };
	});

	angular.module('ui.bootstrap.tabs', []).controller('UibTabsetController', ['$scope', function ($scope) {
	  var ctrl = this,
	      oldIndex;
	  ctrl.tabs = [];

	  ctrl.select = function (index, evt) {
	    if (!destroyed) {
	      var previousIndex = findTabIndex(oldIndex);
	      var previousSelected = ctrl.tabs[previousIndex];
	      if (previousSelected) {
	        previousSelected.tab.onDeselect({
	          $event: evt,
	          $selectedIndex: index
	        });
	        if (evt && evt.isDefaultPrevented()) {
	          return;
	        }
	        previousSelected.tab.active = false;
	      }

	      var selected = ctrl.tabs[index];
	      if (selected) {
	        selected.tab.onSelect({
	          $event: evt
	        });
	        selected.tab.active = true;
	        ctrl.active = selected.index;
	        oldIndex = selected.index;
	      } else if (!selected && angular.isDefined(oldIndex)) {
	        ctrl.active = null;
	        oldIndex = null;
	      }
	    }
	  };

	  ctrl.addTab = function addTab(tab) {
	    ctrl.tabs.push({
	      tab: tab,
	      index: tab.index
	    });
	    ctrl.tabs.sort(function (t1, t2) {
	      if (t1.index > t2.index) {
	        return 1;
	      }

	      if (t1.index < t2.index) {
	        return -1;
	      }

	      return 0;
	    });

	    if (tab.index === ctrl.active || !angular.isDefined(ctrl.active) && ctrl.tabs.length === 1) {
	      var newActiveIndex = findTabIndex(tab.index);
	      ctrl.select(newActiveIndex);
	    }
	  };

	  ctrl.removeTab = function removeTab(tab) {
	    var index;
	    for (var i = 0; i < ctrl.tabs.length; i++) {
	      if (ctrl.tabs[i].tab === tab) {
	        index = i;
	        break;
	      }
	    }

	    if (ctrl.tabs[index].index === ctrl.active) {
	      var newActiveTabIndex = index === ctrl.tabs.length - 1 ? index - 1 : index + 1 % ctrl.tabs.length;
	      ctrl.select(newActiveTabIndex);
	    }

	    ctrl.tabs.splice(index, 1);
	  };

	  $scope.$watch('tabset.active', function (val) {
	    if (angular.isDefined(val) && val !== oldIndex) {
	      ctrl.select(findTabIndex(val));
	    }
	  });

	  var destroyed;
	  $scope.$on('$destroy', function () {
	    destroyed = true;
	  });

	  function findTabIndex(index) {
	    for (var i = 0; i < ctrl.tabs.length; i++) {
	      if (ctrl.tabs[i].index === index) {
	        return i;
	      }
	    }
	  }
	}]).directive('uibTabset', function () {
	  return {
	    transclude: true,
	    replace: true,
	    scope: {},
	    bindToController: {
	      active: '=?',
	      type: '@'
	    },
	    controller: 'UibTabsetController',
	    controllerAs: 'tabset',
	    templateUrl: function templateUrl(element, attrs) {
	      return attrs.templateUrl || 'uib/template/tabs/tabset.html';
	    },
	    link: function link(scope, element, attrs) {
	      scope.vertical = angular.isDefined(attrs.vertical) ? scope.$parent.$eval(attrs.vertical) : false;
	      scope.justified = angular.isDefined(attrs.justified) ? scope.$parent.$eval(attrs.justified) : false;
	    }
	  };
	}).directive('uibTab', ['$parse', function ($parse) {
	  return {
	    require: '^uibTabset',
	    replace: true,
	    templateUrl: function templateUrl(element, attrs) {
	      return attrs.templateUrl || 'uib/template/tabs/tab.html';
	    },
	    transclude: true,
	    scope: {
	      heading: '@',
	      index: '=?',
	      classes: '@?',
	      onSelect: '&select', //This callback is called in contentHeadingTransclude
	      //once it inserts the tab's content into the dom
	      onDeselect: '&deselect'
	    },
	    controller: function controller() {
	      //Empty controller so other directives can require being 'under' a tab
	    },
	    controllerAs: 'tab',
	    link: function link(scope, elm, attrs, tabsetCtrl, transclude) {
	      scope.disabled = false;
	      if (attrs.disable) {
	        scope.$parent.$watch($parse(attrs.disable), function (value) {
	          scope.disabled = !!value;
	        });
	      }

	      if (angular.isUndefined(attrs.index)) {
	        if (tabsetCtrl.tabs && tabsetCtrl.tabs.length) {
	          scope.index = Math.max.apply(null, tabsetCtrl.tabs.map(function (t) {
	            return t.index;
	          })) + 1;
	        } else {
	          scope.index = 0;
	        }
	      }

	      if (angular.isUndefined(attrs.classes)) {
	        scope.classes = '';
	      }

	      scope.select = function (evt) {
	        if (!scope.disabled) {
	          var index;
	          for (var i = 0; i < tabsetCtrl.tabs.length; i++) {
	            if (tabsetCtrl.tabs[i].tab === scope) {
	              index = i;
	              break;
	            }
	          }

	          tabsetCtrl.select(index, evt);
	        }
	      };

	      tabsetCtrl.addTab(scope);
	      scope.$on('$destroy', function () {
	        tabsetCtrl.removeTab(scope);
	      });

	      //We need to transclude later, once the content container is ready.
	      //when this link happens, we're inside a tab heading.
	      scope.$transcludeFn = transclude;
	    }
	  };
	}]).directive('uibTabHeadingTransclude', function () {
	  return {
	    restrict: 'A',
	    require: '^uibTab',
	    link: function link(scope, elm) {
	      scope.$watch('headingElement', function updateHeadingElement(heading) {
	        if (heading) {
	          elm.html('');
	          elm.append(heading);
	        }
	      });
	    }
	  };
	}).directive('uibTabContentTransclude', function () {
	  return {
	    restrict: 'A',
	    require: '^uibTabset',
	    link: function link(scope, elm, attrs) {
	      var tab = scope.$eval(attrs.uibTabContentTransclude).tab;

	      //Now our tab is ready to be transcluded: both the tab heading area
	      //and the tab content area are loaded.  Transclude 'em both.
	      tab.$transcludeFn(tab.$parent, function (contents) {
	        angular.forEach(contents, function (node) {
	          if (isTabHeading(node)) {
	            //Let tabHeadingTransclude know.
	            tab.headingElement = node;
	          } else {
	            elm.append(node);
	          }
	        });
	      });
	    }
	  };

	  function isTabHeading(node) {
	    return node.tagName && (node.hasAttribute('uib-tab-heading') || node.hasAttribute('data-uib-tab-heading') || node.hasAttribute('x-uib-tab-heading') || node.tagName.toLowerCase() === 'uib-tab-heading' || node.tagName.toLowerCase() === 'data-uib-tab-heading' || node.tagName.toLowerCase() === 'x-uib-tab-heading' || node.tagName.toLowerCase() === 'uib:tab-heading');
	  }
	});

	angular.module('ui.bootstrap.timepicker', []).constant('uibTimepickerConfig', {
	  hourStep: 1,
	  minuteStep: 1,
	  secondStep: 1,
	  showMeridian: true,
	  showSeconds: false,
	  meridians: null,
	  readonlyInput: false,
	  mousewheel: true,
	  arrowkeys: true,
	  showSpinners: true,
	  templateUrl: 'uib/template/timepicker/timepicker.html'
	}).controller('UibTimepickerController', ['$scope', '$element', '$attrs', '$parse', '$log', '$locale', 'uibTimepickerConfig', function ($scope, $element, $attrs, $parse, $log, $locale, timepickerConfig) {
	  var hoursModelCtrl, minutesModelCtrl, secondsModelCtrl;
	  var selected = new Date(),
	      watchers = [],
	      ngModelCtrl = { $setViewValue: angular.noop },
	      // nullModelCtrl
	  meridians = angular.isDefined($attrs.meridians) ? $scope.$parent.$eval($attrs.meridians) : timepickerConfig.meridians || $locale.DATETIME_FORMATS.AMPMS,
	      padHours = angular.isDefined($attrs.padHours) ? $scope.$parent.$eval($attrs.padHours) : true;

	  $scope.tabindex = angular.isDefined($attrs.tabindex) ? $attrs.tabindex : 0;
	  $element.removeAttr('tabindex');

	  this.init = function (ngModelCtrl_, inputs) {
	    ngModelCtrl = ngModelCtrl_;
	    ngModelCtrl.$render = this.render;

	    ngModelCtrl.$formatters.unshift(function (modelValue) {
	      return modelValue ? new Date(modelValue) : null;
	    });

	    var hoursInputEl = inputs.eq(0),
	        minutesInputEl = inputs.eq(1),
	        secondsInputEl = inputs.eq(2);

	    hoursModelCtrl = hoursInputEl.controller('ngModel');
	    minutesModelCtrl = minutesInputEl.controller('ngModel');
	    secondsModelCtrl = secondsInputEl.controller('ngModel');

	    var mousewheel = angular.isDefined($attrs.mousewheel) ? $scope.$parent.$eval($attrs.mousewheel) : timepickerConfig.mousewheel;

	    if (mousewheel) {
	      this.setupMousewheelEvents(hoursInputEl, minutesInputEl, secondsInputEl);
	    }

	    var arrowkeys = angular.isDefined($attrs.arrowkeys) ? $scope.$parent.$eval($attrs.arrowkeys) : timepickerConfig.arrowkeys;
	    if (arrowkeys) {
	      this.setupArrowkeyEvents(hoursInputEl, minutesInputEl, secondsInputEl);
	    }

	    $scope.readonlyInput = angular.isDefined($attrs.readonlyInput) ? $scope.$parent.$eval($attrs.readonlyInput) : timepickerConfig.readonlyInput;
	    this.setupInputEvents(hoursInputEl, minutesInputEl, secondsInputEl);
	  };

	  var hourStep = timepickerConfig.hourStep;
	  if ($attrs.hourStep) {
	    watchers.push($scope.$parent.$watch($parse($attrs.hourStep), function (value) {
	      hourStep = +value;
	    }));
	  }

	  var minuteStep = timepickerConfig.minuteStep;
	  if ($attrs.minuteStep) {
	    watchers.push($scope.$parent.$watch($parse($attrs.minuteStep), function (value) {
	      minuteStep = +value;
	    }));
	  }

	  var min;
	  watchers.push($scope.$parent.$watch($parse($attrs.min), function (value) {
	    var dt = new Date(value);
	    min = isNaN(dt) ? undefined : dt;
	  }));

	  var max;
	  watchers.push($scope.$parent.$watch($parse($attrs.max), function (value) {
	    var dt = new Date(value);
	    max = isNaN(dt) ? undefined : dt;
	  }));

	  var disabled = false;
	  if ($attrs.ngDisabled) {
	    watchers.push($scope.$parent.$watch($parse($attrs.ngDisabled), function (value) {
	      disabled = value;
	    }));
	  }

	  $scope.noIncrementHours = function () {
	    var incrementedSelected = addMinutes(selected, hourStep * 60);
	    return disabled || incrementedSelected > max || incrementedSelected < selected && incrementedSelected < min;
	  };

	  $scope.noDecrementHours = function () {
	    var decrementedSelected = addMinutes(selected, -hourStep * 60);
	    return disabled || decrementedSelected < min || decrementedSelected > selected && decrementedSelected > max;
	  };

	  $scope.noIncrementMinutes = function () {
	    var incrementedSelected = addMinutes(selected, minuteStep);
	    return disabled || incrementedSelected > max || incrementedSelected < selected && incrementedSelected < min;
	  };

	  $scope.noDecrementMinutes = function () {
	    var decrementedSelected = addMinutes(selected, -minuteStep);
	    return disabled || decrementedSelected < min || decrementedSelected > selected && decrementedSelected > max;
	  };

	  $scope.noIncrementSeconds = function () {
	    var incrementedSelected = addSeconds(selected, secondStep);
	    return disabled || incrementedSelected > max || incrementedSelected < selected && incrementedSelected < min;
	  };

	  $scope.noDecrementSeconds = function () {
	    var decrementedSelected = addSeconds(selected, -secondStep);
	    return disabled || decrementedSelected < min || decrementedSelected > selected && decrementedSelected > max;
	  };

	  $scope.noToggleMeridian = function () {
	    if (selected.getHours() < 12) {
	      return disabled || addMinutes(selected, 12 * 60) > max;
	    }

	    return disabled || addMinutes(selected, -12 * 60) < min;
	  };

	  var secondStep = timepickerConfig.secondStep;
	  if ($attrs.secondStep) {
	    watchers.push($scope.$parent.$watch($parse($attrs.secondStep), function (value) {
	      secondStep = +value;
	    }));
	  }

	  $scope.showSeconds = timepickerConfig.showSeconds;
	  if ($attrs.showSeconds) {
	    watchers.push($scope.$parent.$watch($parse($attrs.showSeconds), function (value) {
	      $scope.showSeconds = !!value;
	    }));
	  }

	  // 12H / 24H mode
	  $scope.showMeridian = timepickerConfig.showMeridian;
	  if ($attrs.showMeridian) {
	    watchers.push($scope.$parent.$watch($parse($attrs.showMeridian), function (value) {
	      $scope.showMeridian = !!value;

	      if (ngModelCtrl.$error.time) {
	        // Evaluate from template
	        var hours = getHoursFromTemplate(),
	            minutes = getMinutesFromTemplate();
	        if (angular.isDefined(hours) && angular.isDefined(minutes)) {
	          selected.setHours(hours);
	          refresh();
	        }
	      } else {
	        updateTemplate();
	      }
	    }));
	  }

	  // Get $scope.hours in 24H mode if valid
	  function getHoursFromTemplate() {
	    var hours = +$scope.hours;
	    var valid = $scope.showMeridian ? hours > 0 && hours < 13 : hours >= 0 && hours < 24;
	    if (!valid || $scope.hours === '') {
	      return undefined;
	    }

	    if ($scope.showMeridian) {
	      if (hours === 12) {
	        hours = 0;
	      }
	      if ($scope.meridian === meridians[1]) {
	        hours = hours + 12;
	      }
	    }
	    return hours;
	  }

	  function getMinutesFromTemplate() {
	    var minutes = +$scope.minutes;
	    var valid = minutes >= 0 && minutes < 60;
	    if (!valid || $scope.minutes === '') {
	      return undefined;
	    }
	    return minutes;
	  }

	  function getSecondsFromTemplate() {
	    var seconds = +$scope.seconds;
	    return seconds >= 0 && seconds < 60 ? seconds : undefined;
	  }

	  function pad(value, noPad) {
	    if (value === null) {
	      return '';
	    }

	    return angular.isDefined(value) && value.toString().length < 2 && !noPad ? '0' + value : value.toString();
	  }

	  // Respond on mousewheel spin
	  this.setupMousewheelEvents = function (hoursInputEl, minutesInputEl, secondsInputEl) {
	    var isScrollingUp = function isScrollingUp(e) {
	      if (e.originalEvent) {
	        e = e.originalEvent;
	      }
	      //pick correct delta variable depending on event
	      var delta = e.wheelDelta ? e.wheelDelta : -e.deltaY;
	      return e.detail || delta > 0;
	    };

	    hoursInputEl.on('mousewheel wheel', function (e) {
	      if (!disabled) {
	        $scope.$apply(isScrollingUp(e) ? $scope.incrementHours() : $scope.decrementHours());
	      }
	      e.preventDefault();
	    });

	    minutesInputEl.on('mousewheel wheel', function (e) {
	      if (!disabled) {
	        $scope.$apply(isScrollingUp(e) ? $scope.incrementMinutes() : $scope.decrementMinutes());
	      }
	      e.preventDefault();
	    });

	    secondsInputEl.on('mousewheel wheel', function (e) {
	      if (!disabled) {
	        $scope.$apply(isScrollingUp(e) ? $scope.incrementSeconds() : $scope.decrementSeconds());
	      }
	      e.preventDefault();
	    });
	  };

	  // Respond on up/down arrowkeys
	  this.setupArrowkeyEvents = function (hoursInputEl, minutesInputEl, secondsInputEl) {
	    hoursInputEl.on('keydown', function (e) {
	      if (!disabled) {
	        if (e.which === 38) {
	          // up
	          e.preventDefault();
	          $scope.incrementHours();
	          $scope.$apply();
	        } else if (e.which === 40) {
	          // down
	          e.preventDefault();
	          $scope.decrementHours();
	          $scope.$apply();
	        }
	      }
	    });

	    minutesInputEl.on('keydown', function (e) {
	      if (!disabled) {
	        if (e.which === 38) {
	          // up
	          e.preventDefault();
	          $scope.incrementMinutes();
	          $scope.$apply();
	        } else if (e.which === 40) {
	          // down
	          e.preventDefault();
	          $scope.decrementMinutes();
	          $scope.$apply();
	        }
	      }
	    });

	    secondsInputEl.on('keydown', function (e) {
	      if (!disabled) {
	        if (e.which === 38) {
	          // up
	          e.preventDefault();
	          $scope.incrementSeconds();
	          $scope.$apply();
	        } else if (e.which === 40) {
	          // down
	          e.preventDefault();
	          $scope.decrementSeconds();
	          $scope.$apply();
	        }
	      }
	    });
	  };

	  this.setupInputEvents = function (hoursInputEl, minutesInputEl, secondsInputEl) {
	    if ($scope.readonlyInput) {
	      $scope.updateHours = angular.noop;
	      $scope.updateMinutes = angular.noop;
	      $scope.updateSeconds = angular.noop;
	      return;
	    }

	    var invalidate = function invalidate(invalidHours, invalidMinutes, invalidSeconds) {
	      ngModelCtrl.$setViewValue(null);
	      ngModelCtrl.$setValidity('time', false);
	      if (angular.isDefined(invalidHours)) {
	        $scope.invalidHours = invalidHours;
	        if (hoursModelCtrl) {
	          hoursModelCtrl.$setValidity('hours', false);
	        }
	      }

	      if (angular.isDefined(invalidMinutes)) {
	        $scope.invalidMinutes = invalidMinutes;
	        if (minutesModelCtrl) {
	          minutesModelCtrl.$setValidity('minutes', false);
	        }
	      }

	      if (angular.isDefined(invalidSeconds)) {
	        $scope.invalidSeconds = invalidSeconds;
	        if (secondsModelCtrl) {
	          secondsModelCtrl.$setValidity('seconds', false);
	        }
	      }
	    };

	    $scope.updateHours = function () {
	      var hours = getHoursFromTemplate(),
	          minutes = getMinutesFromTemplate();

	      ngModelCtrl.$setDirty();

	      if (angular.isDefined(hours) && angular.isDefined(minutes)) {
	        selected.setHours(hours);
	        selected.setMinutes(minutes);
	        if (selected < min || selected > max) {
	          invalidate(true);
	        } else {
	          refresh('h');
	        }
	      } else {
	        invalidate(true);
	      }
	    };

	    hoursInputEl.on('blur', function (e) {
	      ngModelCtrl.$setTouched();
	      if (modelIsEmpty()) {
	        makeValid();
	      } else if ($scope.hours === null || $scope.hours === '') {
	        invalidate(true);
	      } else if (!$scope.invalidHours && $scope.hours < 10) {
	        $scope.$apply(function () {
	          $scope.hours = pad($scope.hours, !padHours);
	        });
	      }
	    });

	    $scope.updateMinutes = function () {
	      var minutes = getMinutesFromTemplate(),
	          hours = getHoursFromTemplate();

	      ngModelCtrl.$setDirty();

	      if (angular.isDefined(minutes) && angular.isDefined(hours)) {
	        selected.setHours(hours);
	        selected.setMinutes(minutes);
	        if (selected < min || selected > max) {
	          invalidate(undefined, true);
	        } else {
	          refresh('m');
	        }
	      } else {
	        invalidate(undefined, true);
	      }
	    };

	    minutesInputEl.on('blur', function (e) {
	      ngModelCtrl.$setTouched();
	      if (modelIsEmpty()) {
	        makeValid();
	      } else if ($scope.minutes === null) {
	        invalidate(undefined, true);
	      } else if (!$scope.invalidMinutes && $scope.minutes < 10) {
	        $scope.$apply(function () {
	          $scope.minutes = pad($scope.minutes);
	        });
	      }
	    });

	    $scope.updateSeconds = function () {
	      var seconds = getSecondsFromTemplate();

	      ngModelCtrl.$setDirty();

	      if (angular.isDefined(seconds)) {
	        selected.setSeconds(seconds);
	        refresh('s');
	      } else {
	        invalidate(undefined, undefined, true);
	      }
	    };

	    secondsInputEl.on('blur', function (e) {
	      if (modelIsEmpty()) {
	        makeValid();
	      } else if (!$scope.invalidSeconds && $scope.seconds < 10) {
	        $scope.$apply(function () {
	          $scope.seconds = pad($scope.seconds);
	        });
	      }
	    });
	  };

	  this.render = function () {
	    var date = ngModelCtrl.$viewValue;

	    if (isNaN(date)) {
	      ngModelCtrl.$setValidity('time', false);
	      $log.error('Timepicker directive: "ng-model" value must be a Date object, a number of milliseconds since 01.01.1970 or a string representing an RFC2822 or ISO 8601 date.');
	    } else {
	      if (date) {
	        selected = date;
	      }

	      if (selected < min || selected > max) {
	        ngModelCtrl.$setValidity('time', false);
	        $scope.invalidHours = true;
	        $scope.invalidMinutes = true;
	      } else {
	        makeValid();
	      }
	      updateTemplate();
	    }
	  };

	  // Call internally when we know that model is valid.
	  function refresh(keyboardChange) {
	    makeValid();
	    ngModelCtrl.$setViewValue(new Date(selected));
	    updateTemplate(keyboardChange);
	  }

	  function makeValid() {
	    if (hoursModelCtrl) {
	      hoursModelCtrl.$setValidity('hours', true);
	    }

	    if (minutesModelCtrl) {
	      minutesModelCtrl.$setValidity('minutes', true);
	    }

	    if (secondsModelCtrl) {
	      secondsModelCtrl.$setValidity('seconds', true);
	    }

	    ngModelCtrl.$setValidity('time', true);
	    $scope.invalidHours = false;
	    $scope.invalidMinutes = false;
	    $scope.invalidSeconds = false;
	  }

	  function updateTemplate(keyboardChange) {
	    if (!ngModelCtrl.$modelValue) {
	      $scope.hours = null;
	      $scope.minutes = null;
	      $scope.seconds = null;
	      $scope.meridian = meridians[0];
	    } else {
	      var hours = selected.getHours(),
	          minutes = selected.getMinutes(),
	          seconds = selected.getSeconds();

	      if ($scope.showMeridian) {
	        hours = hours === 0 || hours === 12 ? 12 : hours % 12; // Convert 24 to 12 hour system
	      }

	      $scope.hours = keyboardChange === 'h' ? hours : pad(hours, !padHours);
	      if (keyboardChange !== 'm') {
	        $scope.minutes = pad(minutes);
	      }
	      $scope.meridian = selected.getHours() < 12 ? meridians[0] : meridians[1];

	      if (keyboardChange !== 's') {
	        $scope.seconds = pad(seconds);
	      }
	      $scope.meridian = selected.getHours() < 12 ? meridians[0] : meridians[1];
	    }
	  }

	  function addSecondsToSelected(seconds) {
	    selected = addSeconds(selected, seconds);
	    refresh();
	  }

	  function addMinutes(selected, minutes) {
	    return addSeconds(selected, minutes * 60);
	  }

	  function addSeconds(date, seconds) {
	    var dt = new Date(date.getTime() + seconds * 1000);
	    var newDate = new Date(date);
	    newDate.setHours(dt.getHours(), dt.getMinutes(), dt.getSeconds());
	    return newDate;
	  }

	  function modelIsEmpty() {
	    return ($scope.hours === null || $scope.hours === '') && ($scope.minutes === null || $scope.minutes === '') && (!$scope.showSeconds || $scope.showSeconds && ($scope.seconds === null || $scope.seconds === ''));
	  }

	  $scope.showSpinners = angular.isDefined($attrs.showSpinners) ? $scope.$parent.$eval($attrs.showSpinners) : timepickerConfig.showSpinners;

	  $scope.incrementHours = function () {
	    if (!$scope.noIncrementHours()) {
	      addSecondsToSelected(hourStep * 60 * 60);
	    }
	  };

	  $scope.decrementHours = function () {
	    if (!$scope.noDecrementHours()) {
	      addSecondsToSelected(-hourStep * 60 * 60);
	    }
	  };

	  $scope.incrementMinutes = function () {
	    if (!$scope.noIncrementMinutes()) {
	      addSecondsToSelected(minuteStep * 60);
	    }
	  };

	  $scope.decrementMinutes = function () {
	    if (!$scope.noDecrementMinutes()) {
	      addSecondsToSelected(-minuteStep * 60);
	    }
	  };

	  $scope.incrementSeconds = function () {
	    if (!$scope.noIncrementSeconds()) {
	      addSecondsToSelected(secondStep);
	    }
	  };

	  $scope.decrementSeconds = function () {
	    if (!$scope.noDecrementSeconds()) {
	      addSecondsToSelected(-secondStep);
	    }
	  };

	  $scope.toggleMeridian = function () {
	    var minutes = getMinutesFromTemplate(),
	        hours = getHoursFromTemplate();

	    if (!$scope.noToggleMeridian()) {
	      if (angular.isDefined(minutes) && angular.isDefined(hours)) {
	        addSecondsToSelected(12 * 60 * (selected.getHours() < 12 ? 60 : -60));
	      } else {
	        $scope.meridian = $scope.meridian === meridians[0] ? meridians[1] : meridians[0];
	      }
	    }
	  };

	  $scope.blur = function () {
	    ngModelCtrl.$setTouched();
	  };

	  $scope.$on('$destroy', function () {
	    while (watchers.length) {
	      watchers.shift()();
	    }
	  });
	}]).directive('uibTimepicker', ['uibTimepickerConfig', function (uibTimepickerConfig) {
	  return {
	    require: ['uibTimepicker', '?^ngModel'],
	    restrict: 'A',
	    controller: 'UibTimepickerController',
	    controllerAs: 'timepicker',
	    scope: {},
	    templateUrl: function templateUrl(element, attrs) {
	      return attrs.templateUrl || uibTimepickerConfig.templateUrl;
	    },
	    link: function link(scope, element, attrs, ctrls) {
	      var timepickerCtrl = ctrls[0],
	          ngModelCtrl = ctrls[1];

	      if (ngModelCtrl) {
	        timepickerCtrl.init(ngModelCtrl, element.find('input'));
	      }
	    }
	  };
	}]);

	angular.module('ui.bootstrap.typeahead', ['ui.bootstrap.debounce', 'ui.bootstrap.position'])

	/**
	 * A helper service that can parse typeahead's syntax (string provided by users)
	 * Extracted to a separate service for ease of unit testing
	 */
	.factory('uibTypeaheadParser', ['$parse', function ($parse) {
	  //                      000001111111100000000000002222222200000000000000003333333333333330000000000044444444000
	  var TYPEAHEAD_REGEXP = /^\s*([\s\S]+?)(?:\s+as\s+([\s\S]+?))?\s+for\s+(?:([\$\w][\$\w\d]*))\s+in\s+([\s\S]+?)$/;
	  return {
	    parse: function parse(input) {
	      var match = input.match(TYPEAHEAD_REGEXP);
	      if (!match) {
	        throw new Error('Expected typeahead specification in form of "_modelValue_ (as _label_)? for _item_ in _collection_"' + ' but got "' + input + '".');
	      }

	      return {
	        itemName: match[3],
	        source: $parse(match[4]),
	        viewMapper: $parse(match[2] || match[1]),
	        modelMapper: $parse(match[1])
	      };
	    }
	  };
	}]).controller('UibTypeaheadController', ['$scope', '$element', '$attrs', '$compile', '$parse', '$q', '$timeout', '$document', '$window', '$rootScope', '$$debounce', '$uibPosition', 'uibTypeaheadParser', function (originalScope, element, attrs, $compile, $parse, $q, $timeout, $document, $window, $rootScope, $$debounce, $position, typeaheadParser) {
	  var HOT_KEYS = [9, 13, 27, 38, 40];
	  var eventDebounceTime = 200;
	  var modelCtrl, ngModelOptions;
	  //SUPPORTED ATTRIBUTES (OPTIONS)

	  //minimal no of characters that needs to be entered before typeahead kicks-in
	  var minLength = originalScope.$eval(attrs.typeaheadMinLength);
	  if (!minLength && minLength !== 0) {
	    minLength = 1;
	  }

	  originalScope.$watch(attrs.typeaheadMinLength, function (newVal) {
	    minLength = !newVal && newVal !== 0 ? 1 : newVal;
	  });

	  //minimal wait time after last character typed before typeahead kicks-in
	  var waitTime = originalScope.$eval(attrs.typeaheadWaitMs) || 0;

	  //should it restrict model values to the ones selected from the popup only?
	  var isEditable = originalScope.$eval(attrs.typeaheadEditable) !== false;
	  originalScope.$watch(attrs.typeaheadEditable, function (newVal) {
	    isEditable = newVal !== false;
	  });

	  //binding to a variable that indicates if matches are being retrieved asynchronously
	  var isLoadingSetter = $parse(attrs.typeaheadLoading).assign || angular.noop;

	  //a function to determine if an event should cause selection
	  var isSelectEvent = attrs.typeaheadShouldSelect ? $parse(attrs.typeaheadShouldSelect) : function (scope, vals) {
	    var evt = vals.$event;
	    return evt.which === 13 || evt.which === 9;
	  };

	  //a callback executed when a match is selected
	  var onSelectCallback = $parse(attrs.typeaheadOnSelect);

	  //should it select highlighted popup value when losing focus?
	  var isSelectOnBlur = angular.isDefined(attrs.typeaheadSelectOnBlur) ? originalScope.$eval(attrs.typeaheadSelectOnBlur) : false;

	  //binding to a variable that indicates if there were no results after the query is completed
	  var isNoResultsSetter = $parse(attrs.typeaheadNoResults).assign || angular.noop;

	  var inputFormatter = attrs.typeaheadInputFormatter ? $parse(attrs.typeaheadInputFormatter) : undefined;

	  var appendToBody = attrs.typeaheadAppendToBody ? originalScope.$eval(attrs.typeaheadAppendToBody) : false;

	  var appendTo = attrs.typeaheadAppendTo ? originalScope.$eval(attrs.typeaheadAppendTo) : null;

	  var focusFirst = originalScope.$eval(attrs.typeaheadFocusFirst) !== false;

	  //If input matches an item of the list exactly, select it automatically
	  var selectOnExact = attrs.typeaheadSelectOnExact ? originalScope.$eval(attrs.typeaheadSelectOnExact) : false;

	  //binding to a variable that indicates if dropdown is open
	  var isOpenSetter = $parse(attrs.typeaheadIsOpen).assign || angular.noop;

	  var showHint = originalScope.$eval(attrs.typeaheadShowHint) || false;

	  //INTERNAL VARIABLES

	  //model setter executed upon match selection
	  var parsedModel = $parse(attrs.ngModel);
	  var invokeModelSetter = $parse(attrs.ngModel + '($$$p)');
	  var $setModelValue = function $setModelValue(scope, newValue) {
	    if (angular.isFunction(parsedModel(originalScope)) && ngModelOptions && ngModelOptions.$options && ngModelOptions.$options.getterSetter) {
	      return invokeModelSetter(scope, { $$$p: newValue });
	    }

	    return parsedModel.assign(scope, newValue);
	  };

	  //expressions used by typeahead
	  var parserResult = typeaheadParser.parse(attrs.uibTypeahead);

	  var hasFocus;

	  //Used to avoid bug in iOS webview where iOS keyboard does not fire
	  //mousedown & mouseup events
	  //Issue #3699
	  var selected;

	  //create a child scope for the typeahead directive so we are not polluting original scope
	  //with typeahead-specific data (matches, query etc.)
	  var scope = originalScope.$new();
	  var offDestroy = originalScope.$on('$destroy', function () {
	    scope.$destroy();
	  });
	  scope.$on('$destroy', offDestroy);

	  // WAI-ARIA
	  var popupId = 'typeahead-' + scope.$id + '-' + Math.floor(Math.random() * 10000);
	  element.attr({
	    'aria-autocomplete': 'list',
	    'aria-expanded': false,
	    'aria-owns': popupId
	  });

	  var inputsContainer, hintInputElem;
	  //add read-only input to show hint
	  if (showHint) {
	    inputsContainer = angular.element('<div></div>');
	    inputsContainer.css('position', 'relative');
	    element.after(inputsContainer);
	    hintInputElem = element.clone();
	    hintInputElem.attr('placeholder', '');
	    hintInputElem.attr('tabindex', '-1');
	    hintInputElem.val('');
	    hintInputElem.css({
	      'position': 'absolute',
	      'top': '0px',
	      'left': '0px',
	      'border-color': 'transparent',
	      'box-shadow': 'none',
	      'opacity': 1,
	      'background': 'none 0% 0% / auto repeat scroll padding-box border-box rgb(255, 255, 255)',
	      'color': '#999'
	    });
	    element.css({
	      'position': 'relative',
	      'vertical-align': 'top',
	      'background-color': 'transparent'
	    });

	    if (hintInputElem.attr('id')) {
	      hintInputElem.removeAttr('id'); // remove duplicate id if present.
	    }
	    inputsContainer.append(hintInputElem);
	    hintInputElem.after(element);
	  }

	  //pop-up element used to display matches
	  var popUpEl = angular.element('<div uib-typeahead-popup></div>');
	  popUpEl.attr({
	    id: popupId,
	    matches: 'matches',
	    active: 'activeIdx',
	    select: 'select(activeIdx, evt)',
	    'move-in-progress': 'moveInProgress',
	    query: 'query',
	    position: 'position',
	    'assign-is-open': 'assignIsOpen(isOpen)',
	    debounce: 'debounceUpdate'
	  });
	  //custom item template
	  if (angular.isDefined(attrs.typeaheadTemplateUrl)) {
	    popUpEl.attr('template-url', attrs.typeaheadTemplateUrl);
	  }

	  if (angular.isDefined(attrs.typeaheadPopupTemplateUrl)) {
	    popUpEl.attr('popup-template-url', attrs.typeaheadPopupTemplateUrl);
	  }

	  var resetHint = function resetHint() {
	    if (showHint) {
	      hintInputElem.val('');
	    }
	  };

	  var resetMatches = function resetMatches() {
	    scope.matches = [];
	    scope.activeIdx = -1;
	    element.attr('aria-expanded', false);
	    resetHint();
	  };

	  var getMatchId = function getMatchId(index) {
	    return popupId + '-option-' + index;
	  };

	  // Indicate that the specified match is the active (pre-selected) item in the list owned by this typeahead.
	  // This attribute is added or removed automatically when the `activeIdx` changes.
	  scope.$watch('activeIdx', function (index) {
	    if (index < 0) {
	      element.removeAttr('aria-activedescendant');
	    } else {
	      element.attr('aria-activedescendant', getMatchId(index));
	    }
	  });

	  var inputIsExactMatch = function inputIsExactMatch(inputValue, index) {
	    if (scope.matches.length > index && inputValue) {
	      return inputValue.toUpperCase() === scope.matches[index].label.toUpperCase();
	    }

	    return false;
	  };

	  var getMatchesAsync = function getMatchesAsync(inputValue, evt) {
	    var locals = { $viewValue: inputValue };
	    isLoadingSetter(originalScope, true);
	    isNoResultsSetter(originalScope, false);
	    $q.when(parserResult.source(originalScope, locals)).then(function (matches) {
	      //it might happen that several async queries were in progress if a user were typing fast
	      //but we are interested only in responses that correspond to the current view value
	      var onCurrentRequest = inputValue === modelCtrl.$viewValue;
	      if (onCurrentRequest && hasFocus) {
	        if (matches && matches.length > 0) {
	          scope.activeIdx = focusFirst ? 0 : -1;
	          isNoResultsSetter(originalScope, false);
	          scope.matches.length = 0;

	          //transform labels
	          for (var i = 0; i < matches.length; i++) {
	            locals[parserResult.itemName] = matches[i];
	            scope.matches.push({
	              id: getMatchId(i),
	              label: parserResult.viewMapper(scope, locals),
	              model: matches[i]
	            });
	          }

	          scope.query = inputValue;
	          //position pop-up with matches - we need to re-calculate its position each time we are opening a window
	          //with matches as a pop-up might be absolute-positioned and position of an input might have changed on a page
	          //due to other elements being rendered
	          recalculatePosition();

	          element.attr('aria-expanded', true);

	          //Select the single remaining option if user input matches
	          if (selectOnExact && scope.matches.length === 1 && inputIsExactMatch(inputValue, 0)) {
	            if (angular.isNumber(scope.debounceUpdate) || angular.isObject(scope.debounceUpdate)) {
	              $$debounce(function () {
	                scope.select(0, evt);
	              }, angular.isNumber(scope.debounceUpdate) ? scope.debounceUpdate : scope.debounceUpdate['default']);
	            } else {
	              scope.select(0, evt);
	            }
	          }

	          if (showHint) {
	            var firstLabel = scope.matches[0].label;
	            if (angular.isString(inputValue) && inputValue.length > 0 && firstLabel.slice(0, inputValue.length).toUpperCase() === inputValue.toUpperCase()) {
	              hintInputElem.val(inputValue + firstLabel.slice(inputValue.length));
	            } else {
	              hintInputElem.val('');
	            }
	          }
	        } else {
	          resetMatches();
	          isNoResultsSetter(originalScope, true);
	        }
	      }
	      if (onCurrentRequest) {
	        isLoadingSetter(originalScope, false);
	      }
	    }, function () {
	      resetMatches();
	      isLoadingSetter(originalScope, false);
	      isNoResultsSetter(originalScope, true);
	    });
	  };

	  // bind events only if appendToBody params exist - performance feature
	  if (appendToBody) {
	    angular.element($window).on('resize', fireRecalculating);
	    $document.find('body').on('scroll', fireRecalculating);
	  }

	  // Declare the debounced function outside recalculating for
	  // proper debouncing
	  var debouncedRecalculate = $$debounce(function () {
	    // if popup is visible
	    if (scope.matches.length) {
	      recalculatePosition();
	    }

	    scope.moveInProgress = false;
	  }, eventDebounceTime);

	  // Default progress type
	  scope.moveInProgress = false;

	  function fireRecalculating() {
	    if (!scope.moveInProgress) {
	      scope.moveInProgress = true;
	      scope.$digest();
	    }

	    debouncedRecalculate();
	  }

	  // recalculate actual position and set new values to scope
	  // after digest loop is popup in right position
	  function recalculatePosition() {
	    scope.position = appendToBody ? $position.offset(element) : $position.position(element);
	    scope.position.top += element.prop('offsetHeight');
	  }

	  //we need to propagate user's query so we can higlight matches
	  scope.query = undefined;

	  //Declare the timeout promise var outside the function scope so that stacked calls can be cancelled later
	  var timeoutPromise;

	  var scheduleSearchWithTimeout = function scheduleSearchWithTimeout(inputValue) {
	    timeoutPromise = $timeout(function () {
	      getMatchesAsync(inputValue);
	    }, waitTime);
	  };

	  var cancelPreviousTimeout = function cancelPreviousTimeout() {
	    if (timeoutPromise) {
	      $timeout.cancel(timeoutPromise);
	    }
	  };

	  resetMatches();

	  scope.assignIsOpen = function (isOpen) {
	    isOpenSetter(originalScope, isOpen);
	  };

	  scope.select = function (activeIdx, evt) {
	    //called from within the $digest() cycle
	    var locals = {};
	    var model, item;

	    selected = true;
	    locals[parserResult.itemName] = item = scope.matches[activeIdx].model;
	    model = parserResult.modelMapper(originalScope, locals);
	    $setModelValue(originalScope, model);
	    modelCtrl.$setValidity('editable', true);
	    modelCtrl.$setValidity('parse', true);

	    onSelectCallback(originalScope, {
	      $item: item,
	      $model: model,
	      $label: parserResult.viewMapper(originalScope, locals),
	      $event: evt
	    });

	    resetMatches();

	    //return focus to the input element if a match was selected via a mouse click event
	    // use timeout to avoid $rootScope:inprog error
	    if (scope.$eval(attrs.typeaheadFocusOnSelect) !== false) {
	      $timeout(function () {
	        element[0].focus();
	      }, 0, false);
	    }
	  };

	  //bind keyboard events: arrows up(38) / down(40), enter(13) and tab(9), esc(27)
	  element.on('keydown', function (evt) {
	    //typeahead is open and an "interesting" key was pressed
	    if (scope.matches.length === 0 || HOT_KEYS.indexOf(evt.which) === -1) {
	      return;
	    }

	    var shouldSelect = isSelectEvent(originalScope, { $event: evt });

	    /**
	     * if there's nothing selected (i.e. focusFirst) and enter or tab is hit
	     * or
	     * shift + tab is pressed to bring focus to the previous element
	     * then clear the results
	     */
	    if (scope.activeIdx === -1 && shouldSelect || evt.which === 9 && !!evt.shiftKey) {
	      resetMatches();
	      scope.$digest();
	      return;
	    }

	    evt.preventDefault();
	    var target;
	    switch (evt.which) {
	      case 27:
	        // escape
	        evt.stopPropagation();

	        resetMatches();
	        originalScope.$digest();
	        break;
	      case 38:
	        // up arrow
	        scope.activeIdx = (scope.activeIdx > 0 ? scope.activeIdx : scope.matches.length) - 1;
	        scope.$digest();
	        target = popUpEl[0].querySelectorAll('.uib-typeahead-match')[scope.activeIdx];
	        target.parentNode.scrollTop = target.offsetTop;
	        break;
	      case 40:
	        // down arrow
	        scope.activeIdx = (scope.activeIdx + 1) % scope.matches.length;
	        scope.$digest();
	        target = popUpEl[0].querySelectorAll('.uib-typeahead-match')[scope.activeIdx];
	        target.parentNode.scrollTop = target.offsetTop;
	        break;
	      default:
	        if (shouldSelect) {
	          scope.$apply(function () {
	            if (angular.isNumber(scope.debounceUpdate) || angular.isObject(scope.debounceUpdate)) {
	              $$debounce(function () {
	                scope.select(scope.activeIdx, evt);
	              }, angular.isNumber(scope.debounceUpdate) ? scope.debounceUpdate : scope.debounceUpdate['default']);
	            } else {
	              scope.select(scope.activeIdx, evt);
	            }
	          });
	        }
	    }
	  });

	  element.on('focus', function (evt) {
	    hasFocus = true;
	    if (minLength === 0 && !modelCtrl.$viewValue) {
	      $timeout(function () {
	        getMatchesAsync(modelCtrl.$viewValue, evt);
	      }, 0);
	    }
	  });

	  element.on('blur', function (evt) {
	    if (isSelectOnBlur && scope.matches.length && scope.activeIdx !== -1 && !selected) {
	      selected = true;
	      scope.$apply(function () {
	        if (angular.isObject(scope.debounceUpdate) && angular.isNumber(scope.debounceUpdate.blur)) {
	          $$debounce(function () {
	            scope.select(scope.activeIdx, evt);
	          }, scope.debounceUpdate.blur);
	        } else {
	          scope.select(scope.activeIdx, evt);
	        }
	      });
	    }
	    if (!isEditable && modelCtrl.$error.editable) {
	      modelCtrl.$setViewValue();
	      scope.$apply(function () {
	        // Reset validity as we are clearing
	        modelCtrl.$setValidity('editable', true);
	        modelCtrl.$setValidity('parse', true);
	      });
	      element.val('');
	    }
	    hasFocus = false;
	    selected = false;
	  });

	  // Keep reference to click handler to unbind it.
	  var dismissClickHandler = function dismissClickHandler(evt) {
	    // Issue #3973
	    // Firefox treats right click as a click on document
	    if (element[0] !== evt.target && evt.which !== 3 && scope.matches.length !== 0) {
	      resetMatches();
	      if (!$rootScope.$$phase) {
	        originalScope.$digest();
	      }
	    }
	  };

	  $document.on('click', dismissClickHandler);

	  originalScope.$on('$destroy', function () {
	    $document.off('click', dismissClickHandler);
	    if (appendToBody || appendTo) {
	      $popup.remove();
	    }

	    if (appendToBody) {
	      angular.element($window).off('resize', fireRecalculating);
	      $document.find('body').off('scroll', fireRecalculating);
	    }
	    // Prevent jQuery cache memory leak
	    popUpEl.remove();

	    if (showHint) {
	      inputsContainer.remove();
	    }
	  });

	  var $popup = $compile(popUpEl)(scope);

	  if (appendToBody) {
	    $document.find('body').append($popup);
	  } else if (appendTo) {
	    angular.element(appendTo).eq(0).append($popup);
	  } else {
	    element.after($popup);
	  }

	  this.init = function (_modelCtrl, _ngModelOptions) {
	    modelCtrl = _modelCtrl;
	    ngModelOptions = _ngModelOptions;

	    scope.debounceUpdate = modelCtrl.$options && $parse(modelCtrl.$options.debounce)(originalScope);

	    //plug into $parsers pipeline to open a typeahead on view changes initiated from DOM
	    //$parsers kick-in on all the changes coming from the view as well as manually triggered by $setViewValue
	    modelCtrl.$parsers.unshift(function (inputValue) {
	      hasFocus = true;

	      if (minLength === 0 || inputValue && inputValue.length >= minLength) {
	        if (waitTime > 0) {
	          cancelPreviousTimeout();
	          scheduleSearchWithTimeout(inputValue);
	        } else {
	          getMatchesAsync(inputValue);
	        }
	      } else {
	        isLoadingSetter(originalScope, false);
	        cancelPreviousTimeout();
	        resetMatches();
	      }

	      if (isEditable) {
	        return inputValue;
	      }

	      if (!inputValue) {
	        // Reset in case user had typed something previously.
	        modelCtrl.$setValidity('editable', true);
	        return null;
	      }

	      modelCtrl.$setValidity('editable', false);
	      return undefined;
	    });

	    modelCtrl.$formatters.push(function (modelValue) {
	      var candidateViewValue, emptyViewValue;
	      var locals = {};

	      // The validity may be set to false via $parsers (see above) if
	      // the model is restricted to selected values. If the model
	      // is set manually it is considered to be valid.
	      if (!isEditable) {
	        modelCtrl.$setValidity('editable', true);
	      }

	      if (inputFormatter) {
	        locals.$model = modelValue;
	        return inputFormatter(originalScope, locals);
	      }

	      //it might happen that we don't have enough info to properly render input value
	      //we need to check for this situation and simply return model value if we can't apply custom formatting
	      locals[parserResult.itemName] = modelValue;
	      candidateViewValue = parserResult.viewMapper(originalScope, locals);
	      locals[parserResult.itemName] = undefined;
	      emptyViewValue = parserResult.viewMapper(originalScope, locals);

	      return candidateViewValue !== emptyViewValue ? candidateViewValue : modelValue;
	    });
	  };
	}]).directive('uibTypeahead', function () {
	  return {
	    controller: 'UibTypeaheadController',
	    require: ['ngModel', '^?ngModelOptions', 'uibTypeahead'],
	    link: function link(originalScope, element, attrs, ctrls) {
	      ctrls[2].init(ctrls[0], ctrls[1]);
	    }
	  };
	}).directive('uibTypeaheadPopup', ['$$debounce', function ($$debounce) {
	  return {
	    scope: {
	      matches: '=',
	      query: '=',
	      active: '=',
	      position: '&',
	      moveInProgress: '=',
	      select: '&',
	      assignIsOpen: '&',
	      debounce: '&'
	    },
	    replace: true,
	    templateUrl: function templateUrl(element, attrs) {
	      return attrs.popupTemplateUrl || 'uib/template/typeahead/typeahead-popup.html';
	    },
	    link: function link(scope, element, attrs) {
	      scope.templateUrl = attrs.templateUrl;

	      scope.isOpen = function () {
	        var isDropdownOpen = scope.matches.length > 0;
	        scope.assignIsOpen({ isOpen: isDropdownOpen });
	        return isDropdownOpen;
	      };

	      scope.isActive = function (matchIdx) {
	        return scope.active === matchIdx;
	      };

	      scope.selectActive = function (matchIdx) {
	        scope.active = matchIdx;
	      };

	      scope.selectMatch = function (activeIdx, evt) {
	        var debounce = scope.debounce();
	        if (angular.isNumber(debounce) || angular.isObject(debounce)) {
	          $$debounce(function () {
	            scope.select({ activeIdx: activeIdx, evt: evt });
	          }, angular.isNumber(debounce) ? debounce : debounce['default']);
	        } else {
	          scope.select({ activeIdx: activeIdx, evt: evt });
	        }
	      };
	    }
	  };
	}]).directive('uibTypeaheadMatch', ['$templateRequest', '$compile', '$parse', function ($templateRequest, $compile, $parse) {
	  return {
	    scope: {
	      index: '=',
	      match: '=',
	      query: '='
	    },
	    link: function link(scope, element, attrs) {
	      var tplUrl = $parse(attrs.templateUrl)(scope.$parent) || 'uib/template/typeahead/typeahead-match.html';
	      $templateRequest(tplUrl).then(function (tplContent) {
	        var tplEl = angular.element(tplContent.trim());
	        element.replaceWith(tplEl);
	        $compile(tplEl)(scope);
	      });
	    }
	  };
	}]).filter('uibTypeaheadHighlight', ['$sce', '$injector', '$log', function ($sce, $injector, $log) {
	  var isSanitizePresent;
	  isSanitizePresent = $injector.has('$sanitize');

	  function escapeRegexp(queryToEscape) {
	    // Regex: capture the whole query string and replace it with the string that will be used to match
	    // the results, for example if the capture is "a" the result will be \a
	    return queryToEscape.replace(/([.?*+^$[\]\\(){}|-])/g, '\\$1');
	  }

	  function containsHtml(matchItem) {
	    return (/<.*>/g.test(matchItem)
	    );
	  }

	  return function (matchItem, query) {
	    if (!isSanitizePresent && containsHtml(matchItem)) {
	      $log.warn('Unsafe use of typeahead please use ngSanitize'); // Warn the user about the danger
	    }
	    matchItem = query ? ('' + matchItem).replace(new RegExp(escapeRegexp(query), 'gi'), '<strong>$&</strong>') : matchItem; // Replaces the capture string with a the same string inside of a "strong" tag
	    if (!isSanitizePresent) {
	      matchItem = $sce.trustAsHtml(matchItem); // If $sanitize is not present we pack the string in a $sce object for the ng-bind-html directive
	    }
	    return matchItem;
	  };
	}]);

	angular.module("uib/template/accordion/accordion-group.html", []).run(["$templateCache", function ($templateCache) {
	  $templateCache.put("uib/template/accordion/accordion-group.html", "<div role=\"tab\" id=\"{{::headingId}}\" aria-selected=\"{{isOpen}}\" class=\"panel-heading\" ng-keypress=\"toggleOpen($event)\">\n" + "  <h4 class=\"panel-title\">\n" + "    <a role=\"button\" data-toggle=\"collapse\" href aria-expanded=\"{{isOpen}}\" aria-controls=\"{{::panelId}}\" tabindex=\"0\" class=\"accordion-toggle\" ng-click=\"toggleOpen()\" uib-accordion-transclude=\"heading\" ng-disabled=\"isDisabled\" uib-tabindex-toggle><span uib-accordion-header ng-class=\"{'text-muted': isDisabled}\">{{heading}}</span></a>\n" + "  </h4>\n" + "</div>\n" + "<div id=\"{{::panelId}}\" aria-labelledby=\"{{::headingId}}\" aria-hidden=\"{{!isOpen}}\" role=\"tabpanel\" class=\"panel-collapse collapse\" uib-collapse=\"!isOpen\">\n" + "  <div class=\"panel-body\" ng-transclude></div>\n" + "</div>\n" + "");
	}]);

	angular.module("uib/template/accordion/accordion.html", []).run(["$templateCache", function ($templateCache) {
	  $templateCache.put("uib/template/accordion/accordion.html", "<div role=\"tablist\" class=\"panel-group\" ng-transclude></div>");
	}]);

	angular.module("uib/template/alert/alert.html", []).run(["$templateCache", function ($templateCache) {
	  $templateCache.put("uib/template/alert/alert.html", "<button ng-show=\"closeable\" type=\"button\" class=\"close\" ng-click=\"close({$event: $event})\">\n" + "  <span aria-hidden=\"true\">&times;</span>\n" + "  <span class=\"sr-only\">Close</span>\n" + "</button>\n" + "<div ng-transclude></div>\n" + "");
	}]);

	angular.module("uib/template/carousel/carousel.html", []).run(["$templateCache", function ($templateCache) {
	  $templateCache.put("uib/template/carousel/carousel.html", "<div class=\"carousel-inner\" ng-transclude></div>\n" + "<a role=\"button\" href class=\"left carousel-control\" ng-click=\"prev()\" ng-class=\"{ disabled: isPrevDisabled() }\" ng-show=\"slides.length > 1\">\n" + "  <span aria-hidden=\"true\" class=\"glyphicon glyphicon-chevron-left\"></span>\n" + "  <span class=\"sr-only\">previous</span>\n" + "</a>\n" + "<a role=\"button\" href class=\"right carousel-control\" ng-click=\"next()\" ng-class=\"{ disabled: isNextDisabled() }\" ng-show=\"slides.length > 1\">\n" + "  <span aria-hidden=\"true\" class=\"glyphicon glyphicon-chevron-right\"></span>\n" + "  <span class=\"sr-only\">next</span>\n" + "</a>\n" + "<ol class=\"carousel-indicators\" ng-show=\"slides.length > 1\">\n" + "  <li ng-repeat=\"slide in slides | orderBy:indexOfSlide track by $index\" ng-class=\"{ active: isActive(slide) }\" ng-click=\"select(slide)\">\n" + "    <span class=\"sr-only\">slide {{ $index + 1 }} of {{ slides.length }}<span ng-if=\"isActive(slide)\">, currently active</span></span>\n" + "  </li>\n" + "</ol>\n" + "");
	}]);

	angular.module("uib/template/carousel/slide.html", []).run(["$templateCache", function ($templateCache) {
	  $templateCache.put("uib/template/carousel/slide.html", "<div class=\"text-center\" ng-transclude></div>\n" + "");
	}]);

	angular.module("uib/template/datepicker/datepicker.html", []).run(["$templateCache", function ($templateCache) {
	  $templateCache.put("uib/template/datepicker/datepicker.html", "<div ng-switch=\"datepickerMode\">\n" + "  <div uib-daypicker ng-switch-when=\"day\" tabindex=\"0\" class=\"uib-daypicker\"></div>\n" + "  <div uib-monthpicker ng-switch-when=\"month\" tabindex=\"0\" class=\"uib-monthpicker\"></div>\n" + "  <div uib-yearpicker ng-switch-when=\"year\" tabindex=\"0\" class=\"uib-yearpicker\"></div>\n" + "</div>\n" + "");
	}]);

	angular.module("uib/template/datepicker/day.html", []).run(["$templateCache", function ($templateCache) {
	  $templateCache.put("uib/template/datepicker/day.html", "<table role=\"grid\" aria-labelledby=\"{{::uniqueId}}-title\" aria-activedescendant=\"{{activeDateId}}\">\n" + "  <thead>\n" + "    <tr>\n" + "      <th><button type=\"button\" class=\"btn btn-default btn-sm pull-left uib-left\" ng-click=\"move(-1)\" tabindex=\"-1\"><i aria-hidden=\"true\" class=\"glyphicon glyphicon-chevron-left\"></i><span class=\"sr-only\">previous</span></button></th>\n" + "      <th colspan=\"{{::5 + showWeeks}}\"><button id=\"{{::uniqueId}}-title\" role=\"heading\" aria-live=\"assertive\" aria-atomic=\"true\" type=\"button\" class=\"btn btn-default btn-sm uib-title\" ng-click=\"toggleMode()\" ng-disabled=\"datepickerMode === maxMode\" tabindex=\"-1\"><strong>{{title}}</strong></button></th>\n" + "      <th><button type=\"button\" class=\"btn btn-default btn-sm pull-right uib-right\" ng-click=\"move(1)\" tabindex=\"-1\"><i aria-hidden=\"true\" class=\"glyphicon glyphicon-chevron-right\"></i><span class=\"sr-only\">next</span></button></th>\n" + "    </tr>\n" + "    <tr>\n" + "      <th ng-if=\"showWeeks\" class=\"text-center\"></th>\n" + "      <th ng-repeat=\"label in ::labels track by $index\" class=\"text-center\"><small aria-label=\"{{::label.full}}\">{{::label.abbr}}</small></th>\n" + "    </tr>\n" + "  </thead>\n" + "  <tbody>\n" + "    <tr class=\"uib-weeks\" ng-repeat=\"row in rows track by $index\" role=\"row\">\n" + "      <td ng-if=\"showWeeks\" class=\"text-center h6\"><em>{{ weekNumbers[$index] }}</em></td>\n" + "      <td ng-repeat=\"dt in row\" class=\"uib-day text-center\" role=\"gridcell\"\n" + "        id=\"{{::dt.uid}}\"\n" + "        ng-class=\"::dt.customClass\">\n" + "        <button type=\"button\" class=\"btn btn-default btn-sm\"\n" + "          uib-is-class=\"\n" + "            'btn-info' for selectedDt,\n" + "            'active' for activeDt\n" + "            on dt\"\n" + "          ng-click=\"select(dt.date)\"\n" + "          ng-disabled=\"::dt.disabled\"\n" + "          tabindex=\"-1\"><span ng-class=\"::{'text-muted': dt.secondary, 'text-info': dt.current}\">{{::dt.label}}</span></button>\n" + "      </td>\n" + "    </tr>\n" + "  </tbody>\n" + "</table>\n" + "");
	}]);

	angular.module("uib/template/datepicker/month.html", []).run(["$templateCache", function ($templateCache) {
	  $templateCache.put("uib/template/datepicker/month.html", "<table role=\"grid\" aria-labelledby=\"{{::uniqueId}}-title\" aria-activedescendant=\"{{activeDateId}}\">\n" + "  <thead>\n" + "    <tr>\n" + "      <th><button type=\"button\" class=\"btn btn-default btn-sm pull-left uib-left\" ng-click=\"move(-1)\" tabindex=\"-1\"><i aria-hidden=\"true\" class=\"glyphicon glyphicon-chevron-left\"></i><span class=\"sr-only\">previous</span></button></th>\n" + "      <th colspan=\"{{::yearHeaderColspan}}\"><button id=\"{{::uniqueId}}-title\" role=\"heading\" aria-live=\"assertive\" aria-atomic=\"true\" type=\"button\" class=\"btn btn-default btn-sm uib-title\" ng-click=\"toggleMode()\" ng-disabled=\"datepickerMode === maxMode\" tabindex=\"-1\"><strong>{{title}}</strong></button></th>\n" + "      <th><button type=\"button\" class=\"btn btn-default btn-sm pull-right uib-right\" ng-click=\"move(1)\" tabindex=\"-1\"><i aria-hidden=\"true\" class=\"glyphicon glyphicon-chevron-right\"></i><span class=\"sr-only\">next</span></i></button></th>\n" + "    </tr>\n" + "  </thead>\n" + "  <tbody>\n" + "    <tr class=\"uib-months\" ng-repeat=\"row in rows track by $index\" role=\"row\">\n" + "      <td ng-repeat=\"dt in row\" class=\"uib-month text-center\" role=\"gridcell\"\n" + "        id=\"{{::dt.uid}}\"\n" + "        ng-class=\"::dt.customClass\">\n" + "        <button type=\"button\" class=\"btn btn-default\"\n" + "          uib-is-class=\"\n" + "            'btn-info' for selectedDt,\n" + "            'active' for activeDt\n" + "            on dt\"\n" + "          ng-click=\"select(dt.date)\"\n" + "          ng-disabled=\"::dt.disabled\"\n" + "          tabindex=\"-1\"><span ng-class=\"::{'text-info': dt.current}\">{{::dt.label}}</span></button>\n" + "      </td>\n" + "    </tr>\n" + "  </tbody>\n" + "</table>\n" + "");
	}]);

	angular.module("uib/template/datepicker/year.html", []).run(["$templateCache", function ($templateCache) {
	  $templateCache.put("uib/template/datepicker/year.html", "<table role=\"grid\" aria-labelledby=\"{{::uniqueId}}-title\" aria-activedescendant=\"{{activeDateId}}\">\n" + "  <thead>\n" + "    <tr>\n" + "      <th><button type=\"button\" class=\"btn btn-default btn-sm pull-left uib-left\" ng-click=\"move(-1)\" tabindex=\"-1\"><i aria-hidden=\"true\" class=\"glyphicon glyphicon-chevron-left\"></i><span class=\"sr-only\">previous</span></button></th>\n" + "      <th colspan=\"{{::columns - 2}}\"><button id=\"{{::uniqueId}}-title\" role=\"heading\" aria-live=\"assertive\" aria-atomic=\"true\" type=\"button\" class=\"btn btn-default btn-sm uib-title\" ng-click=\"toggleMode()\" ng-disabled=\"datepickerMode === maxMode\" tabindex=\"-1\"><strong>{{title}}</strong></button></th>\n" + "      <th><button type=\"button\" class=\"btn btn-default btn-sm pull-right uib-right\" ng-click=\"move(1)\" tabindex=\"-1\"><i aria-hidden=\"true\" class=\"glyphicon glyphicon-chevron-right\"></i><span class=\"sr-only\">next</span></button></th>\n" + "    </tr>\n" + "  </thead>\n" + "  <tbody>\n" + "    <tr class=\"uib-years\" ng-repeat=\"row in rows track by $index\" role=\"row\">\n" + "      <td ng-repeat=\"dt in row\" class=\"uib-year text-center\" role=\"gridcell\"\n" + "        id=\"{{::dt.uid}}\"\n" + "        ng-class=\"::dt.customClass\">\n" + "        <button type=\"button\" class=\"btn btn-default\"\n" + "          uib-is-class=\"\n" + "            'btn-info' for selectedDt,\n" + "            'active' for activeDt\n" + "            on dt\"\n" + "          ng-click=\"select(dt.date)\"\n" + "          ng-disabled=\"::dt.disabled\"\n" + "          tabindex=\"-1\"><span ng-class=\"::{'text-info': dt.current}\">{{::dt.label}}</span></button>\n" + "      </td>\n" + "    </tr>\n" + "  </tbody>\n" + "</table>\n" + "");
	}]);

	angular.module("uib/template/datepickerPopup/popup.html", []).run(["$templateCache", function ($templateCache) {
	  $templateCache.put("uib/template/datepickerPopup/popup.html", "<ul role=\"presentation\" class=\"uib-datepicker-popup dropdown-menu uib-position-measure\" dropdown-nested ng-if=\"isOpen\" ng-keydown=\"keydown($event)\" ng-click=\"$event.stopPropagation()\">\n" + "  <li ng-transclude></li>\n" + "  <li ng-if=\"showButtonBar\" class=\"uib-button-bar\">\n" + "    <span class=\"btn-group pull-left\">\n" + "      <button type=\"button\" class=\"btn btn-sm btn-info uib-datepicker-current\" ng-click=\"select('today', $event)\" ng-disabled=\"isDisabled('today')\">{{ getText('current') }}</button>\n" + "      <button type=\"button\" class=\"btn btn-sm btn-danger uib-clear\" ng-click=\"select(null, $event)\">{{ getText('clear') }}</button>\n" + "    </span>\n" + "    <button type=\"button\" class=\"btn btn-sm btn-success pull-right uib-close\" ng-click=\"close($event)\">{{ getText('close') }}</button>\n" + "  </li>\n" + "</ul>\n" + "");
	}]);

	angular.module("uib/template/modal/window.html", []).run(["$templateCache", function ($templateCache) {
	  $templateCache.put("uib/template/modal/window.html", "<div class=\"modal-dialog {{size ? 'modal-' + size : ''}}\"><div class=\"modal-content\" uib-modal-transclude></div></div>\n" + "");
	}]);

	angular.module("uib/template/pager/pager.html", []).run(["$templateCache", function ($templateCache) {
	  $templateCache.put("uib/template/pager/pager.html", "<li ng-class=\"{disabled: noPrevious()||ngDisabled, previous: align}\"><a href ng-click=\"selectPage(page - 1, $event)\" ng-disabled=\"noPrevious()||ngDisabled\" uib-tabindex-toggle>{{::getText('previous')}}</a></li>\n" + "<li ng-class=\"{disabled: noNext()||ngDisabled, next: align}\"><a href ng-click=\"selectPage(page + 1, $event)\" ng-disabled=\"noNext()||ngDisabled\" uib-tabindex-toggle>{{::getText('next')}}</a></li>\n" + "");
	}]);

	angular.module("uib/template/pagination/pagination.html", []).run(["$templateCache", function ($templateCache) {
	  $templateCache.put("uib/template/pagination/pagination.html", "<li ng-if=\"::boundaryLinks\" ng-class=\"{disabled: noPrevious()||ngDisabled}\" class=\"pagination-first\"><a href ng-click=\"selectPage(1, $event)\" ng-disabled=\"noPrevious()||ngDisabled\" uib-tabindex-toggle>{{::getText('first')}}</a></li>\n" + "<li ng-if=\"::directionLinks\" ng-class=\"{disabled: noPrevious()||ngDisabled}\" class=\"pagination-prev\"><a href ng-click=\"selectPage(page - 1, $event)\" ng-disabled=\"noPrevious()||ngDisabled\" uib-tabindex-toggle>{{::getText('previous')}}</a></li>\n" + "<li ng-repeat=\"page in pages track by $index\" ng-class=\"{active: page.active,disabled: ngDisabled&&!page.active}\" class=\"pagination-page\"><a href ng-click=\"selectPage(page.number, $event)\" ng-disabled=\"ngDisabled&&!page.active\" uib-tabindex-toggle>{{page.text}}</a></li>\n" + "<li ng-if=\"::directionLinks\" ng-class=\"{disabled: noNext()||ngDisabled}\" class=\"pagination-next\"><a href ng-click=\"selectPage(page + 1, $event)\" ng-disabled=\"noNext()||ngDisabled\" uib-tabindex-toggle>{{::getText('next')}}</a></li>\n" + "<li ng-if=\"::boundaryLinks\" ng-class=\"{disabled: noNext()||ngDisabled}\" class=\"pagination-last\"><a href ng-click=\"selectPage(totalPages, $event)\" ng-disabled=\"noNext()||ngDisabled\" uib-tabindex-toggle>{{::getText('last')}}</a></li>\n" + "");
	}]);

	angular.module("uib/template/tooltip/tooltip-html-popup.html", []).run(["$templateCache", function ($templateCache) {
	  $templateCache.put("uib/template/tooltip/tooltip-html-popup.html", "<div class=\"tooltip-arrow\"></div>\n" + "<div class=\"tooltip-inner\" ng-bind-html=\"contentExp()\"></div>\n" + "");
	}]);

	angular.module("uib/template/tooltip/tooltip-popup.html", []).run(["$templateCache", function ($templateCache) {
	  $templateCache.put("uib/template/tooltip/tooltip-popup.html", "<div class=\"tooltip-arrow\"></div>\n" + "<div class=\"tooltip-inner\" ng-bind=\"content\"></div>\n" + "");
	}]);

	angular.module("uib/template/tooltip/tooltip-template-popup.html", []).run(["$templateCache", function ($templateCache) {
	  $templateCache.put("uib/template/tooltip/tooltip-template-popup.html", "<div class=\"tooltip-arrow\"></div>\n" + "<div class=\"tooltip-inner\"\n" + "  uib-tooltip-template-transclude=\"contentExp()\"\n" + "  tooltip-template-transclude-scope=\"originScope()\"></div>\n" + "");
	}]);

	angular.module("uib/template/popover/popover-html.html", []).run(["$templateCache", function ($templateCache) {
	  $templateCache.put("uib/template/popover/popover-html.html", "<div class=\"arrow\"></div>\n" + "\n" + "<div class=\"popover-inner\">\n" + "    <h3 class=\"popover-title\" ng-bind=\"uibTitle\" ng-if=\"uibTitle\"></h3>\n" + "    <div class=\"popover-content\" ng-bind-html=\"contentExp()\"></div>\n" + "</div>\n" + "");
	}]);

	angular.module("uib/template/popover/popover-template.html", []).run(["$templateCache", function ($templateCache) {
	  $templateCache.put("uib/template/popover/popover-template.html", "<div class=\"arrow\"></div>\n" + "\n" + "<div class=\"popover-inner\">\n" + "    <h3 class=\"popover-title\" ng-bind=\"uibTitle\" ng-if=\"uibTitle\"></h3>\n" + "    <div class=\"popover-content\"\n" + "      uib-tooltip-template-transclude=\"contentExp()\"\n" + "      tooltip-template-transclude-scope=\"originScope()\"></div>\n" + "</div>\n" + "");
	}]);

	angular.module("uib/template/popover/popover.html", []).run(["$templateCache", function ($templateCache) {
	  $templateCache.put("uib/template/popover/popover.html", "<div class=\"arrow\"></div>\n" + "\n" + "<div class=\"popover-inner\">\n" + "    <h3 class=\"popover-title\" ng-bind=\"uibTitle\" ng-if=\"uibTitle\"></h3>\n" + "    <div class=\"popover-content\" ng-bind=\"content\"></div>\n" + "</div>\n" + "");
	}]);

	angular.module("uib/template/progressbar/bar.html", []).run(["$templateCache", function ($templateCache) {
	  $templateCache.put("uib/template/progressbar/bar.html", "<div class=\"progress-bar\" ng-class=\"type && 'progress-bar-' + type\" role=\"progressbar\" aria-valuenow=\"{{value}}\" aria-valuemin=\"0\" aria-valuemax=\"{{max}}\" ng-style=\"{width: (percent < 100 ? percent : 100) + '%'}\" aria-valuetext=\"{{percent | number:0}}%\" aria-labelledby=\"{{::title}}\" ng-transclude></div>\n" + "");
	}]);

	angular.module("uib/template/progressbar/progress.html", []).run(["$templateCache", function ($templateCache) {
	  $templateCache.put("uib/template/progressbar/progress.html", "<div class=\"progress\" ng-transclude aria-labelledby=\"{{::title}}\"></div>");
	}]);

	angular.module("uib/template/progressbar/progressbar.html", []).run(["$templateCache", function ($templateCache) {
	  $templateCache.put("uib/template/progressbar/progressbar.html", "<div class=\"progress\">\n" + "  <div class=\"progress-bar\" ng-class=\"type && 'progress-bar-' + type\" role=\"progressbar\" aria-valuenow=\"{{value}}\" aria-valuemin=\"0\" aria-valuemax=\"{{max}}\" ng-style=\"{width: (percent < 100 ? percent : 100) + '%'}\" aria-valuetext=\"{{percent | number:0}}%\" aria-labelledby=\"{{::title}}\" ng-transclude></div>\n" + "</div>\n" + "");
	}]);

	angular.module("uib/template/rating/rating.html", []).run(["$templateCache", function ($templateCache) {
	  $templateCache.put("uib/template/rating/rating.html", "<span ng-mouseleave=\"reset()\" ng-keydown=\"onKeydown($event)\" tabindex=\"0\" role=\"slider\" aria-valuemin=\"0\" aria-valuemax=\"{{range.length}}\" aria-valuenow=\"{{value}}\" aria-valuetext=\"{{title}}\">\n" + "    <span ng-repeat-start=\"r in range track by $index\" class=\"sr-only\">({{ $index < value ? '*' : ' ' }})</span>\n" + "    <i ng-repeat-end ng-mouseenter=\"enter($index + 1)\" ng-click=\"rate($index + 1)\" class=\"glyphicon\" ng-class=\"$index < value && (r.stateOn || 'glyphicon-star') || (r.stateOff || 'glyphicon-star-empty')\" ng-attr-title=\"{{r.title}}\"></i>\n" + "</span>\n" + "");
	}]);

	angular.module("uib/template/tabs/tab.html", []).run(["$templateCache", function ($templateCache) {
	  $templateCache.put("uib/template/tabs/tab.html", "<li ng-class=\"[{active: active, disabled: disabled}, classes]\" class=\"uib-tab nav-item\">\n" + "  <a href ng-click=\"select($event)\" class=\"nav-link\" uib-tab-heading-transclude>{{heading}}</a>\n" + "</li>\n" + "");
	}]);

	angular.module("uib/template/tabs/tabset.html", []).run(["$templateCache", function ($templateCache) {
	  $templateCache.put("uib/template/tabs/tabset.html", "<div>\n" + "  <ul class=\"nav nav-{{tabset.type || 'tabs'}}\" ng-class=\"{'nav-stacked': vertical, 'nav-justified': justified}\" ng-transclude></ul>\n" + "  <div class=\"tab-content\">\n" + "    <div class=\"tab-pane\"\n" + "         ng-repeat=\"tab in tabset.tabs\"\n" + "         ng-class=\"{active: tabset.active === tab.index}\"\n" + "         uib-tab-content-transclude=\"tab\">\n" + "    </div>\n" + "  </div>\n" + "</div>\n" + "");
	}]);

	angular.module("uib/template/timepicker/timepicker.html", []).run(["$templateCache", function ($templateCache) {
	  $templateCache.put("uib/template/timepicker/timepicker.html", "<table class=\"uib-timepicker\">\n" + "  <tbody>\n" + "    <tr class=\"text-center\" ng-show=\"::showSpinners\">\n" + "      <td class=\"uib-increment hours\"><a ng-click=\"incrementHours()\" ng-class=\"{disabled: noIncrementHours()}\" class=\"btn btn-link\" ng-disabled=\"noIncrementHours()\" tabindex=\"-1\"><span class=\"glyphicon glyphicon-chevron-up\"></span></a></td>\n" + "      <td>&nbsp;</td>\n" + "      <td class=\"uib-increment minutes\"><a ng-click=\"incrementMinutes()\" ng-class=\"{disabled: noIncrementMinutes()}\" class=\"btn btn-link\" ng-disabled=\"noIncrementMinutes()\" tabindex=\"-1\"><span class=\"glyphicon glyphicon-chevron-up\"></span></a></td>\n" + "      <td ng-show=\"showSeconds\">&nbsp;</td>\n" + "      <td ng-show=\"showSeconds\" class=\"uib-increment seconds\"><a ng-click=\"incrementSeconds()\" ng-class=\"{disabled: noIncrementSeconds()}\" class=\"btn btn-link\" ng-disabled=\"noIncrementSeconds()\" tabindex=\"-1\"><span class=\"glyphicon glyphicon-chevron-up\"></span></a></td>\n" + "      <td ng-show=\"showMeridian\"></td>\n" + "    </tr>\n" + "    <tr>\n" + "      <td class=\"form-group uib-time hours\" ng-class=\"{'has-error': invalidHours}\">\n" + "        <input type=\"text\" placeholder=\"HH\" ng-model=\"hours\" ng-change=\"updateHours()\" class=\"form-control text-center\" ng-readonly=\"::readonlyInput\" maxlength=\"2\" tabindex=\"{{::tabindex}}\" ng-disabled=\"noIncrementHours()\" ng-blur=\"blur()\">\n" + "      </td>\n" + "      <td class=\"uib-separator\">:</td>\n" + "      <td class=\"form-group uib-time minutes\" ng-class=\"{'has-error': invalidMinutes}\">\n" + "        <input type=\"text\" placeholder=\"MM\" ng-model=\"minutes\" ng-change=\"updateMinutes()\" class=\"form-control text-center\" ng-readonly=\"::readonlyInput\" maxlength=\"2\" tabindex=\"{{::tabindex}}\" ng-disabled=\"noIncrementMinutes()\" ng-blur=\"blur()\">\n" + "      </td>\n" + "      <td ng-show=\"showSeconds\" class=\"uib-separator\">:</td>\n" + "      <td class=\"form-group uib-time seconds\" ng-class=\"{'has-error': invalidSeconds}\" ng-show=\"showSeconds\">\n" + "        <input type=\"text\" placeholder=\"SS\" ng-model=\"seconds\" ng-change=\"updateSeconds()\" class=\"form-control text-center\" ng-readonly=\"readonlyInput\" maxlength=\"2\" tabindex=\"{{::tabindex}}\" ng-disabled=\"noIncrementSeconds()\" ng-blur=\"blur()\">\n" + "      </td>\n" + "      <td ng-show=\"showMeridian\" class=\"uib-time am-pm\"><button type=\"button\" ng-class=\"{disabled: noToggleMeridian()}\" class=\"btn btn-default text-center\" ng-click=\"toggleMeridian()\" ng-disabled=\"noToggleMeridian()\" tabindex=\"{{::tabindex}}\">{{meridian}}</button></td>\n" + "    </tr>\n" + "    <tr class=\"text-center\" ng-show=\"::showSpinners\">\n" + "      <td class=\"uib-decrement hours\"><a ng-click=\"decrementHours()\" ng-class=\"{disabled: noDecrementHours()}\" class=\"btn btn-link\" ng-disabled=\"noDecrementHours()\" tabindex=\"-1\"><span class=\"glyphicon glyphicon-chevron-down\"></span></a></td>\n" + "      <td>&nbsp;</td>\n" + "      <td class=\"uib-decrement minutes\"><a ng-click=\"decrementMinutes()\" ng-class=\"{disabled: noDecrementMinutes()}\" class=\"btn btn-link\" ng-disabled=\"noDecrementMinutes()\" tabindex=\"-1\"><span class=\"glyphicon glyphicon-chevron-down\"></span></a></td>\n" + "      <td ng-show=\"showSeconds\">&nbsp;</td>\n" + "      <td ng-show=\"showSeconds\" class=\"uib-decrement seconds\"><a ng-click=\"decrementSeconds()\" ng-class=\"{disabled: noDecrementSeconds()}\" class=\"btn btn-link\" ng-disabled=\"noDecrementSeconds()\" tabindex=\"-1\"><span class=\"glyphicon glyphicon-chevron-down\"></span></a></td>\n" + "      <td ng-show=\"showMeridian\"></td>\n" + "    </tr>\n" + "  </tbody>\n" + "</table>\n" + "");
	}]);

	angular.module("uib/template/typeahead/typeahead-match.html", []).run(["$templateCache", function ($templateCache) {
	  $templateCache.put("uib/template/typeahead/typeahead-match.html", "<a href\n" + "   tabindex=\"-1\"\n" + "   ng-bind-html=\"match.label | uibTypeaheadHighlight:query\"\n" + "   ng-attr-title=\"{{match.label}}\"></a>\n" + "");
	}]);

	angular.module("uib/template/typeahead/typeahead-popup.html", []).run(["$templateCache", function ($templateCache) {
	  $templateCache.put("uib/template/typeahead/typeahead-popup.html", "<ul class=\"dropdown-menu\" ng-show=\"isOpen() && !moveInProgress\" ng-style=\"{top: position().top+'px', left: position().left+'px'}\" role=\"listbox\" aria-hidden=\"{{!isOpen()}}\">\n" + "    <li class=\"uib-typeahead-match\" ng-repeat=\"match in matches track by $index\" ng-class=\"{active: isActive($index) }\" ng-mouseenter=\"selectActive($index)\" ng-click=\"selectMatch($index, $event)\" role=\"option\" id=\"{{::match.id}}\">\n" + "        <div uib-typeahead-match index=\"$index\" match=\"match\" query=\"query\" template-url=\"templateUrl\"></div>\n" + "    </li>\n" + "</ul>\n" + "");
	}]);
	angular.module('ui.bootstrap.carousel').run(function () {
	  !angular.$$csp().noInlineStyle && !angular.$$uibCarouselCss && angular.element(document).find('head').prepend('<style type="text/css">.ng-animate.item:not(.left):not(.right){-webkit-transition:0s ease-in-out left;transition:0s ease-in-out left}</style>');angular.$$uibCarouselCss = true;
	});
	angular.module('ui.bootstrap.datepicker').run(function () {
	  !angular.$$csp().noInlineStyle && !angular.$$uibDatepickerCss && angular.element(document).find('head').prepend('<style type="text/css">.uib-datepicker .uib-title{width:100%;}.uib-day button,.uib-month button,.uib-year button{min-width:100%;}.uib-left,.uib-right{width:100%}</style>');angular.$$uibDatepickerCss = true;
	});
	angular.module('ui.bootstrap.position').run(function () {
	  !angular.$$csp().noInlineStyle && !angular.$$uibPositionCss && angular.element(document).find('head').prepend('<style type="text/css">.uib-position-measure{display:block !important;visibility:hidden !important;position:absolute !important;top:-9999px !important;left:-9999px !important;}.uib-position-scrollbar-measure{position:absolute !important;top:-9999px !important;width:50px !important;height:50px !important;overflow:scroll !important;}.uib-position-body-scrollbar-measure{overflow:scroll !important;}</style>');angular.$$uibPositionCss = true;
	});
	angular.module('ui.bootstrap.datepickerPopup').run(function () {
	  !angular.$$csp().noInlineStyle && !angular.$$uibDatepickerpopupCss && angular.element(document).find('head').prepend('<style type="text/css">.uib-datepicker-popup.dropdown-menu{display:block;float:none;margin:0;}.uib-button-bar{padding:10px 9px 2px;}</style>');angular.$$uibDatepickerpopupCss = true;
	});
	angular.module('ui.bootstrap.tooltip').run(function () {
	  !angular.$$csp().noInlineStyle && !angular.$$uibTooltipCss && angular.element(document).find('head').prepend('<style type="text/css">[uib-tooltip-popup].tooltip.top-left > .tooltip-arrow,[uib-tooltip-popup].tooltip.top-right > .tooltip-arrow,[uib-tooltip-popup].tooltip.bottom-left > .tooltip-arrow,[uib-tooltip-popup].tooltip.bottom-right > .tooltip-arrow,[uib-tooltip-popup].tooltip.left-top > .tooltip-arrow,[uib-tooltip-popup].tooltip.left-bottom > .tooltip-arrow,[uib-tooltip-popup].tooltip.right-top > .tooltip-arrow,[uib-tooltip-popup].tooltip.right-bottom > .tooltip-arrow,[uib-tooltip-html-popup].tooltip.top-left > .tooltip-arrow,[uib-tooltip-html-popup].tooltip.top-right > .tooltip-arrow,[uib-tooltip-html-popup].tooltip.bottom-left > .tooltip-arrow,[uib-tooltip-html-popup].tooltip.bottom-right > .tooltip-arrow,[uib-tooltip-html-popup].tooltip.left-top > .tooltip-arrow,[uib-tooltip-html-popup].tooltip.left-bottom > .tooltip-arrow,[uib-tooltip-html-popup].tooltip.right-top > .tooltip-arrow,[uib-tooltip-html-popup].tooltip.right-bottom > .tooltip-arrow,[uib-tooltip-template-popup].tooltip.top-left > .tooltip-arrow,[uib-tooltip-template-popup].tooltip.top-right > .tooltip-arrow,[uib-tooltip-template-popup].tooltip.bottom-left > .tooltip-arrow,[uib-tooltip-template-popup].tooltip.bottom-right > .tooltip-arrow,[uib-tooltip-template-popup].tooltip.left-top > .tooltip-arrow,[uib-tooltip-template-popup].tooltip.left-bottom > .tooltip-arrow,[uib-tooltip-template-popup].tooltip.right-top > .tooltip-arrow,[uib-tooltip-template-popup].tooltip.right-bottom > .tooltip-arrow,[uib-popover-popup].popover.top-left > .arrow,[uib-popover-popup].popover.top-right > .arrow,[uib-popover-popup].popover.bottom-left > .arrow,[uib-popover-popup].popover.bottom-right > .arrow,[uib-popover-popup].popover.left-top > .arrow,[uib-popover-popup].popover.left-bottom > .arrow,[uib-popover-popup].popover.right-top > .arrow,[uib-popover-popup].popover.right-bottom > .arrow,[uib-popover-html-popup].popover.top-left > .arrow,[uib-popover-html-popup].popover.top-right > .arrow,[uib-popover-html-popup].popover.bottom-left > .arrow,[uib-popover-html-popup].popover.bottom-right > .arrow,[uib-popover-html-popup].popover.left-top > .arrow,[uib-popover-html-popup].popover.left-bottom > .arrow,[uib-popover-html-popup].popover.right-top > .arrow,[uib-popover-html-popup].popover.right-bottom > .arrow,[uib-popover-template-popup].popover.top-left > .arrow,[uib-popover-template-popup].popover.top-right > .arrow,[uib-popover-template-popup].popover.bottom-left > .arrow,[uib-popover-template-popup].popover.bottom-right > .arrow,[uib-popover-template-popup].popover.left-top > .arrow,[uib-popover-template-popup].popover.left-bottom > .arrow,[uib-popover-template-popup].popover.right-top > .arrow,[uib-popover-template-popup].popover.right-bottom > .arrow{top:auto;bottom:auto;left:auto;right:auto;margin:0;}[uib-popover-popup].popover,[uib-popover-html-popup].popover,[uib-popover-template-popup].popover{display:block !important;}</style>');angular.$$uibTooltipCss = true;
	});
	angular.module('ui.bootstrap.timepicker').run(function () {
	  !angular.$$csp().noInlineStyle && !angular.$$uibTimepickerCss && angular.element(document).find('head').prepend('<style type="text/css">.uib-time input{width:50px;}</style>');angular.$$uibTimepickerCss = true;
	});
	angular.module('ui.bootstrap.typeahead').run(function () {
	  !angular.$$csp().noInlineStyle && !angular.$$uibTypeaheadCss && angular.element(document).find('head').prepend('<style type="text/css">[uib-typeahead-popup].dropdown-menu{display:block;}</style>');angular.$$uibTypeaheadCss = true;
	});

/***/ },
/* 5 */
/***/ function(module, exports) {

	"use strict";

	/*
	 AngularJS v1.6.1
	 (c) 2010-2016 Google, Inc. http://angularjs.org
	 License: MIT
	*/
	(function (U, C) {
	  'use strict';
	  function Ea(a, b, c) {
	    if (!a) throw Oa("areq", b || "?", c || "required");return a;
	  }function Fa(a, b) {
	    if (!a && !b) return "";if (!a) return b;if (!b) return a;X(a) && (a = a.join(" "));X(b) && (b = b.join(" "));return a + " " + b;
	  }function Pa(a) {
	    var b = {};a && (a.to || a.from) && (b.to = a.to, b.from = a.from);return b;
	  }function Y(a, b, c) {
	    var d = "";a = X(a) ? a : a && G(a) && a.length ? a.split(/\s+/) : [];r(a, function (a, e) {
	      a && 0 < a.length && (d += 0 < e ? " " : "", d += c ? b + a : a + b);
	    });return d;
	  }function Qa(a) {
	    if (a instanceof w) switch (a.length) {case 0:
	        return a;
	      case 1:
	        if (1 === a[0].nodeType) return a;break;default:
	        return w(ua(a));}if (1 === a.nodeType) return w(a);
	  }function ua(a) {
	    if (!a[0]) return a;for (var b = 0; b < a.length; b++) {
	      var c = a[b];if (1 === c.nodeType) return c;
	    }
	  }function Ra(a, b, c) {
	    r(b, function (b) {
	      a.addClass(b, c);
	    });
	  }function Sa(a, b, c) {
	    r(b, function (b) {
	      a.removeClass(b, c);
	    });
	  }function Z(a) {
	    return function (b, c) {
	      c.addClass && (Ra(a, b, c.addClass), c.addClass = null);c.removeClass && (Sa(a, b, c.removeClass), c.removeClass = null);
	    };
	  }function oa(a) {
	    a = a || {};if (!a.$$prepared) {
	      var b = a.domOperation || N;a.domOperation = function () {
	        a.$$domOperationFired = !0;b();b = N;
	      };a.$$prepared = !0;
	    }return a;
	  }function ha(a, b) {
	    Ga(a, b);Ha(a, b);
	  }function Ga(a, b) {
	    b.from && (a.css(b.from), b.from = null);
	  }function Ha(a, b) {
	    b.to && (a.css(b.to), b.to = null);
	  }function V(a, b, c) {
	    var d = b.options || {};c = c.options || {};var f = (d.addClass || "") + " " + (c.addClass || ""),
	        e = (d.removeClass || "") + " " + (c.removeClass || "");a = Ta(a.attr("class"), f, e);c.preparationClasses && (d.preparationClasses = ea(c.preparationClasses, d.preparationClasses), delete c.preparationClasses);
	    f = d.domOperation !== N ? d.domOperation : null;va(d, c);f && (d.domOperation = f);d.addClass = a.addClass ? a.addClass : null;d.removeClass = a.removeClass ? a.removeClass : null;b.addClass = d.addClass;b.removeClass = d.removeClass;return d;
	  }function Ta(a, b, c) {
	    function d(a) {
	      G(a) && (a = a.split(" "));var b = {};r(a, function (a) {
	        a.length && (b[a] = !0);
	      });return b;
	    }var f = {};a = d(a);b = d(b);r(b, function (a, b) {
	      f[b] = 1;
	    });c = d(c);r(c, function (a, b) {
	      f[b] = 1 === f[b] ? null : -1;
	    });var e = { addClass: "", removeClass: "" };r(f, function (b, c) {
	      var d, f;1 === b ? (d = "addClass", f = !a[c] || a[c + "-remove"]) : -1 === b && (d = "removeClass", f = a[c] || a[c + "-add"]);f && (e[d].length && (e[d] += " "), e[d] += c);
	    });return e;
	  }function z(a) {
	    return a instanceof w ? a[0] : a;
	  }function Ua(a, b, c) {
	    var d = "";b && (d = Y(b, "ng-", !0));c.addClass && (d = ea(d, Y(c.addClass, "-add")));c.removeClass && (d = ea(d, Y(c.removeClass, "-remove")));d.length && (c.preparationClasses = d, a.addClass(d));
	  }function pa(a, b) {
	    var c = b ? "-" + b + "s" : "";ka(a, [la, c]);return [la, c];
	  }function wa(a, b) {
	    var c = b ? "paused" : "",
	        d = $ + "PlayState";ka(a, [d, c]);return [d, c];
	  }function ka(a, b) {
	    a.style[b[0]] = b[1];
	  }function ea(a, b) {
	    return a ? b ? a + " " + b : a : b;
	  }function Ia(a, b, c) {
	    var d = Object.create(null),
	        f = a.getComputedStyle(b) || {};r(c, function (a, b) {
	      var c = f[a];if (c) {
	        var y = c.charAt(0);if ("-" === y || "+" === y || 0 <= y) c = Va(c);0 === c && (c = null);d[b] = c;
	      }
	    });return d;
	  }function Va(a) {
	    var b = 0;a = a.split(/\s*,\s*/);r(a, function (a) {
	      "s" === a.charAt(a.length - 1) && (a = a.substring(0, a.length - 1));a = parseFloat(a) || 0;b = b ? Math.max(a, b) : a;
	    });return b;
	  }function xa(a) {
	    return 0 === a || null != a;
	  }function Ja(a, b) {
	    var c = R,
	        d = a + "s";b ? c += "Duration" : d += " linear all";return [c, d];
	  }function Ka() {
	    var a = Object.create(null);return { flush: function flush() {
	        a = Object.create(null);
	      }, count: function count(b) {
	        return (b = a[b]) ? b.total : 0;
	      }, get: function get(b) {
	        return (b = a[b]) && b.value;
	      }, put: function put(b, c) {
	        a[b] ? a[b].total++ : a[b] = { total: 1, value: c };
	      } };
	  }function La(a, b, c) {
	    r(c, function (c) {
	      a[c] = ya(a[c]) ? a[c] : b.style.getPropertyValue(c);
	    });
	  }var R, za, $, Aa;void 0 === U.ontransitionend && void 0 !== U.onwebkittransitionend ? (R = "WebkitTransition", za = "webkitTransitionEnd transitionend") : (R = "transition", za = "transitionend");void 0 === U.onanimationend && void 0 !== U.onwebkitanimationend ? ($ = "WebkitAnimation", Aa = "webkitAnimationEnd animationend") : ($ = "animation", Aa = "animationend");var qa = $ + "Delay",
	      Ba = $ + "Duration",
	      la = R + "Delay",
	      Ma = R + "Duration",
	      Oa = C.$$minErr("ng"),
	      Wa = { transitionDuration: Ma, transitionDelay: la, transitionProperty: R + "Property", animationDuration: Ba, animationDelay: qa, animationIterationCount: $ + "IterationCount" },
	      Xa = { transitionDuration: Ma, transitionDelay: la, animationDuration: Ba, animationDelay: qa },
	      Ca,
	      va,
	      r,
	      X,
	      ya,
	      aa,
	      Da,
	      ra,
	      G,
	      K,
	      w,
	      N;C.module("ngAnimate", [], function () {
	    N = C.noop;Ca = C.copy;va = C.extend;w = C.element;r = C.forEach;X = C.isArray;G = C.isString;ra = C.isObject;K = C.isUndefined;ya = C.isDefined;Da = C.isFunction;aa = C.isElement;
	  }).directive("ngAnimateSwap", ["$animate", "$rootScope", function (a, b) {
	    return { restrict: "A", transclude: "element", terminal: !0, priority: 600, link: function link(b, d, f, e, m) {
	        var A, y;b.$watchCollection(f.ngAnimateSwap || f["for"], function (f) {
	          A && a.leave(A);y && (y.$destroy(), y = null);if (f || 0 === f) y = b.$new(), m(y, function (b) {
	            A = b;a.enter(b, null, d);
	          });
	        });
	      } };
	  }]).directive("ngAnimateChildren", ["$interpolate", function (a) {
	    return { link: function link(b, c, d) {
	        function f(a) {
	          c.data("$$ngAnimateChildren", "on" === a || "true" === a);
	        }var e = d.ngAnimateChildren;G(e) && 0 === e.length ? c.data("$$ngAnimateChildren", !0) : (f(a(e)(b)), d.$observe("ngAnimateChildren", f));
	      } };
	  }]).factory("$$rAFScheduler", ["$$rAF", function (a) {
	    function b(a) {
	      d = d.concat(a);c();
	    }function c() {
	      if (d.length) {
	        for (var b = d.shift(), m = 0; m < b.length; m++) {
	          b[m]();
	        }f || a(function () {
	          f || c();
	        });
	      }
	    }var d, f;d = b.queue = [];b.waitUntilQuiet = function (b) {
	      f && f();f = a(function () {
	        f = null;b();c();
	      });
	    };return b;
	  }]).provider("$$animateQueue", ["$animateProvider", function (a) {
	    function b(a) {
	      if (!a) return null;a = a.split(" ");var b = Object.create(null);r(a, function (a) {
	        b[a] = !0;
	      });return b;
	    }function c(a, c) {
	      if (a && c) {
	        var d = b(c);return a.split(" ").some(function (a) {
	          return d[a];
	        });
	      }
	    }function d(a, b, c, d) {
	      return e[a].some(function (a) {
	        return a(b, c, d);
	      });
	    }function f(a, b) {
	      var c = 0 < (a.addClass || "").length,
	          d = 0 < (a.removeClass || "").length;return b ? c && d : c || d;
	    }var e = this.rules = { skip: [], cancel: [], join: [] };e.join.push(function (a, b, c) {
	      return !b.structural && f(b);
	    });e.skip.push(function (a, b, c) {
	      return !b.structural && !f(b);
	    });e.skip.push(function (a, b, c) {
	      return "leave" === c.event && b.structural;
	    });e.skip.push(function (a, b, c) {
	      return c.structural && 2 === c.state && !b.structural;
	    });e.cancel.push(function (a, b, c) {
	      return c.structural && b.structural;
	    });e.cancel.push(function (a, b, c) {
	      return 2 === c.state && b.structural;
	    });e.cancel.push(function (a, b, d) {
	      if (d.structural) return !1;a = b.addClass;b = b.removeClass;var f = d.addClass;d = d.removeClass;return K(a) && K(b) || K(f) && K(d) ? !1 : c(a, d) || c(b, f);
	    });this.$get = ["$$rAF", "$rootScope", "$rootElement", "$document", "$$HashMap", "$$animation", "$$AnimateRunner", "$templateRequest", "$$jqLite", "$$forceReflow", "$$isDocumentHidden", function (b, c, y, e, ba, Ya, O, v, H, S, P) {
	      function I() {
	        var a = !1;return function (b) {
	          a ? b() : c.$$postDigest(function () {
	            a = !0;b();
	          });
	        };
	      }function B(a, b, c) {
	        var g = z(b),
	            d = z(a),
	            E = [];(a = t[c]) && r(a, function (a) {
	          J.call(a.node, g) ? E.push(a.callback) : "leave" === c && J.call(a.node, d) && E.push(a.callback);
	        });return E;
	      }function n(a, b, c) {
	        var g = ua(b);return a.filter(function (a) {
	          return !(a.node === g && (!c || a.callback === c));
	        });
	      }function p(a, h, u) {
	        function p(c, g, d, h) {
	          y(function () {
	            var c = B(S, a, g);c.length ? b(function () {
	              r(c, function (b) {
	                b(a, d, h);
	              });"close" !== d || a[0].parentNode || sa.off(a);
	            }) : "close" !== d || a[0].parentNode || sa.off(a);
	          });c.progress(g, d, h);
	        }function n(b) {
	          var c = a,
	              g = k;g.preparationClasses && (c.removeClass(g.preparationClasses), g.preparationClasses = null);g.activeClasses && (c.removeClass(g.activeClasses), g.activeClasses = null);Na(a, k);ha(a, k);k.domOperation();e.complete(!b);
	        }var k = Ca(u),
	            t,
	            S;if (a = Qa(a)) t = z(a), S = a.parent();var k = oa(k),
	            e = new O(),
	            y = I();X(k.addClass) && (k.addClass = k.addClass.join(" "));k.addClass && !G(k.addClass) && (k.addClass = null);X(k.removeClass) && (k.removeClass = k.removeClass.join(" "));k.removeClass && !G(k.removeClass) && (k.removeClass = null);k.from && !ra(k.from) && (k.from = null);k.to && !ra(k.to) && (k.to = null);if (!t) return n(), e;u = [t.getAttribute("class"), k.addClass, k.removeClass].join(" ");if (!F(u)) return n(), e;var s = 0 <= ["enter", "move", "leave"].indexOf(h),
	            x = P(),
	            v = !ma || x || g.get(t);u = !v && E.get(t) || {};var J = !!u.state;v || J && 1 === u.state || (v = !L(a, S, h));if (v) return x && p(e, h, "start"), n(), x && p(e, h, "close"), e;s && ta(a);x = { structural: s, element: a, event: h, addClass: k.addClass, removeClass: k.removeClass, close: n, options: k, runner: e };if (J) {
	          if (d("skip", a, x, u)) {
	            if (2 === u.state) return n(), e;V(a, u, x);return u.runner;
	          }if (d("cancel", a, x, u)) {
	            if (2 === u.state) u.runner.end();else if (u.structural) u.close();else return V(a, u, x), u.runner;
	          } else if (d("join", a, x, u)) if (2 === u.state) V(a, x, {});else return Ua(a, s ? h : null, k), h = x.event = u.event, k = V(a, u, x), u.runner;
	        } else V(a, x, {});(J = x.structural) || (J = "animate" === x.event && 0 < Object.keys(x.options.to || {}).length || f(x));if (!J) return n(), l(a), e;var H = (u.counter || 0) + 1;x.counter = H;Q(a, 1, x);c.$$postDigest(function () {
	          var b = E.get(t),
	              c = !b,
	              b = b || {},
	              g = 0 < (a.parent() || []).length && ("animate" === b.event || b.structural || f(b));if (c || b.counter !== H || !g) {
	            c && (Na(a, k), ha(a, k));if (c || s && b.event !== h) k.domOperation(), e.end();g || l(a);
	          } else h = !b.structural && f(b, !0) ? "setClass" : b.event, Q(a, 2), b = Ya(a, h, b.options), e.setHost(b), p(e, h, "start", {}), b.done(function (b) {
	            n(!b);(b = E.get(t)) && b.counter === H && l(z(a));p(e, h, "close", {});
	          });
	        });return e;
	      }function ta(a) {
	        a = z(a).querySelectorAll("[data-ng-animate]");r(a, function (a) {
	          var b = parseInt(a.getAttribute("data-ng-animate"), 10),
	              c = E.get(a);if (c) switch (b) {case 2:
	              c.runner.end();case 1:
	              E.remove(a);}
	        });
	      }function l(a) {
	        a = z(a);a.removeAttribute("data-ng-animate");E.remove(a);
	      }
	      function k(a, b) {
	        return z(a) === z(b);
	      }function L(a, b, c) {
	        c = w(e[0].body);var d = k(a, c) || "HTML" === a[0].nodeName,
	            h = k(a, y),
	            f = !1,
	            B,
	            p = g.get(z(a));(a = w.data(a[0], "$ngAnimatePin")) && (b = a);for (b = z(b); b;) {
	          h || (h = k(b, y));if (1 !== b.nodeType) break;a = E.get(b) || {};if (!f) {
	            var n = g.get(b);if (!0 === n && !1 !== p) {
	              p = !0;break;
	            } else !1 === n && (p = !1);f = a.structural;
	          }if (K(B) || !0 === B) a = w.data(b, "$$ngAnimateChildren"), ya(a) && (B = a);if (f && !1 === B) break;d || (d = k(b, c));if (d && h) break;if (!h && (a = w.data(b, "$ngAnimatePin"))) {
	            b = z(a);continue;
	          }b = b.parentNode;
	        }return (!f || B) && !0 !== p && h && d;
	      }function Q(a, b, c) {
	        c = c || {};c.state = b;a = z(a);a.setAttribute("data-ng-animate", b);c = (b = E.get(a)) ? va(b, c) : c;E.put(a, c);
	      }var E = new ba(),
	          g = new ba(),
	          ma = null,
	          h = c.$watch(function () {
	        return 0 === v.totalPendingRequests;
	      }, function (a) {
	        a && (h(), c.$$postDigest(function () {
	          c.$$postDigest(function () {
	            null === ma && (ma = !0);
	          });
	        }));
	      }),
	          t = Object.create(null),
	          x = a.classNameFilter(),
	          F = x ? function (a) {
	        return x.test(a);
	      } : function () {
	        return !0;
	      },
	          Na = Z(H),
	          J = U.Node.prototype.contains || function (a) {
	        return this === a || !!(this.compareDocumentPosition(a) & 16);
	      },
	          sa = { on: function on(a, b, c) {
	          var g = ua(b);t[a] = t[a] || [];t[a].push({ node: g, callback: c });w(b).on("$destroy", function () {
	            E.get(g) || sa.off(a, b, c);
	          });
	        }, off: function off(a, b, c) {
	          if (1 !== arguments.length || G(arguments[0])) {
	            var g = t[a];g && (t[a] = 1 === arguments.length ? null : n(g, b, c));
	          } else for (g in b = arguments[0], t) {
	            t[g] = n(t[g], b);
	          }
	        }, pin: function pin(a, b) {
	          Ea(aa(a), "element", "not an element");Ea(aa(b), "parentElement", "not an element");a.data("$ngAnimatePin", b);
	        }, push: function push(a, b, c, g) {
	          c = c || {};c.domOperation = g;return p(a, b, c);
	        }, enabled: function enabled(a, b) {
	          var c = arguments.length;if (0 === c) b = !!ma;else if (aa(a)) {
	            var d = z(a);1 === c ? b = !g.get(d) : g.put(d, !b);
	          } else b = ma = !!a;return b;
	        } };return sa;
	    }];
	  }]).provider("$$animation", ["$animateProvider", function (a) {
	    var b = this.drivers = [];this.$get = ["$$jqLite", "$rootScope", "$injector", "$$AnimateRunner", "$$HashMap", "$$rAFScheduler", function (a, d, f, e, m, A) {
	      function y(a) {
	        function b(a) {
	          if (a.processed) return a;a.processed = !0;var d = a.domNode,
	              n = d.parentNode;f.put(d, a);for (var p; n;) {
	            if (p = f.get(n)) {
	              p.processed || (p = b(p));break;
	            }n = n.parentNode;
	          }(p || c).children.push(a);return a;
	        }var c = { children: [] },
	            d,
	            f = new m();for (d = 0; d < a.length; d++) {
	          var e = a[d];f.put(e.domNode, a[d] = { domNode: e.domNode, fn: e.fn, children: [] });
	        }for (d = 0; d < a.length; d++) {
	          b(a[d]);
	        }return function (a) {
	          var b = [],
	              c = [],
	              d;for (d = 0; d < a.children.length; d++) {
	            c.push(a.children[d]);
	          }a = c.length;var f = 0,
	              e = [];for (d = 0; d < c.length; d++) {
	            var k = c[d];0 >= a && (a = f, f = 0, b.push(e), e = []);e.push(k.fn);k.children.forEach(function (a) {
	              f++;c.push(a);
	            });a--;
	          }e.length && b.push(e);return b;
	        }(c);
	      }var s = [],
	          ba = Z(a);return function (m, O, v) {
	        function H(a) {
	          a = a.hasAttribute("ng-animate-ref") ? [a] : a.querySelectorAll("[ng-animate-ref]");var b = [];r(a, function (a) {
	            var c = a.getAttribute("ng-animate-ref");c && c.length && b.push(a);
	          });return b;
	        }function S(a) {
	          var b = [],
	              c = {};r(a, function (a, d) {
	            var h = z(a.element),
	                k = 0 <= ["enter", "move"].indexOf(a.event),
	                h = a.structural ? H(h) : [];if (h.length) {
	              var f = k ? "to" : "from";r(h, function (a) {
	                var b = a.getAttribute("ng-animate-ref");c[b] = c[b] || {};c[b][f] = { animationID: d, element: w(a) };
	              });
	            } else b.push(a);
	          });var d = {},
	              k = {};r(c, function (c, f) {
	            var e = c.from,
	                B = c.to;if (e && B) {
	              var p = a[e.animationID],
	                  n = a[B.animationID],
	                  l = e.animationID.toString();if (!k[l]) {
	                var m = k[l] = { structural: !0, beforeStart: function beforeStart() {
	                    p.beforeStart();n.beforeStart();
	                  }, close: function close() {
	                    p.close();n.close();
	                  }, classes: P(p.classes, n.classes), from: p, to: n, anchors: [] };m.classes.length ? b.push(m) : (b.push(p), b.push(n));
	              }k[l].anchors.push({ out: e.element, "in": B.element });
	            } else e = e ? e.animationID : B.animationID, B = e.toString(), d[B] || (d[B] = !0, b.push(a[e]));
	          });return b;
	        }function P(a, b) {
	          a = a.split(" ");b = b.split(" ");
	          for (var c = [], d = 0; d < a.length; d++) {
	            var k = a[d];if ("ng-" !== k.substring(0, 3)) for (var f = 0; f < b.length; f++) {
	              if (k === b[f]) {
	                c.push(k);break;
	              }
	            }
	          }return c.join(" ");
	        }function I(a) {
	          for (var c = b.length - 1; 0 <= c; c--) {
	            var d = f.get(b[c])(a);if (d) return d;
	          }
	        }function B(a, b) {
	          function c(a) {
	            (a = a.data("$$animationRunner")) && a.setHost(b);
	          }a.from && a.to ? (c(a.from.element), c(a.to.element)) : c(a.element);
	        }function n() {
	          var a = m.data("$$animationRunner");!a || "leave" === O && v.$$domOperationFired || a.end();
	        }function p(b) {
	          m.off("$destroy", n);m.removeData("$$animationRunner");
	          ba(m, v);ha(m, v);v.domOperation();L && a.removeClass(m, L);m.removeClass("ng-animate");l.complete(!b);
	        }v = oa(v);var ta = 0 <= ["enter", "move", "leave"].indexOf(O),
	            l = new e({ end: function end() {
	            p();
	          }, cancel: function cancel() {
	            p(!0);
	          } });if (!b.length) return p(), l;m.data("$$animationRunner", l);var k = Fa(m.attr("class"), Fa(v.addClass, v.removeClass)),
	            L = v.tempClasses;L && (k += " " + L, v.tempClasses = null);var Q;ta && (Q = "ng-" + O + "-prepare", a.addClass(m, Q));s.push({ element: m, classes: k, event: O, structural: ta, options: v, beforeStart: function beforeStart() {
	            m.addClass("ng-animate");
	            L && a.addClass(m, L);Q && (a.removeClass(m, Q), Q = null);
	          }, close: p });m.on("$destroy", n);if (1 < s.length) return l;d.$$postDigest(function () {
	          var a = [];r(s, function (b) {
	            b.element.data("$$animationRunner") ? a.push(b) : b.close();
	          });s.length = 0;var b = S(a),
	              c = [];r(b, function (a) {
	            c.push({ domNode: z(a.from ? a.from.element : a.element), fn: function fn() {
	                a.beforeStart();var b,
	                    c = a.close;if ((a.anchors ? a.from.element || a.to.element : a.element).data("$$animationRunner")) {
	                  var d = I(a);d && (b = d.start);
	                }b ? (b = b(), b.done(function (a) {
	                  c(!a);
	                }), B(a, b)) : c();
	              } });
	          });A(y(c));
	        });return l;
	      };
	    }];
	  }]).provider("$animateCss", ["$animateProvider", function (a) {
	    var b = Ka(),
	        c = Ka();this.$get = ["$window", "$$jqLite", "$$AnimateRunner", "$timeout", "$$forceReflow", "$sniffer", "$$rAFScheduler", "$$animateQueue", function (a, f, e, m, A, y, s, ba) {
	      function C(a, b) {
	        var c = a.parentNode;return (c.$$ngAnimateParentKey || (c.$$ngAnimateParentKey = ++P)) + "-" + a.getAttribute("class") + "-" + b;
	      }function O(e, n, p, m) {
	        var l;0 < b.count(p) && (l = c.get(p), l || (n = Y(n, "-stagger"), f.addClass(e, n), l = Ia(a, e, m), l.animationDuration = Math.max(l.animationDuration, 0), l.transitionDuration = Math.max(l.transitionDuration, 0), f.removeClass(e, n), c.put(p, l)));return l || {};
	      }function v(a) {
	        I.push(a);s.waitUntilQuiet(function () {
	          b.flush();c.flush();for (var a = A(), d = 0; d < I.length; d++) {
	            I[d](a);
	          }I.length = 0;
	        });
	      }function H(c, f, e) {
	        f = b.get(e);f || (f = Ia(a, c, Wa), "infinite" === f.animationIterationCount && (f.animationIterationCount = 1));b.put(e, f);c = f;e = c.animationDelay;f = c.transitionDelay;c.maxDelay = e && f ? Math.max(e, f) : e || f;c.maxDuration = Math.max(c.animationDuration * c.animationIterationCount, c.transitionDuration);return c;
	      }var S = Z(f),
	          P = 0,
	          I = [];return function (a, c) {
	        function d() {
	          l();
	        }function s() {
	          l(!0);
	        }function l(b) {
	          if (!(A || P && J)) {
	            A = !0;J = !1;g.$$skipPreparationClasses || f.removeClass(a, ga);f.removeClass(a, ea);wa(h, !1);pa(h, !1);r(t, function (a) {
	              h.style[a[0]] = "";
	            });S(a, g);ha(a, g);Object.keys(I).length && r(I, function (a, b) {
	              a ? h.style.setProperty(b, a) : h.style.removeProperty(b);
	            });if (g.onDone) g.onDone();fa && fa.length && a.off(fa.join(" "), Q);var c = a.data("$$animateCss");c && (m.cancel(c[0].timer), a.removeData("$$animateCss"));w && w.complete(!b);
	          }
	        }function k(a) {
	          q.blockTransition && pa(h, a);q.blockKeyframeAnimation && wa(h, !!a);
	        }function L() {
	          w = new e({ end: d, cancel: s });v(N);l();return { $$willAnimate: !1, start: function start() {
	              return w;
	            }, end: d };
	        }function Q(a) {
	          a.stopPropagation();var b = a.originalEvent || a;a = b.$manualTimeStamp || Date.now();b = parseFloat(b.elapsedTime.toFixed(3));Math.max(a - V, 0) >= K && b >= M && (P = !0, l());
	        }function E() {
	          function b() {
	            if (!A) {
	              k(!1);r(t, function (a) {
	                h.style[a[0]] = a[1];
	              });S(a, g);f.addClass(a, ea);if (q.recalculateTimingStyles) {
	                na = h.getAttribute("class") + " " + ga;ja = C(h, na);D = H(h, na, ja);ca = D.maxDelay;u = Math.max(ca, 0);M = D.maxDuration;if (0 === M) {
	                  l();return;
	                }q.hasTransitions = 0 < D.transitionDuration;q.hasAnimations = 0 < D.animationDuration;
	              }q.applyAnimationDelay && (ca = "boolean" !== typeof g.delay && xa(g.delay) ? parseFloat(g.delay) : ca, u = Math.max(ca, 0), D.animationDelay = ca, da = [qa, ca + "s"], t.push(da), h.style[da[0]] = da[1]);K = 1E3 * u;U = 1E3 * M;if (g.easing) {
	                var d,
	                    e = g.easing;q.hasTransitions && (d = R + "TimingFunction", t.push([d, e]), h.style[d] = e);q.hasAnimations && (d = $ + "TimingFunction", t.push([d, e]), h.style[d] = e);
	              }D.transitionDuration && fa.push(za);D.animationDuration && fa.push(Aa);V = Date.now();var E = K + 1.5 * U;d = V + E;var e = a.data("$$animateCss") || [],
	                  n = !0;if (e.length) {
	                var p = e[0];(n = d > p.expectedEndTime) ? m.cancel(p.timer) : e.push(l);
	              }n && (E = m(c, E, !1), e[0] = { timer: E, expectedEndTime: d }, e.push(l), a.data("$$animateCss", e));if (fa.length) a.on(fa.join(" "), Q);g.to && (g.cleanupStyles && La(I, h, Object.keys(g.to)), Ha(a, g));
	            }
	          }function c() {
	            var b = a.data("$$animateCss");if (b) {
	              for (var d = 1; d < b.length; d++) {
	                b[d]();
	              }a.removeData("$$animateCss");
	            }
	          }if (!A) if (h.parentNode) {
	            var d = function d(a) {
	              if (P) J && a && (J = !1, l());else if (J = !a, D.animationDuration) if (a = wa(h, J), J) t.push(a);else {
	                var b = t,
	                    c = b.indexOf(a);0 <= a && b.splice(c, 1);
	              }
	            },
	                e = 0 < aa && (D.transitionDuration && 0 === W.transitionDuration || D.animationDuration && 0 === W.animationDuration) && Math.max(W.animationDelay, W.transitionDelay);e ? m(b, Math.floor(e * aa * 1E3), !1) : b();G.resume = function () {
	              d(!0);
	            };G.pause = function () {
	              d(!1);
	            };
	          } else l();
	        }var g = c || {};g.$$prepared || (g = oa(Ca(g)));
	        var I = {},
	            h = z(a);if (!h || !h.parentNode || !ba.enabled()) return L();var t = [],
	            x = a.attr("class"),
	            F = Pa(g),
	            A,
	            J,
	            P,
	            w,
	            G,
	            u,
	            K,
	            M,
	            U,
	            V,
	            fa = [];if (0 === g.duration || !y.animations && !y.transitions) return L();var ia = g.event && X(g.event) ? g.event.join(" ") : g.event,
	            Z = "",
	            T = "";ia && g.structural ? Z = Y(ia, "ng-", !0) : ia && (Z = ia);g.addClass && (T += Y(g.addClass, "-add"));g.removeClass && (T.length && (T += " "), T += Y(g.removeClass, "-remove"));g.applyClassesEarly && T.length && S(a, g);var ga = [Z, T].join(" ").trim(),
	            na = x + " " + ga,
	            ea = Y(ga, "-active"),
	            x = F.to && 0 < Object.keys(F.to).length;if (!(0 < (g.keyframeStyle || "").length || x || ga)) return L();var ja, W;0 < g.stagger ? (F = parseFloat(g.stagger), W = { transitionDelay: F, animationDelay: F, transitionDuration: 0, animationDuration: 0 }) : (ja = C(h, na), W = O(h, ga, ja, Xa));g.$$skipPreparationClasses || f.addClass(a, ga);g.transitionStyle && (F = [R, g.transitionStyle], ka(h, F), t.push(F));0 <= g.duration && (F = 0 < h.style[R].length, F = Ja(g.duration, F), ka(h, F), t.push(F));g.keyframeStyle && (F = [$, g.keyframeStyle], ka(h, F), t.push(F));var aa = W ? 0 <= g.staggerIndex ? g.staggerIndex : b.count(ja) : 0;(ia = 0 === aa) && !g.skipBlocking && pa(h, 9999);var D = H(h, na, ja),
	            ca = D.maxDelay;u = Math.max(ca, 0);M = D.maxDuration;var q = {};q.hasTransitions = 0 < D.transitionDuration;q.hasAnimations = 0 < D.animationDuration;q.hasTransitionAll = q.hasTransitions && "all" === D.transitionProperty;q.applyTransitionDuration = x && (q.hasTransitions && !q.hasTransitionAll || q.hasAnimations && !q.hasTransitions);q.applyAnimationDuration = g.duration && q.hasAnimations;q.applyTransitionDelay = xa(g.delay) && (q.applyTransitionDuration || q.hasTransitions);q.applyAnimationDelay = xa(g.delay) && q.hasAnimations;q.recalculateTimingStyles = 0 < T.length;if (q.applyTransitionDuration || q.applyAnimationDuration) M = g.duration ? parseFloat(g.duration) : M, q.applyTransitionDuration && (q.hasTransitions = !0, D.transitionDuration = M, F = 0 < h.style[R + "Property"].length, t.push(Ja(M, F))), q.applyAnimationDuration && (q.hasAnimations = !0, D.animationDuration = M, t.push([Ba, M + "s"]));if (0 === M && !q.recalculateTimingStyles) return L();if (null != g.delay) {
	          var da;"boolean" !== typeof g.delay && (da = parseFloat(g.delay), u = Math.max(da, 0));q.applyTransitionDelay && t.push([la, da + "s"]);q.applyAnimationDelay && t.push([qa, da + "s"]);
	        }null == g.duration && 0 < D.transitionDuration && (q.recalculateTimingStyles = q.recalculateTimingStyles || ia);K = 1E3 * u;U = 1E3 * M;g.skipBlocking || (q.blockTransition = 0 < D.transitionDuration, q.blockKeyframeAnimation = 0 < D.animationDuration && 0 < W.animationDelay && 0 === W.animationDuration);g.from && (g.cleanupStyles && La(I, h, Object.keys(g.from)), Ga(a, g));q.blockTransition || q.blockKeyframeAnimation ? k(M) : g.skipBlocking || pa(h, !1);return { $$willAnimate: !0, end: d, start: function start() {
	            if (!A) return G = { end: d, cancel: s, resume: null, pause: null }, w = new e(G), v(E), w;
	          } };
	      };
	    }];
	  }]).provider("$$animateCssDriver", ["$$animationProvider", function (a) {
	    a.drivers.push("$$animateCssDriver");this.$get = ["$animateCss", "$rootScope", "$$AnimateRunner", "$rootElement", "$sniffer", "$$jqLite", "$document", function (a, c, d, f, e, m, A) {
	      function y(a) {
	        return a.replace(/\bng-\S+\b/g, "");
	      }function s(a, b) {
	        G(a) && (a = a.split(" "));G(b) && (b = b.split(" "));return a.filter(function (a) {
	          return -1 === b.indexOf(a);
	        }).join(" ");
	      }function ba(c, e, f) {
	        function m(a) {
	          var b = {},
	              c = z(a).getBoundingClientRect();r(["width", "height", "top", "left"], function (a) {
	            var d = c[a];switch (a) {case "top":
	                d += v.scrollTop;break;case "left":
	                d += v.scrollLeft;}b[a] = Math.floor(d) + "px";
	          });return b;
	        }function n() {
	          var c = y(f.attr("class") || ""),
	              d = s(c, l),
	              c = s(l, c),
	              d = a(A, { to: m(f), addClass: "ng-anchor-in " + d, removeClass: "ng-anchor-out " + c, delay: !0 });return d.$$willAnimate ? d : null;
	        }function p() {
	          A.remove();e.removeClass("ng-animate-shim");f.removeClass("ng-animate-shim");
	        }
	        var A = w(z(e).cloneNode(!0)),
	            l = y(A.attr("class") || "");e.addClass("ng-animate-shim");f.addClass("ng-animate-shim");A.addClass("ng-anchor");H.append(A);var k;c = function () {
	          var c = a(A, { addClass: "ng-anchor-out", delay: !0, from: m(e) });return c.$$willAnimate ? c : null;
	        }();if (!c && (k = n(), !k)) return p();var L = c || k;return { start: function start() {
	            function a() {
	              c && c.end();
	            }var b,
	                c = L.start();c.done(function () {
	              c = null;if (!k && (k = n())) return c = k.start(), c.done(function () {
	                c = null;p();b.complete();
	              }), c;p();b.complete();
	            });return b = new d({ end: a,
	              cancel: a });
	          } };
	      }function C(a, b, c, e) {
	        var f = O(a, N),
	            m = O(b, N),
	            y = [];r(e, function (a) {
	          (a = ba(c, a.out, a["in"])) && y.push(a);
	        });if (f || m || 0 !== y.length) return { start: function start() {
	            function a() {
	              r(b, function (a) {
	                a.end();
	              });
	            }var b = [];f && b.push(f.start());m && b.push(m.start());r(y, function (a) {
	              b.push(a.start());
	            });var c = new d({ end: a, cancel: a });d.all(b, function (a) {
	              c.complete(a);
	            });return c;
	          } };
	      }function O(c) {
	        var d = c.element,
	            e = c.options || {};c.structural && (e.event = c.event, e.structural = !0, e.applyClassesEarly = !0, "leave" === c.event && (e.onDone = e.domOperation));e.preparationClasses && (e.event = ea(e.event, e.preparationClasses));c = a(d, e);return c.$$willAnimate ? c : null;
	      }if (!e.animations && !e.transitions) return N;var v = A[0].body;c = z(f);var H = w(c.parentNode && 11 === c.parentNode.nodeType || v.contains(c) ? c : v);return function (a) {
	        return a.from && a.to ? C(a.from, a.to, a.classes, a.anchors) : O(a);
	      };
	    }];
	  }]).provider("$$animateJs", ["$animateProvider", function (a) {
	    this.$get = ["$injector", "$$AnimateRunner", "$$jqLite", function (b, c, d) {
	      function f(c) {
	        c = X(c) ? c : c.split(" ");for (var d = [], e = {}, f = 0; f < c.length; f++) {
	          var r = c[f],
	              w = a.$$registeredAnimations[r];w && !e[r] && (d.push(b.get(w)), e[r] = !0);
	        }return d;
	      }var e = Z(d);return function (a, b, d, s) {
	        function w() {
	          s.domOperation();e(a, s);
	        }function C(a, b, d, e, f) {
	          switch (d) {case "animate":
	              b = [b, e.from, e.to, f];break;case "setClass":
	              b = [b, G, P, f];break;case "addClass":
	              b = [b, G, f];break;case "removeClass":
	              b = [b, P, f];break;default:
	              b = [b, f];}b.push(e);if (a = a.apply(a, b)) if (Da(a.start) && (a = a.start()), a instanceof c) a.done(f);else if (Da(a)) return a;return N;
	        }function z(a, b, d, e, f) {
	          var l = [];r(e, function (e) {
	            var m = e[f];m && l.push(function () {
	              var e,
	                  f,
	                  g = !1,
	                  h = function h(a) {
	                g || (g = !0, (f || N)(a), e.complete(!a));
	              };e = new c({ end: function end() {
	                  h();
	                }, cancel: function cancel() {
	                  h(!0);
	                } });f = C(m, a, b, d, function (a) {
	                h(!1 === a);
	              });return e;
	            });
	          });return l;
	        }function v(a, b, d, e, f) {
	          var l = z(a, b, d, e, f);if (0 === l.length) {
	            var h, m;"beforeSetClass" === f ? (h = z(a, "removeClass", d, e, "beforeRemoveClass"), m = z(a, "addClass", d, e, "beforeAddClass")) : "setClass" === f && (h = z(a, "removeClass", d, e, "removeClass"), m = z(a, "addClass", d, e, "addClass"));
	            h && (l = l.concat(h));m && (l = l.concat(m));
	          }if (0 !== l.length) return function (a) {
	            var b = [];l.length && r(l, function (a) {
	              b.push(a());
	            });b.length ? c.all(b, a) : a();return function (a) {
	              r(b, function (b) {
	                a ? b.cancel() : b.end();
	              });
	            };
	          };
	        }var H = !1;3 === arguments.length && ra(d) && (s = d, d = null);s = oa(s);d || (d = a.attr("class") || "", s.addClass && (d += " " + s.addClass), s.removeClass && (d += " " + s.removeClass));var G = s.addClass,
	            P = s.removeClass,
	            I = f(d),
	            B,
	            n;if (I.length) {
	          var p, K;"leave" === b ? (K = "leave", p = "afterLeave") : (K = "before" + b.charAt(0).toUpperCase() + b.substr(1), p = b);"enter" !== b && "move" !== b && (B = v(a, b, s, I, K));n = v(a, b, s, I, p);
	        }if (B || n) {
	          var l;return { $$willAnimate: !0, end: function end() {
	              l ? l.end() : (H = !0, w(), ha(a, s), l = new c(), l.complete(!0));return l;
	            }, start: function start() {
	              function b(c) {
	                H = !0;w();ha(a, s);l.complete(c);
	              }if (l) return l;l = new c();var d,
	                  e = [];B && e.push(function (a) {
	                d = B(a);
	              });e.length ? e.push(function (a) {
	                w();a(!0);
	              }) : w();n && e.push(function (a) {
	                d = n(a);
	              });l.setHost({ end: function end() {
	                  H || ((d || N)(void 0), b(void 0));
	                }, cancel: function cancel() {
	                  H || ((d || N)(!0), b(!0));
	                } });c.chain(e, b);return l;
	            } };
	        }
	      };
	    }];
	  }]).provider("$$animateJsDriver", ["$$animationProvider", function (a) {
	    a.drivers.push("$$animateJsDriver");this.$get = ["$$animateJs", "$$AnimateRunner", function (a, c) {
	      function d(c) {
	        return a(c.element, c.event, c.classes, c.options);
	      }return function (a) {
	        if (a.from && a.to) {
	          var b = d(a.from),
	              m = d(a.to);if (b || m) return { start: function start() {
	              function a() {
	                return function () {
	                  r(d, function (a) {
	                    a.end();
	                  });
	                };
	              }var d = [];b && d.push(b.start());m && d.push(m.start());c.all(d, function (a) {
	                f.complete(a);
	              });var f = new c({ end: a(), cancel: a() });
	              return f;
	            } };
	        } else return d(a);
	      };
	    }];
	  }]);
	})(window, window.angular);
	//# sourceMappingURL=angular-animate.min.js.map

/***/ },
/* 6 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';

	__webpack_require__(7);
	module.exports = 'angular-busy';

/***/ },
/* 7 */
/***/ function(module, exports) {

	"use strict";

	(function () {
	  'use strict';

	  cgBusy.$inject = ["$compile", "$q", "$templateRequest", "angularBusyDefaults", "_cgBusyTrackerFactory"];
	  var defaults = {
	    templateUrl: 'angular-busy/defaultTemplate.html',
	    delay: 0,
	    minDuration: 0,
	    backdrop: true,
	    message: 'Please Wait...',
	    wrapperClass: undefined
	  };

	  angular.module('angular-busy', []).constant('angularBusyDefaults', defaults).constant('cgBusyDefaults', defaults).directive('angularBusy', cgBusy).directive('cgBusy', cgBusy);

	  /** @ngInject */
	  function cgBusy($compile, $q, $templateRequest, angularBusyDefaults, _cgBusyTrackerFactory) {
	    return {
	      restrict: 'A',
	      link: function link(scope, element, attrs) {

	        //Apply position:relative to parent element if necessary
	        var position = element.css('position');
	        if (position === 'static' || position === '' || typeof position === 'undefined') {
	          element.css('position', 'relative');
	        }

	        var templateScope;
	        var tracker = _cgBusyTrackerFactory();

	        templateScope = scope.$new();

	        templateScope.$cgBusyIsActive = tracker.active;

	        $templateRequest('angular-busy/angular-busy.html').then(function (template) {
	          element.append($compile(template)(templateScope));
	        });

	        var fakePromise;

	        scope.$watchCollection(attrs.cgBusy || attrs.angularBusy, function (options) {

	          if (!options || !options.hasOwnProperty('promise')) {
	            options = { promise: options };
	          }

	          if (fakePromise) {
	            fakePromise.resolve();
	            fakePromise = undefined;
	          }

	          if (angular.isNumber(options.promise) || options.promise === true || options.promise === false) {
	            fakePromise = $q.defer();
	            if (!options.promise) {
	              fakePromise.resolve();
	            }
	            options.promise = fakePromise.promise;
	          }

	          options = angular.extend({}, angularBusyDefaults, options);

	          if (!options.templateUrl) {
	            options.templateUrl = angularBusyDefaults.templateUrl;
	          }

	          if (!angular.isArray(options.promise)) {
	            options.promise = [options.promise];
	          }

	          templateScope.$message = options.message;
	          templateScope.$backdrop = options.backdrop;
	          templateScope.$templateUrl = options.templateUrl;
	          templateScope.$wrapperClass = options.wrapperClass;

	          tracker.reset({
	            promises: options.promise,
	            delay: options.delay,
	            minDuration: options.minDuration
	          });
	        }, true);
	      }
	    };
	  }
	})();

	(function () {
	  'use strict';

	  _cgBusyTrackerFactory.$inject = ["$timeout", "$q"];
	  angular.module('angular-busy').service('_cgBusyTrackerFactory', _cgBusyTrackerFactory);

	  /** @ngInject */
	  function _cgBusyTrackerFactory($timeout, $q) {

	    return function () {

	      var tracker = {};
	      tracker.promises = [];
	      tracker.delayPromise = null;
	      tracker.durationPromise = null;

	      tracker.reset = function (options) {
	        tracker.minDuration = options.minDuration;

	        tracker.promises = [];
	        angular.forEach(options.promises, function (p) {
	          if (!p || p.$cgBusyFulfilled) {
	            return;
	          }
	          addPromiseLikeThing(p);
	        });

	        if (tracker.promises.length === 0) {
	          //if we have no promises then don't do the delay or duration stuff
	          return;
	        }

	        if (options.delay) {
	          tracker.delayPromise = $timeout(function () {
	            tracker.delayPromise = null;
	            createMinDuration(options);
	          }, options.delay);
	        } else {
	          createMinDuration(options);
	        }
	      };

	      function createMinDuration(options) {
	        if (options.minDuration) {
	          tracker.durationPromise = $timeout(function () {
	            tracker.durationPromise = null;
	          }, options.minDuration);
	        }
	      }

	      tracker.isPromise = function (promiseThing) {
	        var then = promiseThing && (promiseThing.then || promiseThing.$then || promiseThing.$promise && promiseThing.$promise.then || promiseThing.promise && promiseThing.promise.then);

	        return typeof then !== 'undefined';
	      };

	      tracker.callThen = function (promiseThing, success, error) {
	        var promise;
	        if (promiseThing.then || promiseThing.$then) {
	          promise = promiseThing;
	        } else if (promiseThing.$promise) {
	          promise = promiseThing.$promise;
	        } else if (promiseThing.promise) {
	          promise = promiseThing.promise;
	        } else if (promiseThing.denodeify) {
	          promise = $q.when(promiseThing);
	        }

	        var then = promise.then || promise.$then;

	        then.call(promise, success, error);
	      };

	      var addPromiseLikeThing = function addPromiseLikeThing(promise) {

	        if (!tracker.isPromise(promise)) {
	          throw new Error('cgBusy expects a promise (or something that has a .promise or .$promise');
	        }

	        if (tracker.promises.indexOf(promise) !== -1) {
	          return;
	        }
	        tracker.promises.push(promise);

	        tracker.callThen(promise, function () {
	          promise.$cgBusyFulfilled = true;
	          if (tracker.promises.indexOf(promise) === -1) {
	            return;
	          }
	          tracker.promises.splice(tracker.promises.indexOf(promise), 1);
	          if (tracker.delayPromise && tracker.promises.length === 0) {
	            $timeout.cancel(tracker.delayPromise);
	          }
	        }, function () {
	          promise.$cgBusyFulfilled = true;
	          if (tracker.promises.indexOf(promise) === -1) {
	            return;
	          }
	          tracker.promises.splice(tracker.promises.indexOf(promise), 1);
	        });
	      };

	      tracker.active = function () {
	        return !tracker.delayPromise && (tracker.durationPromise || tracker.promises.length > 0);
	      };

	      return tracker;
	    };
	  }
	})();

	angular.module('angular-busy').run(['$templateCache', function ($templateCache) {
	  $templateCache.put('angular-busy/angular-busy.html', '<div class="ng-hide cg-busy cg-busy-animation {{$wrapperClass}}" ng-show="$cgBusyIsActive()"><div class="cg-busy-backdrop cg-busy-backdrop-animation ng-hide" ng-show="$backdrop"></div><div class="cg-busy-template" ng-include="$templateUrl"></div></div>');
	  $templateCache.put('angular-busy/defaultTemplate.html', '<div class="carPreloader"><div class="spinner"><div class="double-bounce1"></div><div class="double-bounce2"></div></div></div>');
	}]);

/***/ },
/* 8 */
/***/ function(module, exports, __webpack_require__) {

	var __WEBPACK_AMD_DEFINE_ARRAY__, __WEBPACK_AMD_DEFINE_RESULT__;/* WEBPACK VAR INJECTION */(function(module) {"use strict";

	var _typeof = typeof Symbol === "function" && typeof Symbol.iterator === "symbol" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === "function" && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; };

	/*! jQuery v3.1.1 | (c) jQuery Foundation | jquery.org/license */
	!function (a, b) {
	  "use strict";
	  "object" == ( false ? "undefined" : _typeof(module)) && "object" == _typeof(module.exports) ? module.exports = a.document ? b(a, !0) : function (a) {
	    if (!a.document) throw new Error("jQuery requires a window with a document");return b(a);
	  } : b(a);
	}("undefined" != typeof window ? window : undefined, function (a, b) {
	  "use strict";
	  var c = [],
	      d = a.document,
	      e = Object.getPrototypeOf,
	      f = c.slice,
	      g = c.concat,
	      h = c.push,
	      i = c.indexOf,
	      j = {},
	      k = j.toString,
	      l = j.hasOwnProperty,
	      m = l.toString,
	      n = m.call(Object),
	      o = {};function p(a, b) {
	    b = b || d;var c = b.createElement("script");c.text = a, b.head.appendChild(c).parentNode.removeChild(c);
	  }var q = "3.1.1",
	      r = function r(a, b) {
	    return new r.fn.init(a, b);
	  },
	      s = /^[\s\uFEFF\xA0]+|[\s\uFEFF\xA0]+$/g,
	      t = /^-ms-/,
	      u = /-([a-z])/g,
	      v = function v(a, b) {
	    return b.toUpperCase();
	  };r.fn = r.prototype = { jquery: q, constructor: r, length: 0, toArray: function toArray() {
	      return f.call(this);
	    }, get: function get(a) {
	      return null == a ? f.call(this) : a < 0 ? this[a + this.length] : this[a];
	    }, pushStack: function pushStack(a) {
	      var b = r.merge(this.constructor(), a);return b.prevObject = this, b;
	    }, each: function each(a) {
	      return r.each(this, a);
	    }, map: function map(a) {
	      return this.pushStack(r.map(this, function (b, c) {
	        return a.call(b, c, b);
	      }));
	    }, slice: function slice() {
	      return this.pushStack(f.apply(this, arguments));
	    }, first: function first() {
	      return this.eq(0);
	    }, last: function last() {
	      return this.eq(-1);
	    }, eq: function eq(a) {
	      var b = this.length,
	          c = +a + (a < 0 ? b : 0);return this.pushStack(c >= 0 && c < b ? [this[c]] : []);
	    }, end: function end() {
	      return this.prevObject || this.constructor();
	    }, push: h, sort: c.sort, splice: c.splice }, r.extend = r.fn.extend = function () {
	    var a,
	        b,
	        c,
	        d,
	        e,
	        f,
	        g = arguments[0] || {},
	        h = 1,
	        i = arguments.length,
	        j = !1;for ("boolean" == typeof g && (j = g, g = arguments[h] || {}, h++), "object" == (typeof g === "undefined" ? "undefined" : _typeof(g)) || r.isFunction(g) || (g = {}), h === i && (g = this, h--); h < i; h++) {
	      if (null != (a = arguments[h])) for (b in a) {
	        c = g[b], d = a[b], g !== d && (j && d && (r.isPlainObject(d) || (e = r.isArray(d))) ? (e ? (e = !1, f = c && r.isArray(c) ? c : []) : f = c && r.isPlainObject(c) ? c : {}, g[b] = r.extend(j, f, d)) : void 0 !== d && (g[b] = d));
	      }
	    }return g;
	  }, r.extend({ expando: "jQuery" + (q + Math.random()).replace(/\D/g, ""), isReady: !0, error: function error(a) {
	      throw new Error(a);
	    }, noop: function noop() {}, isFunction: function isFunction(a) {
	      return "function" === r.type(a);
	    }, isArray: Array.isArray, isWindow: function isWindow(a) {
	      return null != a && a === a.window;
	    }, isNumeric: function isNumeric(a) {
	      var b = r.type(a);return ("number" === b || "string" === b) && !isNaN(a - parseFloat(a));
	    }, isPlainObject: function isPlainObject(a) {
	      var b, c;return !(!a || "[object Object]" !== k.call(a)) && (!(b = e(a)) || (c = l.call(b, "constructor") && b.constructor, "function" == typeof c && m.call(c) === n));
	    }, isEmptyObject: function isEmptyObject(a) {
	      var b;for (b in a) {
	        return !1;
	      }return !0;
	    }, type: function type(a) {
	      return null == a ? a + "" : "object" == (typeof a === "undefined" ? "undefined" : _typeof(a)) || "function" == typeof a ? j[k.call(a)] || "object" : typeof a === "undefined" ? "undefined" : _typeof(a);
	    }, globalEval: function globalEval(a) {
	      p(a);
	    }, camelCase: function camelCase(a) {
	      return a.replace(t, "ms-").replace(u, v);
	    }, nodeName: function nodeName(a, b) {
	      return a.nodeName && a.nodeName.toLowerCase() === b.toLowerCase();
	    }, each: function each(a, b) {
	      var c,
	          d = 0;if (w(a)) {
	        for (c = a.length; d < c; d++) {
	          if (b.call(a[d], d, a[d]) === !1) break;
	        }
	      } else for (d in a) {
	        if (b.call(a[d], d, a[d]) === !1) break;
	      }return a;
	    }, trim: function trim(a) {
	      return null == a ? "" : (a + "").replace(s, "");
	    }, makeArray: function makeArray(a, b) {
	      var c = b || [];return null != a && (w(Object(a)) ? r.merge(c, "string" == typeof a ? [a] : a) : h.call(c, a)), c;
	    }, inArray: function inArray(a, b, c) {
	      return null == b ? -1 : i.call(b, a, c);
	    }, merge: function merge(a, b) {
	      for (var c = +b.length, d = 0, e = a.length; d < c; d++) {
	        a[e++] = b[d];
	      }return a.length = e, a;
	    }, grep: function grep(a, b, c) {
	      for (var d, e = [], f = 0, g = a.length, h = !c; f < g; f++) {
	        d = !b(a[f], f), d !== h && e.push(a[f]);
	      }return e;
	    }, map: function map(a, b, c) {
	      var d,
	          e,
	          f = 0,
	          h = [];if (w(a)) for (d = a.length; f < d; f++) {
	        e = b(a[f], f, c), null != e && h.push(e);
	      } else for (f in a) {
	        e = b(a[f], f, c), null != e && h.push(e);
	      }return g.apply([], h);
	    }, guid: 1, proxy: function proxy(a, b) {
	      var c, d, e;if ("string" == typeof b && (c = a[b], b = a, a = c), r.isFunction(a)) return d = f.call(arguments, 2), e = function e() {
	        return a.apply(b || this, d.concat(f.call(arguments)));
	      }, e.guid = a.guid = a.guid || r.guid++, e;
	    }, now: Date.now, support: o }), "function" == typeof Symbol && (r.fn[Symbol.iterator] = c[Symbol.iterator]), r.each("Boolean Number String Function Array Date RegExp Object Error Symbol".split(" "), function (a, b) {
	    j["[object " + b + "]"] = b.toLowerCase();
	  });function w(a) {
	    var b = !!a && "length" in a && a.length,
	        c = r.type(a);return "function" !== c && !r.isWindow(a) && ("array" === c || 0 === b || "number" == typeof b && b > 0 && b - 1 in a);
	  }var x = function (a) {
	    var b,
	        c,
	        d,
	        e,
	        f,
	        g,
	        h,
	        i,
	        j,
	        k,
	        l,
	        m,
	        n,
	        o,
	        p,
	        q,
	        r,
	        s,
	        t,
	        u = "sizzle" + 1 * new Date(),
	        v = a.document,
	        w = 0,
	        x = 0,
	        y = ha(),
	        z = ha(),
	        A = ha(),
	        B = function B(a, b) {
	      return a === b && (l = !0), 0;
	    },
	        C = {}.hasOwnProperty,
	        D = [],
	        E = D.pop,
	        F = D.push,
	        G = D.push,
	        H = D.slice,
	        I = function I(a, b) {
	      for (var c = 0, d = a.length; c < d; c++) {
	        if (a[c] === b) return c;
	      }return -1;
	    },
	        J = "checked|selected|async|autofocus|autoplay|controls|defer|disabled|hidden|ismap|loop|multiple|open|readonly|required|scoped",
	        K = "[\\x20\\t\\r\\n\\f]",
	        L = "(?:\\\\.|[\\w-]|[^\0-\\xa0])+",
	        M = "\\[" + K + "*(" + L + ")(?:" + K + "*([*^$|!~]?=)" + K + "*(?:'((?:\\\\.|[^\\\\'])*)'|\"((?:\\\\.|[^\\\\\"])*)\"|(" + L + "))|)" + K + "*\\]",
	        N = ":(" + L + ")(?:\\((('((?:\\\\.|[^\\\\'])*)'|\"((?:\\\\.|[^\\\\\"])*)\")|((?:\\\\.|[^\\\\()[\\]]|" + M + ")*)|.*)\\)|)",
	        O = new RegExp(K + "+", "g"),
	        P = new RegExp("^" + K + "+|((?:^|[^\\\\])(?:\\\\.)*)" + K + "+$", "g"),
	        Q = new RegExp("^" + K + "*," + K + "*"),
	        R = new RegExp("^" + K + "*([>+~]|" + K + ")" + K + "*"),
	        S = new RegExp("=" + K + "*([^\\]'\"]*?)" + K + "*\\]", "g"),
	        T = new RegExp(N),
	        U = new RegExp("^" + L + "$"),
	        V = { ID: new RegExp("^#(" + L + ")"), CLASS: new RegExp("^\\.(" + L + ")"), TAG: new RegExp("^(" + L + "|[*])"), ATTR: new RegExp("^" + M), PSEUDO: new RegExp("^" + N), CHILD: new RegExp("^:(only|first|last|nth|nth-last)-(child|of-type)(?:\\(" + K + "*(even|odd|(([+-]|)(\\d*)n|)" + K + "*(?:([+-]|)" + K + "*(\\d+)|))" + K + "*\\)|)", "i"), bool: new RegExp("^(?:" + J + ")$", "i"), needsContext: new RegExp("^" + K + "*[>+~]|:(even|odd|eq|gt|lt|nth|first|last)(?:\\(" + K + "*((?:-\\d)?\\d*)" + K + "*\\)|)(?=[^-]|$)", "i") },
	        W = /^(?:input|select|textarea|button)$/i,
	        X = /^h\d$/i,
	        Y = /^[^{]+\{\s*\[native \w/,
	        Z = /^(?:#([\w-]+)|(\w+)|\.([\w-]+))$/,
	        $ = /[+~]/,
	        _ = new RegExp("\\\\([\\da-f]{1,6}" + K + "?|(" + K + ")|.)", "ig"),
	        aa = function aa(a, b, c) {
	      var d = "0x" + b - 65536;return d !== d || c ? b : d < 0 ? String.fromCharCode(d + 65536) : String.fromCharCode(d >> 10 | 55296, 1023 & d | 56320);
	    },
	        ba = /([\0-\x1f\x7f]|^-?\d)|^-$|[^\0-\x1f\x7f-\uFFFF\w-]/g,
	        ca = function ca(a, b) {
	      return b ? "\0" === a ? "\uFFFD" : a.slice(0, -1) + "\\" + a.charCodeAt(a.length - 1).toString(16) + " " : "\\" + a;
	    },
	        da = function da() {
	      m();
	    },
	        ea = ta(function (a) {
	      return a.disabled === !0 && ("form" in a || "label" in a);
	    }, { dir: "parentNode", next: "legend" });try {
	      G.apply(D = H.call(v.childNodes), v.childNodes), D[v.childNodes.length].nodeType;
	    } catch (fa) {
	      G = { apply: D.length ? function (a, b) {
	          F.apply(a, H.call(b));
	        } : function (a, b) {
	          var c = a.length,
	              d = 0;while (a[c++] = b[d++]) {}a.length = c - 1;
	        } };
	    }function ga(a, b, d, e) {
	      var f,
	          h,
	          j,
	          k,
	          l,
	          o,
	          r,
	          s = b && b.ownerDocument,
	          w = b ? b.nodeType : 9;if (d = d || [], "string" != typeof a || !a || 1 !== w && 9 !== w && 11 !== w) return d;if (!e && ((b ? b.ownerDocument || b : v) !== n && m(b), b = b || n, p)) {
	        if (11 !== w && (l = Z.exec(a))) if (f = l[1]) {
	          if (9 === w) {
	            if (!(j = b.getElementById(f))) return d;if (j.id === f) return d.push(j), d;
	          } else if (s && (j = s.getElementById(f)) && t(b, j) && j.id === f) return d.push(j), d;
	        } else {
	          if (l[2]) return G.apply(d, b.getElementsByTagName(a)), d;if ((f = l[3]) && c.getElementsByClassName && b.getElementsByClassName) return G.apply(d, b.getElementsByClassName(f)), d;
	        }if (c.qsa && !A[a + " "] && (!q || !q.test(a))) {
	          if (1 !== w) s = b, r = a;else if ("object" !== b.nodeName.toLowerCase()) {
	            (k = b.getAttribute("id")) ? k = k.replace(ba, ca) : b.setAttribute("id", k = u), o = g(a), h = o.length;while (h--) {
	              o[h] = "#" + k + " " + sa(o[h]);
	            }r = o.join(","), s = $.test(a) && qa(b.parentNode) || b;
	          }if (r) try {
	            return G.apply(d, s.querySelectorAll(r)), d;
	          } catch (x) {} finally {
	            k === u && b.removeAttribute("id");
	          }
	        }
	      }return i(a.replace(P, "$1"), b, d, e);
	    }function ha() {
	      var a = [];function b(c, e) {
	        return a.push(c + " ") > d.cacheLength && delete b[a.shift()], b[c + " "] = e;
	      }return b;
	    }function ia(a) {
	      return a[u] = !0, a;
	    }function ja(a) {
	      var b = n.createElement("fieldset");try {
	        return !!a(b);
	      } catch (c) {
	        return !1;
	      } finally {
	        b.parentNode && b.parentNode.removeChild(b), b = null;
	      }
	    }function ka(a, b) {
	      var c = a.split("|"),
	          e = c.length;while (e--) {
	        d.attrHandle[c[e]] = b;
	      }
	    }function la(a, b) {
	      var c = b && a,
	          d = c && 1 === a.nodeType && 1 === b.nodeType && a.sourceIndex - b.sourceIndex;if (d) return d;if (c) while (c = c.nextSibling) {
	        if (c === b) return -1;
	      }return a ? 1 : -1;
	    }function ma(a) {
	      return function (b) {
	        var c = b.nodeName.toLowerCase();return "input" === c && b.type === a;
	      };
	    }function na(a) {
	      return function (b) {
	        var c = b.nodeName.toLowerCase();return ("input" === c || "button" === c) && b.type === a;
	      };
	    }function oa(a) {
	      return function (b) {
	        return "form" in b ? b.parentNode && b.disabled === !1 ? "label" in b ? "label" in b.parentNode ? b.parentNode.disabled === a : b.disabled === a : b.isDisabled === a || b.isDisabled !== !a && ea(b) === a : b.disabled === a : "label" in b && b.disabled === a;
	      };
	    }function pa(a) {
	      return ia(function (b) {
	        return b = +b, ia(function (c, d) {
	          var e,
	              f = a([], c.length, b),
	              g = f.length;while (g--) {
	            c[e = f[g]] && (c[e] = !(d[e] = c[e]));
	          }
	        });
	      });
	    }function qa(a) {
	      return a && "undefined" != typeof a.getElementsByTagName && a;
	    }c = ga.support = {}, f = ga.isXML = function (a) {
	      var b = a && (a.ownerDocument || a).documentElement;return !!b && "HTML" !== b.nodeName;
	    }, m = ga.setDocument = function (a) {
	      var b,
	          e,
	          g = a ? a.ownerDocument || a : v;return g !== n && 9 === g.nodeType && g.documentElement ? (n = g, o = n.documentElement, p = !f(n), v !== n && (e = n.defaultView) && e.top !== e && (e.addEventListener ? e.addEventListener("unload", da, !1) : e.attachEvent && e.attachEvent("onunload", da)), c.attributes = ja(function (a) {
	        return a.className = "i", !a.getAttribute("className");
	      }), c.getElementsByTagName = ja(function (a) {
	        return a.appendChild(n.createComment("")), !a.getElementsByTagName("*").length;
	      }), c.getElementsByClassName = Y.test(n.getElementsByClassName), c.getById = ja(function (a) {
	        return o.appendChild(a).id = u, !n.getElementsByName || !n.getElementsByName(u).length;
	      }), c.getById ? (d.filter.ID = function (a) {
	        var b = a.replace(_, aa);return function (a) {
	          return a.getAttribute("id") === b;
	        };
	      }, d.find.ID = function (a, b) {
	        if ("undefined" != typeof b.getElementById && p) {
	          var c = b.getElementById(a);return c ? [c] : [];
	        }
	      }) : (d.filter.ID = function (a) {
	        var b = a.replace(_, aa);return function (a) {
	          var c = "undefined" != typeof a.getAttributeNode && a.getAttributeNode("id");return c && c.value === b;
	        };
	      }, d.find.ID = function (a, b) {
	        if ("undefined" != typeof b.getElementById && p) {
	          var c,
	              d,
	              e,
	              f = b.getElementById(a);if (f) {
	            if (c = f.getAttributeNode("id"), c && c.value === a) return [f];e = b.getElementsByName(a), d = 0;while (f = e[d++]) {
	              if (c = f.getAttributeNode("id"), c && c.value === a) return [f];
	            }
	          }return [];
	        }
	      }), d.find.TAG = c.getElementsByTagName ? function (a, b) {
	        return "undefined" != typeof b.getElementsByTagName ? b.getElementsByTagName(a) : c.qsa ? b.querySelectorAll(a) : void 0;
	      } : function (a, b) {
	        var c,
	            d = [],
	            e = 0,
	            f = b.getElementsByTagName(a);if ("*" === a) {
	          while (c = f[e++]) {
	            1 === c.nodeType && d.push(c);
	          }return d;
	        }return f;
	      }, d.find.CLASS = c.getElementsByClassName && function (a, b) {
	        if ("undefined" != typeof b.getElementsByClassName && p) return b.getElementsByClassName(a);
	      }, r = [], q = [], (c.qsa = Y.test(n.querySelectorAll)) && (ja(function (a) {
	        o.appendChild(a).innerHTML = "<a id='" + u + "'></a><select id='" + u + "-\r\\' msallowcapture=''><option selected=''></option></select>", a.querySelectorAll("[msallowcapture^='']").length && q.push("[*^$]=" + K + "*(?:''|\"\")"), a.querySelectorAll("[selected]").length || q.push("\\[" + K + "*(?:value|" + J + ")"), a.querySelectorAll("[id~=" + u + "-]").length || q.push("~="), a.querySelectorAll(":checked").length || q.push(":checked"), a.querySelectorAll("a#" + u + "+*").length || q.push(".#.+[+~]");
	      }), ja(function (a) {
	        a.innerHTML = "<a href='' disabled='disabled'></a><select disabled='disabled'><option/></select>";var b = n.createElement("input");b.setAttribute("type", "hidden"), a.appendChild(b).setAttribute("name", "D"), a.querySelectorAll("[name=d]").length && q.push("name" + K + "*[*^$|!~]?="), 2 !== a.querySelectorAll(":enabled").length && q.push(":enabled", ":disabled"), o.appendChild(a).disabled = !0, 2 !== a.querySelectorAll(":disabled").length && q.push(":enabled", ":disabled"), a.querySelectorAll("*,:x"), q.push(",.*:");
	      })), (c.matchesSelector = Y.test(s = o.matches || o.webkitMatchesSelector || o.mozMatchesSelector || o.oMatchesSelector || o.msMatchesSelector)) && ja(function (a) {
	        c.disconnectedMatch = s.call(a, "*"), s.call(a, "[s!='']:x"), r.push("!=", N);
	      }), q = q.length && new RegExp(q.join("|")), r = r.length && new RegExp(r.join("|")), b = Y.test(o.compareDocumentPosition), t = b || Y.test(o.contains) ? function (a, b) {
	        var c = 9 === a.nodeType ? a.documentElement : a,
	            d = b && b.parentNode;return a === d || !(!d || 1 !== d.nodeType || !(c.contains ? c.contains(d) : a.compareDocumentPosition && 16 & a.compareDocumentPosition(d)));
	      } : function (a, b) {
	        if (b) while (b = b.parentNode) {
	          if (b === a) return !0;
	        }return !1;
	      }, B = b ? function (a, b) {
	        if (a === b) return l = !0, 0;var d = !a.compareDocumentPosition - !b.compareDocumentPosition;return d ? d : (d = (a.ownerDocument || a) === (b.ownerDocument || b) ? a.compareDocumentPosition(b) : 1, 1 & d || !c.sortDetached && b.compareDocumentPosition(a) === d ? a === n || a.ownerDocument === v && t(v, a) ? -1 : b === n || b.ownerDocument === v && t(v, b) ? 1 : k ? I(k, a) - I(k, b) : 0 : 4 & d ? -1 : 1);
	      } : function (a, b) {
	        if (a === b) return l = !0, 0;var c,
	            d = 0,
	            e = a.parentNode,
	            f = b.parentNode,
	            g = [a],
	            h = [b];if (!e || !f) return a === n ? -1 : b === n ? 1 : e ? -1 : f ? 1 : k ? I(k, a) - I(k, b) : 0;if (e === f) return la(a, b);c = a;while (c = c.parentNode) {
	          g.unshift(c);
	        }c = b;while (c = c.parentNode) {
	          h.unshift(c);
	        }while (g[d] === h[d]) {
	          d++;
	        }return d ? la(g[d], h[d]) : g[d] === v ? -1 : h[d] === v ? 1 : 0;
	      }, n) : n;
	    }, ga.matches = function (a, b) {
	      return ga(a, null, null, b);
	    }, ga.matchesSelector = function (a, b) {
	      if ((a.ownerDocument || a) !== n && m(a), b = b.replace(S, "='$1']"), c.matchesSelector && p && !A[b + " "] && (!r || !r.test(b)) && (!q || !q.test(b))) try {
	        var d = s.call(a, b);if (d || c.disconnectedMatch || a.document && 11 !== a.document.nodeType) return d;
	      } catch (e) {}return ga(b, n, null, [a]).length > 0;
	    }, ga.contains = function (a, b) {
	      return (a.ownerDocument || a) !== n && m(a), t(a, b);
	    }, ga.attr = function (a, b) {
	      (a.ownerDocument || a) !== n && m(a);var e = d.attrHandle[b.toLowerCase()],
	          f = e && C.call(d.attrHandle, b.toLowerCase()) ? e(a, b, !p) : void 0;return void 0 !== f ? f : c.attributes || !p ? a.getAttribute(b) : (f = a.getAttributeNode(b)) && f.specified ? f.value : null;
	    }, ga.escape = function (a) {
	      return (a + "").replace(ba, ca);
	    }, ga.error = function (a) {
	      throw new Error("Syntax error, unrecognized expression: " + a);
	    }, ga.uniqueSort = function (a) {
	      var b,
	          d = [],
	          e = 0,
	          f = 0;if (l = !c.detectDuplicates, k = !c.sortStable && a.slice(0), a.sort(B), l) {
	        while (b = a[f++]) {
	          b === a[f] && (e = d.push(f));
	        }while (e--) {
	          a.splice(d[e], 1);
	        }
	      }return k = null, a;
	    }, e = ga.getText = function (a) {
	      var b,
	          c = "",
	          d = 0,
	          f = a.nodeType;if (f) {
	        if (1 === f || 9 === f || 11 === f) {
	          if ("string" == typeof a.textContent) return a.textContent;for (a = a.firstChild; a; a = a.nextSibling) {
	            c += e(a);
	          }
	        } else if (3 === f || 4 === f) return a.nodeValue;
	      } else while (b = a[d++]) {
	        c += e(b);
	      }return c;
	    }, d = ga.selectors = { cacheLength: 50, createPseudo: ia, match: V, attrHandle: {}, find: {}, relative: { ">": { dir: "parentNode", first: !0 }, " ": { dir: "parentNode" }, "+": { dir: "previousSibling", first: !0 }, "~": { dir: "previousSibling" } }, preFilter: { ATTR: function ATTR(a) {
	          return a[1] = a[1].replace(_, aa), a[3] = (a[3] || a[4] || a[5] || "").replace(_, aa), "~=" === a[2] && (a[3] = " " + a[3] + " "), a.slice(0, 4);
	        }, CHILD: function CHILD(a) {
	          return a[1] = a[1].toLowerCase(), "nth" === a[1].slice(0, 3) ? (a[3] || ga.error(a[0]), a[4] = +(a[4] ? a[5] + (a[6] || 1) : 2 * ("even" === a[3] || "odd" === a[3])), a[5] = +(a[7] + a[8] || "odd" === a[3])) : a[3] && ga.error(a[0]), a;
	        }, PSEUDO: function PSEUDO(a) {
	          var b,
	              c = !a[6] && a[2];return V.CHILD.test(a[0]) ? null : (a[3] ? a[2] = a[4] || a[5] || "" : c && T.test(c) && (b = g(c, !0)) && (b = c.indexOf(")", c.length - b) - c.length) && (a[0] = a[0].slice(0, b), a[2] = c.slice(0, b)), a.slice(0, 3));
	        } }, filter: { TAG: function TAG(a) {
	          var b = a.replace(_, aa).toLowerCase();return "*" === a ? function () {
	            return !0;
	          } : function (a) {
	            return a.nodeName && a.nodeName.toLowerCase() === b;
	          };
	        }, CLASS: function CLASS(a) {
	          var b = y[a + " "];return b || (b = new RegExp("(^|" + K + ")" + a + "(" + K + "|$)")) && y(a, function (a) {
	            return b.test("string" == typeof a.className && a.className || "undefined" != typeof a.getAttribute && a.getAttribute("class") || "");
	          });
	        }, ATTR: function ATTR(a, b, c) {
	          return function (d) {
	            var e = ga.attr(d, a);return null == e ? "!=" === b : !b || (e += "", "=" === b ? e === c : "!=" === b ? e !== c : "^=" === b ? c && 0 === e.indexOf(c) : "*=" === b ? c && e.indexOf(c) > -1 : "$=" === b ? c && e.slice(-c.length) === c : "~=" === b ? (" " + e.replace(O, " ") + " ").indexOf(c) > -1 : "|=" === b && (e === c || e.slice(0, c.length + 1) === c + "-"));
	          };
	        }, CHILD: function CHILD(a, b, c, d, e) {
	          var f = "nth" !== a.slice(0, 3),
	              g = "last" !== a.slice(-4),
	              h = "of-type" === b;return 1 === d && 0 === e ? function (a) {
	            return !!a.parentNode;
	          } : function (b, c, i) {
	            var j,
	                k,
	                l,
	                m,
	                n,
	                o,
	                p = f !== g ? "nextSibling" : "previousSibling",
	                q = b.parentNode,
	                r = h && b.nodeName.toLowerCase(),
	                s = !i && !h,
	                t = !1;if (q) {
	              if (f) {
	                while (p) {
	                  m = b;while (m = m[p]) {
	                    if (h ? m.nodeName.toLowerCase() === r : 1 === m.nodeType) return !1;
	                  }o = p = "only" === a && !o && "nextSibling";
	                }return !0;
	              }if (o = [g ? q.firstChild : q.lastChild], g && s) {
	                m = q, l = m[u] || (m[u] = {}), k = l[m.uniqueID] || (l[m.uniqueID] = {}), j = k[a] || [], n = j[0] === w && j[1], t = n && j[2], m = n && q.childNodes[n];while (m = ++n && m && m[p] || (t = n = 0) || o.pop()) {
	                  if (1 === m.nodeType && ++t && m === b) {
	                    k[a] = [w, n, t];break;
	                  }
	                }
	              } else if (s && (m = b, l = m[u] || (m[u] = {}), k = l[m.uniqueID] || (l[m.uniqueID] = {}), j = k[a] || [], n = j[0] === w && j[1], t = n), t === !1) while (m = ++n && m && m[p] || (t = n = 0) || o.pop()) {
	                if ((h ? m.nodeName.toLowerCase() === r : 1 === m.nodeType) && ++t && (s && (l = m[u] || (m[u] = {}), k = l[m.uniqueID] || (l[m.uniqueID] = {}), k[a] = [w, t]), m === b)) break;
	              }return t -= e, t === d || t % d === 0 && t / d >= 0;
	            }
	          };
	        }, PSEUDO: function PSEUDO(a, b) {
	          var c,
	              e = d.pseudos[a] || d.setFilters[a.toLowerCase()] || ga.error("unsupported pseudo: " + a);return e[u] ? e(b) : e.length > 1 ? (c = [a, a, "", b], d.setFilters.hasOwnProperty(a.toLowerCase()) ? ia(function (a, c) {
	            var d,
	                f = e(a, b),
	                g = f.length;while (g--) {
	              d = I(a, f[g]), a[d] = !(c[d] = f[g]);
	            }
	          }) : function (a) {
	            return e(a, 0, c);
	          }) : e;
	        } }, pseudos: { not: ia(function (a) {
	          var b = [],
	              c = [],
	              d = h(a.replace(P, "$1"));return d[u] ? ia(function (a, b, c, e) {
	            var f,
	                g = d(a, null, e, []),
	                h = a.length;while (h--) {
	              (f = g[h]) && (a[h] = !(b[h] = f));
	            }
	          }) : function (a, e, f) {
	            return b[0] = a, d(b, null, f, c), b[0] = null, !c.pop();
	          };
	        }), has: ia(function (a) {
	          return function (b) {
	            return ga(a, b).length > 0;
	          };
	        }), contains: ia(function (a) {
	          return a = a.replace(_, aa), function (b) {
	            return (b.textContent || b.innerText || e(b)).indexOf(a) > -1;
	          };
	        }), lang: ia(function (a) {
	          return U.test(a || "") || ga.error("unsupported lang: " + a), a = a.replace(_, aa).toLowerCase(), function (b) {
	            var c;do {
	              if (c = p ? b.lang : b.getAttribute("xml:lang") || b.getAttribute("lang")) return c = c.toLowerCase(), c === a || 0 === c.indexOf(a + "-");
	            } while ((b = b.parentNode) && 1 === b.nodeType);return !1;
	          };
	        }), target: function target(b) {
	          var c = a.location && a.location.hash;return c && c.slice(1) === b.id;
	        }, root: function root(a) {
	          return a === o;
	        }, focus: function focus(a) {
	          return a === n.activeElement && (!n.hasFocus || n.hasFocus()) && !!(a.type || a.href || ~a.tabIndex);
	        }, enabled: oa(!1), disabled: oa(!0), checked: function checked(a) {
	          var b = a.nodeName.toLowerCase();return "input" === b && !!a.checked || "option" === b && !!a.selected;
	        }, selected: function selected(a) {
	          return a.parentNode && a.parentNode.selectedIndex, a.selected === !0;
	        }, empty: function empty(a) {
	          for (a = a.firstChild; a; a = a.nextSibling) {
	            if (a.nodeType < 6) return !1;
	          }return !0;
	        }, parent: function parent(a) {
	          return !d.pseudos.empty(a);
	        }, header: function header(a) {
	          return X.test(a.nodeName);
	        }, input: function input(a) {
	          return W.test(a.nodeName);
	        }, button: function button(a) {
	          var b = a.nodeName.toLowerCase();return "input" === b && "button" === a.type || "button" === b;
	        }, text: function text(a) {
	          var b;return "input" === a.nodeName.toLowerCase() && "text" === a.type && (null == (b = a.getAttribute("type")) || "text" === b.toLowerCase());
	        }, first: pa(function () {
	          return [0];
	        }), last: pa(function (a, b) {
	          return [b - 1];
	        }), eq: pa(function (a, b, c) {
	          return [c < 0 ? c + b : c];
	        }), even: pa(function (a, b) {
	          for (var c = 0; c < b; c += 2) {
	            a.push(c);
	          }return a;
	        }), odd: pa(function (a, b) {
	          for (var c = 1; c < b; c += 2) {
	            a.push(c);
	          }return a;
	        }), lt: pa(function (a, b, c) {
	          for (var d = c < 0 ? c + b : c; --d >= 0;) {
	            a.push(d);
	          }return a;
	        }), gt: pa(function (a, b, c) {
	          for (var d = c < 0 ? c + b : c; ++d < b;) {
	            a.push(d);
	          }return a;
	        }) } }, d.pseudos.nth = d.pseudos.eq;for (b in { radio: !0, checkbox: !0, file: !0, password: !0, image: !0 }) {
	      d.pseudos[b] = ma(b);
	    }for (b in { submit: !0, reset: !0 }) {
	      d.pseudos[b] = na(b);
	    }function ra() {}ra.prototype = d.filters = d.pseudos, d.setFilters = new ra(), g = ga.tokenize = function (a, b) {
	      var c,
	          e,
	          f,
	          g,
	          h,
	          i,
	          j,
	          k = z[a + " "];if (k) return b ? 0 : k.slice(0);h = a, i = [], j = d.preFilter;while (h) {
	        c && !(e = Q.exec(h)) || (e && (h = h.slice(e[0].length) || h), i.push(f = [])), c = !1, (e = R.exec(h)) && (c = e.shift(), f.push({ value: c, type: e[0].replace(P, " ") }), h = h.slice(c.length));for (g in d.filter) {
	          !(e = V[g].exec(h)) || j[g] && !(e = j[g](e)) || (c = e.shift(), f.push({ value: c, type: g, matches: e }), h = h.slice(c.length));
	        }if (!c) break;
	      }return b ? h.length : h ? ga.error(a) : z(a, i).slice(0);
	    };function sa(a) {
	      for (var b = 0, c = a.length, d = ""; b < c; b++) {
	        d += a[b].value;
	      }return d;
	    }function ta(a, b, c) {
	      var d = b.dir,
	          e = b.next,
	          f = e || d,
	          g = c && "parentNode" === f,
	          h = x++;return b.first ? function (b, c, e) {
	        while (b = b[d]) {
	          if (1 === b.nodeType || g) return a(b, c, e);
	        }return !1;
	      } : function (b, c, i) {
	        var j,
	            k,
	            l,
	            m = [w, h];if (i) {
	          while (b = b[d]) {
	            if ((1 === b.nodeType || g) && a(b, c, i)) return !0;
	          }
	        } else while (b = b[d]) {
	          if (1 === b.nodeType || g) if (l = b[u] || (b[u] = {}), k = l[b.uniqueID] || (l[b.uniqueID] = {}), e && e === b.nodeName.toLowerCase()) b = b[d] || b;else {
	            if ((j = k[f]) && j[0] === w && j[1] === h) return m[2] = j[2];if (k[f] = m, m[2] = a(b, c, i)) return !0;
	          }
	        }return !1;
	      };
	    }function ua(a) {
	      return a.length > 1 ? function (b, c, d) {
	        var e = a.length;while (e--) {
	          if (!a[e](b, c, d)) return !1;
	        }return !0;
	      } : a[0];
	    }function va(a, b, c) {
	      for (var d = 0, e = b.length; d < e; d++) {
	        ga(a, b[d], c);
	      }return c;
	    }function wa(a, b, c, d, e) {
	      for (var f, g = [], h = 0, i = a.length, j = null != b; h < i; h++) {
	        (f = a[h]) && (c && !c(f, d, e) || (g.push(f), j && b.push(h)));
	      }return g;
	    }function xa(a, b, c, d, e, f) {
	      return d && !d[u] && (d = xa(d)), e && !e[u] && (e = xa(e, f)), ia(function (f, g, h, i) {
	        var j,
	            k,
	            l,
	            m = [],
	            n = [],
	            o = g.length,
	            p = f || va(b || "*", h.nodeType ? [h] : h, []),
	            q = !a || !f && b ? p : wa(p, m, a, h, i),
	            r = c ? e || (f ? a : o || d) ? [] : g : q;if (c && c(q, r, h, i), d) {
	          j = wa(r, n), d(j, [], h, i), k = j.length;while (k--) {
	            (l = j[k]) && (r[n[k]] = !(q[n[k]] = l));
	          }
	        }if (f) {
	          if (e || a) {
	            if (e) {
	              j = [], k = r.length;while (k--) {
	                (l = r[k]) && j.push(q[k] = l);
	              }e(null, r = [], j, i);
	            }k = r.length;while (k--) {
	              (l = r[k]) && (j = e ? I(f, l) : m[k]) > -1 && (f[j] = !(g[j] = l));
	            }
	          }
	        } else r = wa(r === g ? r.splice(o, r.length) : r), e ? e(null, g, r, i) : G.apply(g, r);
	      });
	    }function ya(a) {
	      for (var b, c, e, f = a.length, g = d.relative[a[0].type], h = g || d.relative[" "], i = g ? 1 : 0, k = ta(function (a) {
	        return a === b;
	      }, h, !0), l = ta(function (a) {
	        return I(b, a) > -1;
	      }, h, !0), m = [function (a, c, d) {
	        var e = !g && (d || c !== j) || ((b = c).nodeType ? k(a, c, d) : l(a, c, d));return b = null, e;
	      }]; i < f; i++) {
	        if (c = d.relative[a[i].type]) m = [ta(ua(m), c)];else {
	          if (c = d.filter[a[i].type].apply(null, a[i].matches), c[u]) {
	            for (e = ++i; e < f; e++) {
	              if (d.relative[a[e].type]) break;
	            }return xa(i > 1 && ua(m), i > 1 && sa(a.slice(0, i - 1).concat({ value: " " === a[i - 2].type ? "*" : "" })).replace(P, "$1"), c, i < e && ya(a.slice(i, e)), e < f && ya(a = a.slice(e)), e < f && sa(a));
	          }m.push(c);
	        }
	      }return ua(m);
	    }function za(a, b) {
	      var c = b.length > 0,
	          e = a.length > 0,
	          f = function f(_f, g, h, i, k) {
	        var l,
	            o,
	            q,
	            r = 0,
	            s = "0",
	            t = _f && [],
	            u = [],
	            v = j,
	            x = _f || e && d.find.TAG("*", k),
	            y = w += null == v ? 1 : Math.random() || .1,
	            z = x.length;for (k && (j = g === n || g || k); s !== z && null != (l = x[s]); s++) {
	          if (e && l) {
	            o = 0, g || l.ownerDocument === n || (m(l), h = !p);while (q = a[o++]) {
	              if (q(l, g || n, h)) {
	                i.push(l);break;
	              }
	            }k && (w = y);
	          }c && ((l = !q && l) && r--, _f && t.push(l));
	        }if (r += s, c && s !== r) {
	          o = 0;while (q = b[o++]) {
	            q(t, u, g, h);
	          }if (_f) {
	            if (r > 0) while (s--) {
	              t[s] || u[s] || (u[s] = E.call(i));
	            }u = wa(u);
	          }G.apply(i, u), k && !_f && u.length > 0 && r + b.length > 1 && ga.uniqueSort(i);
	        }return k && (w = y, j = v), t;
	      };return c ? ia(f) : f;
	    }return h = ga.compile = function (a, b) {
	      var c,
	          d = [],
	          e = [],
	          f = A[a + " "];if (!f) {
	        b || (b = g(a)), c = b.length;while (c--) {
	          f = ya(b[c]), f[u] ? d.push(f) : e.push(f);
	        }f = A(a, za(e, d)), f.selector = a;
	      }return f;
	    }, i = ga.select = function (a, b, c, e) {
	      var f,
	          i,
	          j,
	          k,
	          l,
	          m = "function" == typeof a && a,
	          n = !e && g(a = m.selector || a);if (c = c || [], 1 === n.length) {
	        if (i = n[0] = n[0].slice(0), i.length > 2 && "ID" === (j = i[0]).type && 9 === b.nodeType && p && d.relative[i[1].type]) {
	          if (b = (d.find.ID(j.matches[0].replace(_, aa), b) || [])[0], !b) return c;m && (b = b.parentNode), a = a.slice(i.shift().value.length);
	        }f = V.needsContext.test(a) ? 0 : i.length;while (f--) {
	          if (j = i[f], d.relative[k = j.type]) break;if ((l = d.find[k]) && (e = l(j.matches[0].replace(_, aa), $.test(i[0].type) && qa(b.parentNode) || b))) {
	            if (i.splice(f, 1), a = e.length && sa(i), !a) return G.apply(c, e), c;break;
	          }
	        }
	      }return (m || h(a, n))(e, b, !p, c, !b || $.test(a) && qa(b.parentNode) || b), c;
	    }, c.sortStable = u.split("").sort(B).join("") === u, c.detectDuplicates = !!l, m(), c.sortDetached = ja(function (a) {
	      return 1 & a.compareDocumentPosition(n.createElement("fieldset"));
	    }), ja(function (a) {
	      return a.innerHTML = "<a href='#'></a>", "#" === a.firstChild.getAttribute("href");
	    }) || ka("type|href|height|width", function (a, b, c) {
	      if (!c) return a.getAttribute(b, "type" === b.toLowerCase() ? 1 : 2);
	    }), c.attributes && ja(function (a) {
	      return a.innerHTML = "<input/>", a.firstChild.setAttribute("value", ""), "" === a.firstChild.getAttribute("value");
	    }) || ka("value", function (a, b, c) {
	      if (!c && "input" === a.nodeName.toLowerCase()) return a.defaultValue;
	    }), ja(function (a) {
	      return null == a.getAttribute("disabled");
	    }) || ka(J, function (a, b, c) {
	      var d;if (!c) return a[b] === !0 ? b.toLowerCase() : (d = a.getAttributeNode(b)) && d.specified ? d.value : null;
	    }), ga;
	  }(a);r.find = x, r.expr = x.selectors, r.expr[":"] = r.expr.pseudos, r.uniqueSort = r.unique = x.uniqueSort, r.text = x.getText, r.isXMLDoc = x.isXML, r.contains = x.contains, r.escapeSelector = x.escape;var y = function y(a, b, c) {
	    var d = [],
	        e = void 0 !== c;while ((a = a[b]) && 9 !== a.nodeType) {
	      if (1 === a.nodeType) {
	        if (e && r(a).is(c)) break;d.push(a);
	      }
	    }return d;
	  },
	      z = function z(a, b) {
	    for (var c = []; a; a = a.nextSibling) {
	      1 === a.nodeType && a !== b && c.push(a);
	    }return c;
	  },
	      A = r.expr.match.needsContext,
	      B = /^<([a-z][^\/\0>:\x20\t\r\n\f]*)[\x20\t\r\n\f]*\/?>(?:<\/\1>|)$/i,
	      C = /^.[^:#\[\.,]*$/;function D(a, b, c) {
	    return r.isFunction(b) ? r.grep(a, function (a, d) {
	      return !!b.call(a, d, a) !== c;
	    }) : b.nodeType ? r.grep(a, function (a) {
	      return a === b !== c;
	    }) : "string" != typeof b ? r.grep(a, function (a) {
	      return i.call(b, a) > -1 !== c;
	    }) : C.test(b) ? r.filter(b, a, c) : (b = r.filter(b, a), r.grep(a, function (a) {
	      return i.call(b, a) > -1 !== c && 1 === a.nodeType;
	    }));
	  }r.filter = function (a, b, c) {
	    var d = b[0];return c && (a = ":not(" + a + ")"), 1 === b.length && 1 === d.nodeType ? r.find.matchesSelector(d, a) ? [d] : [] : r.find.matches(a, r.grep(b, function (a) {
	      return 1 === a.nodeType;
	    }));
	  }, r.fn.extend({ find: function find(a) {
	      var b,
	          c,
	          d = this.length,
	          e = this;if ("string" != typeof a) return this.pushStack(r(a).filter(function () {
	        for (b = 0; b < d; b++) {
	          if (r.contains(e[b], this)) return !0;
	        }
	      }));for (c = this.pushStack([]), b = 0; b < d; b++) {
	        r.find(a, e[b], c);
	      }return d > 1 ? r.uniqueSort(c) : c;
	    }, filter: function filter(a) {
	      return this.pushStack(D(this, a || [], !1));
	    }, not: function not(a) {
	      return this.pushStack(D(this, a || [], !0));
	    }, is: function is(a) {
	      return !!D(this, "string" == typeof a && A.test(a) ? r(a) : a || [], !1).length;
	    } });var E,
	      F = /^(?:\s*(<[\w\W]+>)[^>]*|#([\w-]+))$/,
	      G = r.fn.init = function (a, b, c) {
	    var e, f;if (!a) return this;if (c = c || E, "string" == typeof a) {
	      if (e = "<" === a[0] && ">" === a[a.length - 1] && a.length >= 3 ? [null, a, null] : F.exec(a), !e || !e[1] && b) return !b || b.jquery ? (b || c).find(a) : this.constructor(b).find(a);if (e[1]) {
	        if (b = b instanceof r ? b[0] : b, r.merge(this, r.parseHTML(e[1], b && b.nodeType ? b.ownerDocument || b : d, !0)), B.test(e[1]) && r.isPlainObject(b)) for (e in b) {
	          r.isFunction(this[e]) ? this[e](b[e]) : this.attr(e, b[e]);
	        }return this;
	      }return f = d.getElementById(e[2]), f && (this[0] = f, this.length = 1), this;
	    }return a.nodeType ? (this[0] = a, this.length = 1, this) : r.isFunction(a) ? void 0 !== c.ready ? c.ready(a) : a(r) : r.makeArray(a, this);
	  };G.prototype = r.fn, E = r(d);var H = /^(?:parents|prev(?:Until|All))/,
	      I = { children: !0, contents: !0, next: !0, prev: !0 };r.fn.extend({ has: function has(a) {
	      var b = r(a, this),
	          c = b.length;return this.filter(function () {
	        for (var a = 0; a < c; a++) {
	          if (r.contains(this, b[a])) return !0;
	        }
	      });
	    }, closest: function closest(a, b) {
	      var c,
	          d = 0,
	          e = this.length,
	          f = [],
	          g = "string" != typeof a && r(a);if (!A.test(a)) for (; d < e; d++) {
	        for (c = this[d]; c && c !== b; c = c.parentNode) {
	          if (c.nodeType < 11 && (g ? g.index(c) > -1 : 1 === c.nodeType && r.find.matchesSelector(c, a))) {
	            f.push(c);break;
	          }
	        }
	      }return this.pushStack(f.length > 1 ? r.uniqueSort(f) : f);
	    }, index: function index(a) {
	      return a ? "string" == typeof a ? i.call(r(a), this[0]) : i.call(this, a.jquery ? a[0] : a) : this[0] && this[0].parentNode ? this.first().prevAll().length : -1;
	    }, add: function add(a, b) {
	      return this.pushStack(r.uniqueSort(r.merge(this.get(), r(a, b))));
	    }, addBack: function addBack(a) {
	      return this.add(null == a ? this.prevObject : this.prevObject.filter(a));
	    } });function J(a, b) {
	    while ((a = a[b]) && 1 !== a.nodeType) {}return a;
	  }r.each({ parent: function parent(a) {
	      var b = a.parentNode;return b && 11 !== b.nodeType ? b : null;
	    }, parents: function parents(a) {
	      return y(a, "parentNode");
	    }, parentsUntil: function parentsUntil(a, b, c) {
	      return y(a, "parentNode", c);
	    }, next: function next(a) {
	      return J(a, "nextSibling");
	    }, prev: function prev(a) {
	      return J(a, "previousSibling");
	    }, nextAll: function nextAll(a) {
	      return y(a, "nextSibling");
	    }, prevAll: function prevAll(a) {
	      return y(a, "previousSibling");
	    }, nextUntil: function nextUntil(a, b, c) {
	      return y(a, "nextSibling", c);
	    }, prevUntil: function prevUntil(a, b, c) {
	      return y(a, "previousSibling", c);
	    }, siblings: function siblings(a) {
	      return z((a.parentNode || {}).firstChild, a);
	    }, children: function children(a) {
	      return z(a.firstChild);
	    }, contents: function contents(a) {
	      return a.contentDocument || r.merge([], a.childNodes);
	    } }, function (a, b) {
	    r.fn[a] = function (c, d) {
	      var e = r.map(this, b, c);return "Until" !== a.slice(-5) && (d = c), d && "string" == typeof d && (e = r.filter(d, e)), this.length > 1 && (I[a] || r.uniqueSort(e), H.test(a) && e.reverse()), this.pushStack(e);
	    };
	  });var K = /[^\x20\t\r\n\f]+/g;function L(a) {
	    var b = {};return r.each(a.match(K) || [], function (a, c) {
	      b[c] = !0;
	    }), b;
	  }r.Callbacks = function (a) {
	    a = "string" == typeof a ? L(a) : r.extend({}, a);var b,
	        c,
	        d,
	        e,
	        f = [],
	        g = [],
	        h = -1,
	        i = function i() {
	      for (e = a.once, d = b = !0; g.length; h = -1) {
	        c = g.shift();while (++h < f.length) {
	          f[h].apply(c[0], c[1]) === !1 && a.stopOnFalse && (h = f.length, c = !1);
	        }
	      }a.memory || (c = !1), b = !1, e && (f = c ? [] : "");
	    },
	        j = { add: function add() {
	        return f && (c && !b && (h = f.length - 1, g.push(c)), function d(b) {
	          r.each(b, function (b, c) {
	            r.isFunction(c) ? a.unique && j.has(c) || f.push(c) : c && c.length && "string" !== r.type(c) && d(c);
	          });
	        }(arguments), c && !b && i()), this;
	      }, remove: function remove() {
	        return r.each(arguments, function (a, b) {
	          var c;while ((c = r.inArray(b, f, c)) > -1) {
	            f.splice(c, 1), c <= h && h--;
	          }
	        }), this;
	      }, has: function has(a) {
	        return a ? r.inArray(a, f) > -1 : f.length > 0;
	      }, empty: function empty() {
	        return f && (f = []), this;
	      }, disable: function disable() {
	        return e = g = [], f = c = "", this;
	      }, disabled: function disabled() {
	        return !f;
	      }, lock: function lock() {
	        return e = g = [], c || b || (f = c = ""), this;
	      }, locked: function locked() {
	        return !!e;
	      }, fireWith: function fireWith(a, c) {
	        return e || (c = c || [], c = [a, c.slice ? c.slice() : c], g.push(c), b || i()), this;
	      }, fire: function fire() {
	        return j.fireWith(this, arguments), this;
	      }, fired: function fired() {
	        return !!d;
	      } };return j;
	  };function M(a) {
	    return a;
	  }function N(a) {
	    throw a;
	  }function O(a, b, c) {
	    var d;try {
	      a && r.isFunction(d = a.promise) ? d.call(a).done(b).fail(c) : a && r.isFunction(d = a.then) ? d.call(a, b, c) : b.call(void 0, a);
	    } catch (a) {
	      c.call(void 0, a);
	    }
	  }r.extend({ Deferred: function Deferred(b) {
	      var c = [["notify", "progress", r.Callbacks("memory"), r.Callbacks("memory"), 2], ["resolve", "done", r.Callbacks("once memory"), r.Callbacks("once memory"), 0, "resolved"], ["reject", "fail", r.Callbacks("once memory"), r.Callbacks("once memory"), 1, "rejected"]],
	          d = "pending",
	          e = { state: function state() {
	          return d;
	        }, always: function always() {
	          return f.done(arguments).fail(arguments), this;
	        }, "catch": function _catch(a) {
	          return e.then(null, a);
	        }, pipe: function pipe() {
	          var a = arguments;return r.Deferred(function (b) {
	            r.each(c, function (c, d) {
	              var e = r.isFunction(a[d[4]]) && a[d[4]];f[d[1]](function () {
	                var a = e && e.apply(this, arguments);a && r.isFunction(a.promise) ? a.promise().progress(b.notify).done(b.resolve).fail(b.reject) : b[d[0] + "With"](this, e ? [a] : arguments);
	              });
	            }), a = null;
	          }).promise();
	        }, then: function then(b, d, e) {
	          var f = 0;function g(b, c, d, e) {
	            return function () {
	              var h = this,
	                  i = arguments,
	                  j = function j() {
	                var a, j;if (!(b < f)) {
	                  if (a = d.apply(h, i), a === c.promise()) throw new TypeError("Thenable self-resolution");j = a && ("object" == (typeof a === "undefined" ? "undefined" : _typeof(a)) || "function" == typeof a) && a.then, r.isFunction(j) ? e ? j.call(a, g(f, c, M, e), g(f, c, N, e)) : (f++, j.call(a, g(f, c, M, e), g(f, c, N, e), g(f, c, M, c.notifyWith))) : (d !== M && (h = void 0, i = [a]), (e || c.resolveWith)(h, i));
	                }
	              },
	                  k = e ? j : function () {
	                try {
	                  j();
	                } catch (a) {
	                  r.Deferred.exceptionHook && r.Deferred.exceptionHook(a, k.stackTrace), b + 1 >= f && (d !== N && (h = void 0, i = [a]), c.rejectWith(h, i));
	                }
	              };b ? k() : (r.Deferred.getStackHook && (k.stackTrace = r.Deferred.getStackHook()), a.setTimeout(k));
	            };
	          }return r.Deferred(function (a) {
	            c[0][3].add(g(0, a, r.isFunction(e) ? e : M, a.notifyWith)), c[1][3].add(g(0, a, r.isFunction(b) ? b : M)), c[2][3].add(g(0, a, r.isFunction(d) ? d : N));
	          }).promise();
	        }, promise: function promise(a) {
	          return null != a ? r.extend(a, e) : e;
	        } },
	          f = {};return r.each(c, function (a, b) {
	        var g = b[2],
	            h = b[5];e[b[1]] = g.add, h && g.add(function () {
	          d = h;
	        }, c[3 - a][2].disable, c[0][2].lock), g.add(b[3].fire), f[b[0]] = function () {
	          return f[b[0] + "With"](this === f ? void 0 : this, arguments), this;
	        }, f[b[0] + "With"] = g.fireWith;
	      }), e.promise(f), b && b.call(f, f), f;
	    }, when: function when(a) {
	      var b = arguments.length,
	          c = b,
	          d = Array(c),
	          e = f.call(arguments),
	          g = r.Deferred(),
	          h = function h(a) {
	        return function (c) {
	          d[a] = this, e[a] = arguments.length > 1 ? f.call(arguments) : c, --b || g.resolveWith(d, e);
	        };
	      };if (b <= 1 && (O(a, g.done(h(c)).resolve, g.reject), "pending" === g.state() || r.isFunction(e[c] && e[c].then))) return g.then();while (c--) {
	        O(e[c], h(c), g.reject);
	      }return g.promise();
	    } });var P = /^(Eval|Internal|Range|Reference|Syntax|Type|URI)Error$/;r.Deferred.exceptionHook = function (b, c) {
	    a.console && a.console.warn && b && P.test(b.name) && a.console.warn("jQuery.Deferred exception: " + b.message, b.stack, c);
	  }, r.readyException = function (b) {
	    a.setTimeout(function () {
	      throw b;
	    });
	  };var Q = r.Deferred();r.fn.ready = function (a) {
	    return Q.then(a)["catch"](function (a) {
	      r.readyException(a);
	    }), this;
	  }, r.extend({ isReady: !1, readyWait: 1, holdReady: function holdReady(a) {
	      a ? r.readyWait++ : r.ready(!0);
	    }, ready: function ready(a) {
	      (a === !0 ? --r.readyWait : r.isReady) || (r.isReady = !0, a !== !0 && --r.readyWait > 0 || Q.resolveWith(d, [r]));
	    } }), r.ready.then = Q.then;function R() {
	    d.removeEventListener("DOMContentLoaded", R), a.removeEventListener("load", R), r.ready();
	  }"complete" === d.readyState || "loading" !== d.readyState && !d.documentElement.doScroll ? a.setTimeout(r.ready) : (d.addEventListener("DOMContentLoaded", R), a.addEventListener("load", R));var S = function S(a, b, c, d, e, f, g) {
	    var h = 0,
	        i = a.length,
	        j = null == c;if ("object" === r.type(c)) {
	      e = !0;for (h in c) {
	        S(a, b, h, c[h], !0, f, g);
	      }
	    } else if (void 0 !== d && (e = !0, r.isFunction(d) || (g = !0), j && (g ? (b.call(a, d), b = null) : (j = b, b = function b(a, _b, c) {
	      return j.call(r(a), c);
	    })), b)) for (; h < i; h++) {
	      b(a[h], c, g ? d : d.call(a[h], h, b(a[h], c)));
	    }return e ? a : j ? b.call(a) : i ? b(a[0], c) : f;
	  },
	      T = function T(a) {
	    return 1 === a.nodeType || 9 === a.nodeType || !+a.nodeType;
	  };function U() {
	    this.expando = r.expando + U.uid++;
	  }U.uid = 1, U.prototype = { cache: function cache(a) {
	      var b = a[this.expando];return b || (b = {}, T(a) && (a.nodeType ? a[this.expando] = b : Object.defineProperty(a, this.expando, { value: b, configurable: !0 }))), b;
	    }, set: function set(a, b, c) {
	      var d,
	          e = this.cache(a);if ("string" == typeof b) e[r.camelCase(b)] = c;else for (d in b) {
	        e[r.camelCase(d)] = b[d];
	      }return e;
	    }, get: function get(a, b) {
	      return void 0 === b ? this.cache(a) : a[this.expando] && a[this.expando][r.camelCase(b)];
	    }, access: function access(a, b, c) {
	      return void 0 === b || b && "string" == typeof b && void 0 === c ? this.get(a, b) : (this.set(a, b, c), void 0 !== c ? c : b);
	    }, remove: function remove(a, b) {
	      var c,
	          d = a[this.expando];if (void 0 !== d) {
	        if (void 0 !== b) {
	          r.isArray(b) ? b = b.map(r.camelCase) : (b = r.camelCase(b), b = b in d ? [b] : b.match(K) || []), c = b.length;while (c--) {
	            delete d[b[c]];
	          }
	        }(void 0 === b || r.isEmptyObject(d)) && (a.nodeType ? a[this.expando] = void 0 : delete a[this.expando]);
	      }
	    }, hasData: function hasData(a) {
	      var b = a[this.expando];return void 0 !== b && !r.isEmptyObject(b);
	    } };var V = new U(),
	      W = new U(),
	      X = /^(?:\{[\w\W]*\}|\[[\w\W]*\])$/,
	      Y = /[A-Z]/g;function Z(a) {
	    return "true" === a || "false" !== a && ("null" === a ? null : a === +a + "" ? +a : X.test(a) ? JSON.parse(a) : a);
	  }function $(a, b, c) {
	    var d;if (void 0 === c && 1 === a.nodeType) if (d = "data-" + b.replace(Y, "-$&").toLowerCase(), c = a.getAttribute(d), "string" == typeof c) {
	      try {
	        c = Z(c);
	      } catch (e) {}W.set(a, b, c);
	    } else c = void 0;return c;
	  }r.extend({ hasData: function hasData(a) {
	      return W.hasData(a) || V.hasData(a);
	    }, data: function data(a, b, c) {
	      return W.access(a, b, c);
	    }, removeData: function removeData(a, b) {
	      W.remove(a, b);
	    }, _data: function _data(a, b, c) {
	      return V.access(a, b, c);
	    }, _removeData: function _removeData(a, b) {
	      V.remove(a, b);
	    } }), r.fn.extend({ data: function data(a, b) {
	      var c,
	          d,
	          e,
	          f = this[0],
	          g = f && f.attributes;if (void 0 === a) {
	        if (this.length && (e = W.get(f), 1 === f.nodeType && !V.get(f, "hasDataAttrs"))) {
	          c = g.length;while (c--) {
	            g[c] && (d = g[c].name, 0 === d.indexOf("data-") && (d = r.camelCase(d.slice(5)), $(f, d, e[d])));
	          }V.set(f, "hasDataAttrs", !0);
	        }return e;
	      }return "object" == (typeof a === "undefined" ? "undefined" : _typeof(a)) ? this.each(function () {
	        W.set(this, a);
	      }) : S(this, function (b) {
	        var c;if (f && void 0 === b) {
	          if (c = W.get(f, a), void 0 !== c) return c;if (c = $(f, a), void 0 !== c) return c;
	        } else this.each(function () {
	          W.set(this, a, b);
	        });
	      }, null, b, arguments.length > 1, null, !0);
	    }, removeData: function removeData(a) {
	      return this.each(function () {
	        W.remove(this, a);
	      });
	    } }), r.extend({ queue: function queue(a, b, c) {
	      var d;if (a) return b = (b || "fx") + "queue", d = V.get(a, b), c && (!d || r.isArray(c) ? d = V.access(a, b, r.makeArray(c)) : d.push(c)), d || [];
	    }, dequeue: function dequeue(a, b) {
	      b = b || "fx";var c = r.queue(a, b),
	          d = c.length,
	          e = c.shift(),
	          f = r._queueHooks(a, b),
	          g = function g() {
	        r.dequeue(a, b);
	      };"inprogress" === e && (e = c.shift(), d--), e && ("fx" === b && c.unshift("inprogress"), delete f.stop, e.call(a, g, f)), !d && f && f.empty.fire();
	    }, _queueHooks: function _queueHooks(a, b) {
	      var c = b + "queueHooks";return V.get(a, c) || V.access(a, c, { empty: r.Callbacks("once memory").add(function () {
	          V.remove(a, [b + "queue", c]);
	        }) });
	    } }), r.fn.extend({ queue: function queue(a, b) {
	      var c = 2;return "string" != typeof a && (b = a, a = "fx", c--), arguments.length < c ? r.queue(this[0], a) : void 0 === b ? this : this.each(function () {
	        var c = r.queue(this, a, b);r._queueHooks(this, a), "fx" === a && "inprogress" !== c[0] && r.dequeue(this, a);
	      });
	    }, dequeue: function dequeue(a) {
	      return this.each(function () {
	        r.dequeue(this, a);
	      });
	    }, clearQueue: function clearQueue(a) {
	      return this.queue(a || "fx", []);
	    }, promise: function promise(a, b) {
	      var c,
	          d = 1,
	          e = r.Deferred(),
	          f = this,
	          g = this.length,
	          h = function h() {
	        --d || e.resolveWith(f, [f]);
	      };"string" != typeof a && (b = a, a = void 0), a = a || "fx";while (g--) {
	        c = V.get(f[g], a + "queueHooks"), c && c.empty && (d++, c.empty.add(h));
	      }return h(), e.promise(b);
	    } });var _ = /[+-]?(?:\d*\.|)\d+(?:[eE][+-]?\d+|)/.source,
	      aa = new RegExp("^(?:([+-])=|)(" + _ + ")([a-z%]*)$", "i"),
	      ba = ["Top", "Right", "Bottom", "Left"],
	      ca = function ca(a, b) {
	    return a = b || a, "none" === a.style.display || "" === a.style.display && r.contains(a.ownerDocument, a) && "none" === r.css(a, "display");
	  },
	      da = function da(a, b, c, d) {
	    var e,
	        f,
	        g = {};for (f in b) {
	      g[f] = a.style[f], a.style[f] = b[f];
	    }e = c.apply(a, d || []);for (f in b) {
	      a.style[f] = g[f];
	    }return e;
	  };function ea(a, b, c, d) {
	    var e,
	        f = 1,
	        g = 20,
	        h = d ? function () {
	      return d.cur();
	    } : function () {
	      return r.css(a, b, "");
	    },
	        i = h(),
	        j = c && c[3] || (r.cssNumber[b] ? "" : "px"),
	        k = (r.cssNumber[b] || "px" !== j && +i) && aa.exec(r.css(a, b));if (k && k[3] !== j) {
	      j = j || k[3], c = c || [], k = +i || 1;do {
	        f = f || ".5", k /= f, r.style(a, b, k + j);
	      } while (f !== (f = h() / i) && 1 !== f && --g);
	    }return c && (k = +k || +i || 0, e = c[1] ? k + (c[1] + 1) * c[2] : +c[2], d && (d.unit = j, d.start = k, d.end = e)), e;
	  }var fa = {};function ga(a) {
	    var b,
	        c = a.ownerDocument,
	        d = a.nodeName,
	        e = fa[d];return e ? e : (b = c.body.appendChild(c.createElement(d)), e = r.css(b, "display"), b.parentNode.removeChild(b), "none" === e && (e = "block"), fa[d] = e, e);
	  }function ha(a, b) {
	    for (var c, d, e = [], f = 0, g = a.length; f < g; f++) {
	      d = a[f], d.style && (c = d.style.display, b ? ("none" === c && (e[f] = V.get(d, "display") || null, e[f] || (d.style.display = "")), "" === d.style.display && ca(d) && (e[f] = ga(d))) : "none" !== c && (e[f] = "none", V.set(d, "display", c)));
	    }for (f = 0; f < g; f++) {
	      null != e[f] && (a[f].style.display = e[f]);
	    }return a;
	  }r.fn.extend({ show: function show() {
	      return ha(this, !0);
	    }, hide: function hide() {
	      return ha(this);
	    }, toggle: function toggle(a) {
	      return "boolean" == typeof a ? a ? this.show() : this.hide() : this.each(function () {
	        ca(this) ? r(this).show() : r(this).hide();
	      });
	    } });var ia = /^(?:checkbox|radio)$/i,
	      ja = /<([a-z][^\/\0>\x20\t\r\n\f]+)/i,
	      ka = /^$|\/(?:java|ecma)script/i,
	      la = { option: [1, "<select multiple='multiple'>", "</select>"], thead: [1, "<table>", "</table>"], col: [2, "<table><colgroup>", "</colgroup></table>"], tr: [2, "<table><tbody>", "</tbody></table>"], td: [3, "<table><tbody><tr>", "</tr></tbody></table>"], _default: [0, "", ""] };la.optgroup = la.option, la.tbody = la.tfoot = la.colgroup = la.caption = la.thead, la.th = la.td;function ma(a, b) {
	    var c;return c = "undefined" != typeof a.getElementsByTagName ? a.getElementsByTagName(b || "*") : "undefined" != typeof a.querySelectorAll ? a.querySelectorAll(b || "*") : [], void 0 === b || b && r.nodeName(a, b) ? r.merge([a], c) : c;
	  }function na(a, b) {
	    for (var c = 0, d = a.length; c < d; c++) {
	      V.set(a[c], "globalEval", !b || V.get(b[c], "globalEval"));
	    }
	  }var oa = /<|&#?\w+;/;function pa(a, b, c, d, e) {
	    for (var f, g, h, i, j, k, l = b.createDocumentFragment(), m = [], n = 0, o = a.length; n < o; n++) {
	      if (f = a[n], f || 0 === f) if ("object" === r.type(f)) r.merge(m, f.nodeType ? [f] : f);else if (oa.test(f)) {
	        g = g || l.appendChild(b.createElement("div")), h = (ja.exec(f) || ["", ""])[1].toLowerCase(), i = la[h] || la._default, g.innerHTML = i[1] + r.htmlPrefilter(f) + i[2], k = i[0];while (k--) {
	          g = g.lastChild;
	        }r.merge(m, g.childNodes), g = l.firstChild, g.textContent = "";
	      } else m.push(b.createTextNode(f));
	    }l.textContent = "", n = 0;while (f = m[n++]) {
	      if (d && r.inArray(f, d) > -1) e && e.push(f);else if (j = r.contains(f.ownerDocument, f), g = ma(l.appendChild(f), "script"), j && na(g), c) {
	        k = 0;while (f = g[k++]) {
	          ka.test(f.type || "") && c.push(f);
	        }
	      }
	    }return l;
	  }!function () {
	    var a = d.createDocumentFragment(),
	        b = a.appendChild(d.createElement("div")),
	        c = d.createElement("input");c.setAttribute("type", "radio"), c.setAttribute("checked", "checked"), c.setAttribute("name", "t"), b.appendChild(c), o.checkClone = b.cloneNode(!0).cloneNode(!0).lastChild.checked, b.innerHTML = "<textarea>x</textarea>", o.noCloneChecked = !!b.cloneNode(!0).lastChild.defaultValue;
	  }();var qa = d.documentElement,
	      ra = /^key/,
	      sa = /^(?:mouse|pointer|contextmenu|drag|drop)|click/,
	      ta = /^([^.]*)(?:\.(.+)|)/;function ua() {
	    return !0;
	  }function va() {
	    return !1;
	  }function wa() {
	    try {
	      return d.activeElement;
	    } catch (a) {}
	  }function xa(a, b, c, d, e, f) {
	    var g, h;if ("object" == (typeof b === "undefined" ? "undefined" : _typeof(b))) {
	      "string" != typeof c && (d = d || c, c = void 0);for (h in b) {
	        xa(a, h, c, d, b[h], f);
	      }return a;
	    }if (null == d && null == e ? (e = c, d = c = void 0) : null == e && ("string" == typeof c ? (e = d, d = void 0) : (e = d, d = c, c = void 0)), e === !1) e = va;else if (!e) return a;return 1 === f && (g = e, e = function e(a) {
	      return r().off(a), g.apply(this, arguments);
	    }, e.guid = g.guid || (g.guid = r.guid++)), a.each(function () {
	      r.event.add(this, b, e, d, c);
	    });
	  }r.event = { global: {}, add: function add(a, b, c, d, e) {
	      var f,
	          g,
	          h,
	          i,
	          j,
	          k,
	          l,
	          m,
	          n,
	          o,
	          p,
	          q = V.get(a);if (q) {
	        c.handler && (f = c, c = f.handler, e = f.selector), e && r.find.matchesSelector(qa, e), c.guid || (c.guid = r.guid++), (i = q.events) || (i = q.events = {}), (g = q.handle) || (g = q.handle = function (b) {
	          return "undefined" != typeof r && r.event.triggered !== b.type ? r.event.dispatch.apply(a, arguments) : void 0;
	        }), b = (b || "").match(K) || [""], j = b.length;while (j--) {
	          h = ta.exec(b[j]) || [], n = p = h[1], o = (h[2] || "").split(".").sort(), n && (l = r.event.special[n] || {}, n = (e ? l.delegateType : l.bindType) || n, l = r.event.special[n] || {}, k = r.extend({ type: n, origType: p, data: d, handler: c, guid: c.guid, selector: e, needsContext: e && r.expr.match.needsContext.test(e), namespace: o.join(".") }, f), (m = i[n]) || (m = i[n] = [], m.delegateCount = 0, l.setup && l.setup.call(a, d, o, g) !== !1 || a.addEventListener && a.addEventListener(n, g)), l.add && (l.add.call(a, k), k.handler.guid || (k.handler.guid = c.guid)), e ? m.splice(m.delegateCount++, 0, k) : m.push(k), r.event.global[n] = !0);
	        }
	      }
	    }, remove: function remove(a, b, c, d, e) {
	      var f,
	          g,
	          h,
	          i,
	          j,
	          k,
	          l,
	          m,
	          n,
	          o,
	          p,
	          q = V.hasData(a) && V.get(a);if (q && (i = q.events)) {
	        b = (b || "").match(K) || [""], j = b.length;while (j--) {
	          if (h = ta.exec(b[j]) || [], n = p = h[1], o = (h[2] || "").split(".").sort(), n) {
	            l = r.event.special[n] || {}, n = (d ? l.delegateType : l.bindType) || n, m = i[n] || [], h = h[2] && new RegExp("(^|\\.)" + o.join("\\.(?:.*\\.|)") + "(\\.|$)"), g = f = m.length;while (f--) {
	              k = m[f], !e && p !== k.origType || c && c.guid !== k.guid || h && !h.test(k.namespace) || d && d !== k.selector && ("**" !== d || !k.selector) || (m.splice(f, 1), k.selector && m.delegateCount--, l.remove && l.remove.call(a, k));
	            }g && !m.length && (l.teardown && l.teardown.call(a, o, q.handle) !== !1 || r.removeEvent(a, n, q.handle), delete i[n]);
	          } else for (n in i) {
	            r.event.remove(a, n + b[j], c, d, !0);
	          }
	        }r.isEmptyObject(i) && V.remove(a, "handle events");
	      }
	    }, dispatch: function dispatch(a) {
	      var b = r.event.fix(a),
	          c,
	          d,
	          e,
	          f,
	          g,
	          h,
	          i = new Array(arguments.length),
	          j = (V.get(this, "events") || {})[b.type] || [],
	          k = r.event.special[b.type] || {};for (i[0] = b, c = 1; c < arguments.length; c++) {
	        i[c] = arguments[c];
	      }if (b.delegateTarget = this, !k.preDispatch || k.preDispatch.call(this, b) !== !1) {
	        h = r.event.handlers.call(this, b, j), c = 0;while ((f = h[c++]) && !b.isPropagationStopped()) {
	          b.currentTarget = f.elem, d = 0;while ((g = f.handlers[d++]) && !b.isImmediatePropagationStopped()) {
	            b.rnamespace && !b.rnamespace.test(g.namespace) || (b.handleObj = g, b.data = g.data, e = ((r.event.special[g.origType] || {}).handle || g.handler).apply(f.elem, i), void 0 !== e && (b.result = e) === !1 && (b.preventDefault(), b.stopPropagation()));
	          }
	        }return k.postDispatch && k.postDispatch.call(this, b), b.result;
	      }
	    }, handlers: function handlers(a, b) {
	      var c,
	          d,
	          e,
	          f,
	          g,
	          h = [],
	          i = b.delegateCount,
	          j = a.target;if (i && j.nodeType && !("click" === a.type && a.button >= 1)) for (; j !== this; j = j.parentNode || this) {
	        if (1 === j.nodeType && ("click" !== a.type || j.disabled !== !0)) {
	          for (f = [], g = {}, c = 0; c < i; c++) {
	            d = b[c], e = d.selector + " ", void 0 === g[e] && (g[e] = d.needsContext ? r(e, this).index(j) > -1 : r.find(e, this, null, [j]).length), g[e] && f.push(d);
	          }f.length && h.push({ elem: j, handlers: f });
	        }
	      }return j = this, i < b.length && h.push({ elem: j, handlers: b.slice(i) }), h;
	    }, addProp: function addProp(a, b) {
	      Object.defineProperty(r.Event.prototype, a, { enumerable: !0, configurable: !0, get: r.isFunction(b) ? function () {
	          if (this.originalEvent) return b(this.originalEvent);
	        } : function () {
	          if (this.originalEvent) return this.originalEvent[a];
	        }, set: function set(b) {
	          Object.defineProperty(this, a, { enumerable: !0, configurable: !0, writable: !0, value: b });
	        } });
	    }, fix: function fix(a) {
	      return a[r.expando] ? a : new r.Event(a);
	    }, special: { load: { noBubble: !0 }, focus: { trigger: function trigger() {
	          if (this !== wa() && this.focus) return this.focus(), !1;
	        }, delegateType: "focusin" }, blur: { trigger: function trigger() {
	          if (this === wa() && this.blur) return this.blur(), !1;
	        }, delegateType: "focusout" }, click: { trigger: function trigger() {
	          if ("checkbox" === this.type && this.click && r.nodeName(this, "input")) return this.click(), !1;
	        }, _default: function _default(a) {
	          return r.nodeName(a.target, "a");
	        } }, beforeunload: { postDispatch: function postDispatch(a) {
	          void 0 !== a.result && a.originalEvent && (a.originalEvent.returnValue = a.result);
	        } } } }, r.removeEvent = function (a, b, c) {
	    a.removeEventListener && a.removeEventListener(b, c);
	  }, r.Event = function (a, b) {
	    return this instanceof r.Event ? (a && a.type ? (this.originalEvent = a, this.type = a.type, this.isDefaultPrevented = a.defaultPrevented || void 0 === a.defaultPrevented && a.returnValue === !1 ? ua : va, this.target = a.target && 3 === a.target.nodeType ? a.target.parentNode : a.target, this.currentTarget = a.currentTarget, this.relatedTarget = a.relatedTarget) : this.type = a, b && r.extend(this, b), this.timeStamp = a && a.timeStamp || r.now(), void (this[r.expando] = !0)) : new r.Event(a, b);
	  }, r.Event.prototype = { constructor: r.Event, isDefaultPrevented: va, isPropagationStopped: va, isImmediatePropagationStopped: va, isSimulated: !1, preventDefault: function preventDefault() {
	      var a = this.originalEvent;this.isDefaultPrevented = ua, a && !this.isSimulated && a.preventDefault();
	    }, stopPropagation: function stopPropagation() {
	      var a = this.originalEvent;this.isPropagationStopped = ua, a && !this.isSimulated && a.stopPropagation();
	    }, stopImmediatePropagation: function stopImmediatePropagation() {
	      var a = this.originalEvent;this.isImmediatePropagationStopped = ua, a && !this.isSimulated && a.stopImmediatePropagation(), this.stopPropagation();
	    } }, r.each({ altKey: !0, bubbles: !0, cancelable: !0, changedTouches: !0, ctrlKey: !0, detail: !0, eventPhase: !0, metaKey: !0, pageX: !0, pageY: !0, shiftKey: !0, view: !0, "char": !0, charCode: !0, key: !0, keyCode: !0, button: !0, buttons: !0, clientX: !0, clientY: !0, offsetX: !0, offsetY: !0, pointerId: !0, pointerType: !0, screenX: !0, screenY: !0, targetTouches: !0, toElement: !0, touches: !0, which: function which(a) {
	      var b = a.button;return null == a.which && ra.test(a.type) ? null != a.charCode ? a.charCode : a.keyCode : !a.which && void 0 !== b && sa.test(a.type) ? 1 & b ? 1 : 2 & b ? 3 : 4 & b ? 2 : 0 : a.which;
	    } }, r.event.addProp), r.each({ mouseenter: "mouseover", mouseleave: "mouseout", pointerenter: "pointerover", pointerleave: "pointerout" }, function (a, b) {
	    r.event.special[a] = { delegateType: b, bindType: b, handle: function handle(a) {
	        var c,
	            d = this,
	            e = a.relatedTarget,
	            f = a.handleObj;return e && (e === d || r.contains(d, e)) || (a.type = f.origType, c = f.handler.apply(this, arguments), a.type = b), c;
	      } };
	  }), r.fn.extend({ on: function on(a, b, c, d) {
	      return xa(this, a, b, c, d);
	    }, one: function one(a, b, c, d) {
	      return xa(this, a, b, c, d, 1);
	    }, off: function off(a, b, c) {
	      var d, e;if (a && a.preventDefault && a.handleObj) return d = a.handleObj, r(a.delegateTarget).off(d.namespace ? d.origType + "." + d.namespace : d.origType, d.selector, d.handler), this;if ("object" == (typeof a === "undefined" ? "undefined" : _typeof(a))) {
	        for (e in a) {
	          this.off(e, b, a[e]);
	        }return this;
	      }return b !== !1 && "function" != typeof b || (c = b, b = void 0), c === !1 && (c = va), this.each(function () {
	        r.event.remove(this, a, c, b);
	      });
	    } });var ya = /<(?!area|br|col|embed|hr|img|input|link|meta|param)(([a-z][^\/\0>\x20\t\r\n\f]*)[^>]*)\/>/gi,
	      za = /<script|<style|<link/i,
	      Aa = /checked\s*(?:[^=]|=\s*.checked.)/i,
	      Ba = /^true\/(.*)/,
	      Ca = /^\s*<!(?:\[CDATA\[|--)|(?:\]\]|--)>\s*$/g;function Da(a, b) {
	    return r.nodeName(a, "table") && r.nodeName(11 !== b.nodeType ? b : b.firstChild, "tr") ? a.getElementsByTagName("tbody")[0] || a : a;
	  }function Ea(a) {
	    return a.type = (null !== a.getAttribute("type")) + "/" + a.type, a;
	  }function Fa(a) {
	    var b = Ba.exec(a.type);return b ? a.type = b[1] : a.removeAttribute("type"), a;
	  }function Ga(a, b) {
	    var c, d, e, f, g, h, i, j;if (1 === b.nodeType) {
	      if (V.hasData(a) && (f = V.access(a), g = V.set(b, f), j = f.events)) {
	        delete g.handle, g.events = {};for (e in j) {
	          for (c = 0, d = j[e].length; c < d; c++) {
	            r.event.add(b, e, j[e][c]);
	          }
	        }
	      }W.hasData(a) && (h = W.access(a), i = r.extend({}, h), W.set(b, i));
	    }
	  }function Ha(a, b) {
	    var c = b.nodeName.toLowerCase();"input" === c && ia.test(a.type) ? b.checked = a.checked : "input" !== c && "textarea" !== c || (b.defaultValue = a.defaultValue);
	  }function Ia(a, b, c, d) {
	    b = g.apply([], b);var e,
	        f,
	        h,
	        i,
	        j,
	        k,
	        l = 0,
	        m = a.length,
	        n = m - 1,
	        q = b[0],
	        s = r.isFunction(q);if (s || m > 1 && "string" == typeof q && !o.checkClone && Aa.test(q)) return a.each(function (e) {
	      var f = a.eq(e);s && (b[0] = q.call(this, e, f.html())), Ia(f, b, c, d);
	    });if (m && (e = pa(b, a[0].ownerDocument, !1, a, d), f = e.firstChild, 1 === e.childNodes.length && (e = f), f || d)) {
	      for (h = r.map(ma(e, "script"), Ea), i = h.length; l < m; l++) {
	        j = e, l !== n && (j = r.clone(j, !0, !0), i && r.merge(h, ma(j, "script"))), c.call(a[l], j, l);
	      }if (i) for (k = h[h.length - 1].ownerDocument, r.map(h, Fa), l = 0; l < i; l++) {
	        j = h[l], ka.test(j.type || "") && !V.access(j, "globalEval") && r.contains(k, j) && (j.src ? r._evalUrl && r._evalUrl(j.src) : p(j.textContent.replace(Ca, ""), k));
	      }
	    }return a;
	  }function Ja(a, b, c) {
	    for (var d, e = b ? r.filter(b, a) : a, f = 0; null != (d = e[f]); f++) {
	      c || 1 !== d.nodeType || r.cleanData(ma(d)), d.parentNode && (c && r.contains(d.ownerDocument, d) && na(ma(d, "script")), d.parentNode.removeChild(d));
	    }return a;
	  }r.extend({ htmlPrefilter: function htmlPrefilter(a) {
	      return a.replace(ya, "<$1></$2>");
	    }, clone: function clone(a, b, c) {
	      var d,
	          e,
	          f,
	          g,
	          h = a.cloneNode(!0),
	          i = r.contains(a.ownerDocument, a);if (!(o.noCloneChecked || 1 !== a.nodeType && 11 !== a.nodeType || r.isXMLDoc(a))) for (g = ma(h), f = ma(a), d = 0, e = f.length; d < e; d++) {
	        Ha(f[d], g[d]);
	      }if (b) if (c) for (f = f || ma(a), g = g || ma(h), d = 0, e = f.length; d < e; d++) {
	        Ga(f[d], g[d]);
	      } else Ga(a, h);return g = ma(h, "script"), g.length > 0 && na(g, !i && ma(a, "script")), h;
	    }, cleanData: function cleanData(a) {
	      for (var b, c, d, e = r.event.special, f = 0; void 0 !== (c = a[f]); f++) {
	        if (T(c)) {
	          if (b = c[V.expando]) {
	            if (b.events) for (d in b.events) {
	              e[d] ? r.event.remove(c, d) : r.removeEvent(c, d, b.handle);
	            }c[V.expando] = void 0;
	          }c[W.expando] && (c[W.expando] = void 0);
	        }
	      }
	    } }), r.fn.extend({ detach: function detach(a) {
	      return Ja(this, a, !0);
	    }, remove: function remove(a) {
	      return Ja(this, a);
	    }, text: function text(a) {
	      return S(this, function (a) {
	        return void 0 === a ? r.text(this) : this.empty().each(function () {
	          1 !== this.nodeType && 11 !== this.nodeType && 9 !== this.nodeType || (this.textContent = a);
	        });
	      }, null, a, arguments.length);
	    }, append: function append() {
	      return Ia(this, arguments, function (a) {
	        if (1 === this.nodeType || 11 === this.nodeType || 9 === this.nodeType) {
	          var b = Da(this, a);b.appendChild(a);
	        }
	      });
	    }, prepend: function prepend() {
	      return Ia(this, arguments, function (a) {
	        if (1 === this.nodeType || 11 === this.nodeType || 9 === this.nodeType) {
	          var b = Da(this, a);b.insertBefore(a, b.firstChild);
	        }
	      });
	    }, before: function before() {
	      return Ia(this, arguments, function (a) {
	        this.parentNode && this.parentNode.insertBefore(a, this);
	      });
	    }, after: function after() {
	      return Ia(this, arguments, function (a) {
	        this.parentNode && this.parentNode.insertBefore(a, this.nextSibling);
	      });
	    }, empty: function empty() {
	      for (var a, b = 0; null != (a = this[b]); b++) {
	        1 === a.nodeType && (r.cleanData(ma(a, !1)), a.textContent = "");
	      }return this;
	    }, clone: function clone(a, b) {
	      return a = null != a && a, b = null == b ? a : b, this.map(function () {
	        return r.clone(this, a, b);
	      });
	    }, html: function html(a) {
	      return S(this, function (a) {
	        var b = this[0] || {},
	            c = 0,
	            d = this.length;if (void 0 === a && 1 === b.nodeType) return b.innerHTML;if ("string" == typeof a && !za.test(a) && !la[(ja.exec(a) || ["", ""])[1].toLowerCase()]) {
	          a = r.htmlPrefilter(a);try {
	            for (; c < d; c++) {
	              b = this[c] || {}, 1 === b.nodeType && (r.cleanData(ma(b, !1)), b.innerHTML = a);
	            }b = 0;
	          } catch (e) {}
	        }b && this.empty().append(a);
	      }, null, a, arguments.length);
	    }, replaceWith: function replaceWith() {
	      var a = [];return Ia(this, arguments, function (b) {
	        var c = this.parentNode;r.inArray(this, a) < 0 && (r.cleanData(ma(this)), c && c.replaceChild(b, this));
	      }, a);
	    } }), r.each({ appendTo: "append", prependTo: "prepend", insertBefore: "before", insertAfter: "after", replaceAll: "replaceWith" }, function (a, b) {
	    r.fn[a] = function (a) {
	      for (var c, d = [], e = r(a), f = e.length - 1, g = 0; g <= f; g++) {
	        c = g === f ? this : this.clone(!0), r(e[g])[b](c), h.apply(d, c.get());
	      }return this.pushStack(d);
	    };
	  });var Ka = /^margin/,
	      La = new RegExp("^(" + _ + ")(?!px)[a-z%]+$", "i"),
	      Ma = function Ma(b) {
	    var c = b.ownerDocument.defaultView;return c && c.opener || (c = a), c.getComputedStyle(b);
	  };!function () {
	    function b() {
	      if (i) {
	        i.style.cssText = "box-sizing:border-box;position:relative;display:block;margin:auto;border:1px;padding:1px;top:1%;width:50%", i.innerHTML = "", qa.appendChild(h);var b = a.getComputedStyle(i);c = "1%" !== b.top, g = "2px" === b.marginLeft, e = "4px" === b.width, i.style.marginRight = "50%", f = "4px" === b.marginRight, qa.removeChild(h), i = null;
	      }
	    }var c,
	        e,
	        f,
	        g,
	        h = d.createElement("div"),
	        i = d.createElement("div");i.style && (i.style.backgroundClip = "content-box", i.cloneNode(!0).style.backgroundClip = "", o.clearCloneStyle = "content-box" === i.style.backgroundClip, h.style.cssText = "border:0;width:8px;height:0;top:0;left:-9999px;padding:0;margin-top:1px;position:absolute", h.appendChild(i), r.extend(o, { pixelPosition: function pixelPosition() {
	        return b(), c;
	      }, boxSizingReliable: function boxSizingReliable() {
	        return b(), e;
	      }, pixelMarginRight: function pixelMarginRight() {
	        return b(), f;
	      }, reliableMarginLeft: function reliableMarginLeft() {
	        return b(), g;
	      } }));
	  }();function Na(a, b, c) {
	    var d,
	        e,
	        f,
	        g,
	        h = a.style;return c = c || Ma(a), c && (g = c.getPropertyValue(b) || c[b], "" !== g || r.contains(a.ownerDocument, a) || (g = r.style(a, b)), !o.pixelMarginRight() && La.test(g) && Ka.test(b) && (d = h.width, e = h.minWidth, f = h.maxWidth, h.minWidth = h.maxWidth = h.width = g, g = c.width, h.width = d, h.minWidth = e, h.maxWidth = f)), void 0 !== g ? g + "" : g;
	  }function Oa(a, b) {
	    return { get: function get() {
	        return a() ? void delete this.get : (this.get = b).apply(this, arguments);
	      } };
	  }var Pa = /^(none|table(?!-c[ea]).+)/,
	      Qa = { position: "absolute", visibility: "hidden", display: "block" },
	      Ra = { letterSpacing: "0", fontWeight: "400" },
	      Sa = ["Webkit", "Moz", "ms"],
	      Ta = d.createElement("div").style;function Ua(a) {
	    if (a in Ta) return a;var b = a[0].toUpperCase() + a.slice(1),
	        c = Sa.length;while (c--) {
	      if (a = Sa[c] + b, a in Ta) return a;
	    }
	  }function Va(a, b, c) {
	    var d = aa.exec(b);return d ? Math.max(0, d[2] - (c || 0)) + (d[3] || "px") : b;
	  }function Wa(a, b, c, d, e) {
	    var f,
	        g = 0;for (f = c === (d ? "border" : "content") ? 4 : "width" === b ? 1 : 0; f < 4; f += 2) {
	      "margin" === c && (g += r.css(a, c + ba[f], !0, e)), d ? ("content" === c && (g -= r.css(a, "padding" + ba[f], !0, e)), "margin" !== c && (g -= r.css(a, "border" + ba[f] + "Width", !0, e))) : (g += r.css(a, "padding" + ba[f], !0, e), "padding" !== c && (g += r.css(a, "border" + ba[f] + "Width", !0, e)));
	    }return g;
	  }function Xa(a, b, c) {
	    var d,
	        e = !0,
	        f = Ma(a),
	        g = "border-box" === r.css(a, "boxSizing", !1, f);if (a.getClientRects().length && (d = a.getBoundingClientRect()[b]), d <= 0 || null == d) {
	      if (d = Na(a, b, f), (d < 0 || null == d) && (d = a.style[b]), La.test(d)) return d;e = g && (o.boxSizingReliable() || d === a.style[b]), d = parseFloat(d) || 0;
	    }return d + Wa(a, b, c || (g ? "border" : "content"), e, f) + "px";
	  }r.extend({ cssHooks: { opacity: { get: function get(a, b) {
	          if (b) {
	            var c = Na(a, "opacity");return "" === c ? "1" : c;
	          }
	        } } }, cssNumber: { animationIterationCount: !0, columnCount: !0, fillOpacity: !0, flexGrow: !0, flexShrink: !0, fontWeight: !0, lineHeight: !0, opacity: !0, order: !0, orphans: !0, widows: !0, zIndex: !0, zoom: !0 }, cssProps: { "float": "cssFloat" }, style: function style(a, b, c, d) {
	      if (a && 3 !== a.nodeType && 8 !== a.nodeType && a.style) {
	        var e,
	            f,
	            g,
	            h = r.camelCase(b),
	            i = a.style;return b = r.cssProps[h] || (r.cssProps[h] = Ua(h) || h), g = r.cssHooks[b] || r.cssHooks[h], void 0 === c ? g && "get" in g && void 0 !== (e = g.get(a, !1, d)) ? e : i[b] : (f = typeof c === "undefined" ? "undefined" : _typeof(c), "string" === f && (e = aa.exec(c)) && e[1] && (c = ea(a, b, e), f = "number"), null != c && c === c && ("number" === f && (c += e && e[3] || (r.cssNumber[h] ? "" : "px")), o.clearCloneStyle || "" !== c || 0 !== b.indexOf("background") || (i[b] = "inherit"), g && "set" in g && void 0 === (c = g.set(a, c, d)) || (i[b] = c)), void 0);
	      }
	    }, css: function css(a, b, c, d) {
	      var e,
	          f,
	          g,
	          h = r.camelCase(b);return b = r.cssProps[h] || (r.cssProps[h] = Ua(h) || h), g = r.cssHooks[b] || r.cssHooks[h], g && "get" in g && (e = g.get(a, !0, c)), void 0 === e && (e = Na(a, b, d)), "normal" === e && b in Ra && (e = Ra[b]), "" === c || c ? (f = parseFloat(e), c === !0 || isFinite(f) ? f || 0 : e) : e;
	    } }), r.each(["height", "width"], function (a, b) {
	    r.cssHooks[b] = { get: function get(a, c, d) {
	        if (c) return !Pa.test(r.css(a, "display")) || a.getClientRects().length && a.getBoundingClientRect().width ? Xa(a, b, d) : da(a, Qa, function () {
	          return Xa(a, b, d);
	        });
	      }, set: function set(a, c, d) {
	        var e,
	            f = d && Ma(a),
	            g = d && Wa(a, b, d, "border-box" === r.css(a, "boxSizing", !1, f), f);return g && (e = aa.exec(c)) && "px" !== (e[3] || "px") && (a.style[b] = c, c = r.css(a, b)), Va(a, c, g);
	      } };
	  }), r.cssHooks.marginLeft = Oa(o.reliableMarginLeft, function (a, b) {
	    if (b) return (parseFloat(Na(a, "marginLeft")) || a.getBoundingClientRect().left - da(a, { marginLeft: 0 }, function () {
	      return a.getBoundingClientRect().left;
	    })) + "px";
	  }), r.each({ margin: "", padding: "", border: "Width" }, function (a, b) {
	    r.cssHooks[a + b] = { expand: function expand(c) {
	        for (var d = 0, e = {}, f = "string" == typeof c ? c.split(" ") : [c]; d < 4; d++) {
	          e[a + ba[d] + b] = f[d] || f[d - 2] || f[0];
	        }return e;
	      } }, Ka.test(a) || (r.cssHooks[a + b].set = Va);
	  }), r.fn.extend({ css: function css(a, b) {
	      return S(this, function (a, b, c) {
	        var d,
	            e,
	            f = {},
	            g = 0;if (r.isArray(b)) {
	          for (d = Ma(a), e = b.length; g < e; g++) {
	            f[b[g]] = r.css(a, b[g], !1, d);
	          }return f;
	        }return void 0 !== c ? r.style(a, b, c) : r.css(a, b);
	      }, a, b, arguments.length > 1);
	    } });function Ya(a, b, c, d, e) {
	    return new Ya.prototype.init(a, b, c, d, e);
	  }r.Tween = Ya, Ya.prototype = { constructor: Ya, init: function init(a, b, c, d, e, f) {
	      this.elem = a, this.prop = c, this.easing = e || r.easing._default, this.options = b, this.start = this.now = this.cur(), this.end = d, this.unit = f || (r.cssNumber[c] ? "" : "px");
	    }, cur: function cur() {
	      var a = Ya.propHooks[this.prop];return a && a.get ? a.get(this) : Ya.propHooks._default.get(this);
	    }, run: function run(a) {
	      var b,
	          c = Ya.propHooks[this.prop];return this.options.duration ? this.pos = b = r.easing[this.easing](a, this.options.duration * a, 0, 1, this.options.duration) : this.pos = b = a, this.now = (this.end - this.start) * b + this.start, this.options.step && this.options.step.call(this.elem, this.now, this), c && c.set ? c.set(this) : Ya.propHooks._default.set(this), this;
	    } }, Ya.prototype.init.prototype = Ya.prototype, Ya.propHooks = { _default: { get: function get(a) {
	        var b;return 1 !== a.elem.nodeType || null != a.elem[a.prop] && null == a.elem.style[a.prop] ? a.elem[a.prop] : (b = r.css(a.elem, a.prop, ""), b && "auto" !== b ? b : 0);
	      }, set: function set(a) {
	        r.fx.step[a.prop] ? r.fx.step[a.prop](a) : 1 !== a.elem.nodeType || null == a.elem.style[r.cssProps[a.prop]] && !r.cssHooks[a.prop] ? a.elem[a.prop] = a.now : r.style(a.elem, a.prop, a.now + a.unit);
	      } } }, Ya.propHooks.scrollTop = Ya.propHooks.scrollLeft = { set: function set(a) {
	      a.elem.nodeType && a.elem.parentNode && (a.elem[a.prop] = a.now);
	    } }, r.easing = { linear: function linear(a) {
	      return a;
	    }, swing: function swing(a) {
	      return .5 - Math.cos(a * Math.PI) / 2;
	    }, _default: "swing" }, r.fx = Ya.prototype.init, r.fx.step = {};var Za,
	      $a,
	      _a = /^(?:toggle|show|hide)$/,
	      ab = /queueHooks$/;function bb() {
	    $a && (a.requestAnimationFrame(bb), r.fx.tick());
	  }function cb() {
	    return a.setTimeout(function () {
	      Za = void 0;
	    }), Za = r.now();
	  }function db(a, b) {
	    var c,
	        d = 0,
	        e = { height: a };for (b = b ? 1 : 0; d < 4; d += 2 - b) {
	      c = ba[d], e["margin" + c] = e["padding" + c] = a;
	    }return b && (e.opacity = e.width = a), e;
	  }function eb(a, b, c) {
	    for (var d, e = (hb.tweeners[b] || []).concat(hb.tweeners["*"]), f = 0, g = e.length; f < g; f++) {
	      if (d = e[f].call(c, b, a)) return d;
	    }
	  }function fb(a, b, c) {
	    var d,
	        e,
	        f,
	        g,
	        h,
	        i,
	        j,
	        k,
	        l = "width" in b || "height" in b,
	        m = this,
	        n = {},
	        o = a.style,
	        p = a.nodeType && ca(a),
	        q = V.get(a, "fxshow");c.queue || (g = r._queueHooks(a, "fx"), null == g.unqueued && (g.unqueued = 0, h = g.empty.fire, g.empty.fire = function () {
	      g.unqueued || h();
	    }), g.unqueued++, m.always(function () {
	      m.always(function () {
	        g.unqueued--, r.queue(a, "fx").length || g.empty.fire();
	      });
	    }));for (d in b) {
	      if (e = b[d], _a.test(e)) {
	        if (delete b[d], f = f || "toggle" === e, e === (p ? "hide" : "show")) {
	          if ("show" !== e || !q || void 0 === q[d]) continue;p = !0;
	        }n[d] = q && q[d] || r.style(a, d);
	      }
	    }if (i = !r.isEmptyObject(b), i || !r.isEmptyObject(n)) {
	      l && 1 === a.nodeType && (c.overflow = [o.overflow, o.overflowX, o.overflowY], j = q && q.display, null == j && (j = V.get(a, "display")), k = r.css(a, "display"), "none" === k && (j ? k = j : (ha([a], !0), j = a.style.display || j, k = r.css(a, "display"), ha([a]))), ("inline" === k || "inline-block" === k && null != j) && "none" === r.css(a, "float") && (i || (m.done(function () {
	        o.display = j;
	      }), null == j && (k = o.display, j = "none" === k ? "" : k)), o.display = "inline-block")), c.overflow && (o.overflow = "hidden", m.always(function () {
	        o.overflow = c.overflow[0], o.overflowX = c.overflow[1], o.overflowY = c.overflow[2];
	      })), i = !1;for (d in n) {
	        i || (q ? "hidden" in q && (p = q.hidden) : q = V.access(a, "fxshow", { display: j }), f && (q.hidden = !p), p && ha([a], !0), m.done(function () {
	          p || ha([a]), V.remove(a, "fxshow");for (d in n) {
	            r.style(a, d, n[d]);
	          }
	        })), i = eb(p ? q[d] : 0, d, m), d in q || (q[d] = i.start, p && (i.end = i.start, i.start = 0));
	      }
	    }
	  }function gb(a, b) {
	    var c, d, e, f, g;for (c in a) {
	      if (d = r.camelCase(c), e = b[d], f = a[c], r.isArray(f) && (e = f[1], f = a[c] = f[0]), c !== d && (a[d] = f, delete a[c]), g = r.cssHooks[d], g && "expand" in g) {
	        f = g.expand(f), delete a[d];for (c in f) {
	          c in a || (a[c] = f[c], b[c] = e);
	        }
	      } else b[d] = e;
	    }
	  }function hb(a, b, c) {
	    var d,
	        e,
	        f = 0,
	        g = hb.prefilters.length,
	        h = r.Deferred().always(function () {
	      delete i.elem;
	    }),
	        i = function i() {
	      if (e) return !1;for (var b = Za || cb(), c = Math.max(0, j.startTime + j.duration - b), d = c / j.duration || 0, f = 1 - d, g = 0, i = j.tweens.length; g < i; g++) {
	        j.tweens[g].run(f);
	      }return h.notifyWith(a, [j, f, c]), f < 1 && i ? c : (h.resolveWith(a, [j]), !1);
	    },
	        j = h.promise({ elem: a, props: r.extend({}, b), opts: r.extend(!0, { specialEasing: {}, easing: r.easing._default }, c), originalProperties: b, originalOptions: c, startTime: Za || cb(), duration: c.duration, tweens: [], createTween: function createTween(b, c) {
	        var d = r.Tween(a, j.opts, b, c, j.opts.specialEasing[b] || j.opts.easing);return j.tweens.push(d), d;
	      }, stop: function stop(b) {
	        var c = 0,
	            d = b ? j.tweens.length : 0;if (e) return this;for (e = !0; c < d; c++) {
	          j.tweens[c].run(1);
	        }return b ? (h.notifyWith(a, [j, 1, 0]), h.resolveWith(a, [j, b])) : h.rejectWith(a, [j, b]), this;
	      } }),
	        k = j.props;for (gb(k, j.opts.specialEasing); f < g; f++) {
	      if (d = hb.prefilters[f].call(j, a, k, j.opts)) return r.isFunction(d.stop) && (r._queueHooks(j.elem, j.opts.queue).stop = r.proxy(d.stop, d)), d;
	    }return r.map(k, eb, j), r.isFunction(j.opts.start) && j.opts.start.call(a, j), r.fx.timer(r.extend(i, { elem: a, anim: j, queue: j.opts.queue })), j.progress(j.opts.progress).done(j.opts.done, j.opts.complete).fail(j.opts.fail).always(j.opts.always);
	  }r.Animation = r.extend(hb, { tweeners: { "*": [function (a, b) {
	        var c = this.createTween(a, b);return ea(c.elem, a, aa.exec(b), c), c;
	      }] }, tweener: function tweener(a, b) {
	      r.isFunction(a) ? (b = a, a = ["*"]) : a = a.match(K);for (var c, d = 0, e = a.length; d < e; d++) {
	        c = a[d], hb.tweeners[c] = hb.tweeners[c] || [], hb.tweeners[c].unshift(b);
	      }
	    }, prefilters: [fb], prefilter: function prefilter(a, b) {
	      b ? hb.prefilters.unshift(a) : hb.prefilters.push(a);
	    } }), r.speed = function (a, b, c) {
	    var e = a && "object" == (typeof a === "undefined" ? "undefined" : _typeof(a)) ? r.extend({}, a) : { complete: c || !c && b || r.isFunction(a) && a, duration: a, easing: c && b || b && !r.isFunction(b) && b };return r.fx.off || d.hidden ? e.duration = 0 : "number" != typeof e.duration && (e.duration in r.fx.speeds ? e.duration = r.fx.speeds[e.duration] : e.duration = r.fx.speeds._default), null != e.queue && e.queue !== !0 || (e.queue = "fx"), e.old = e.complete, e.complete = function () {
	      r.isFunction(e.old) && e.old.call(this), e.queue && r.dequeue(this, e.queue);
	    }, e;
	  }, r.fn.extend({ fadeTo: function fadeTo(a, b, c, d) {
	      return this.filter(ca).css("opacity", 0).show().end().animate({ opacity: b }, a, c, d);
	    }, animate: function animate(a, b, c, d) {
	      var e = r.isEmptyObject(a),
	          f = r.speed(b, c, d),
	          g = function g() {
	        var b = hb(this, r.extend({}, a), f);(e || V.get(this, "finish")) && b.stop(!0);
	      };return g.finish = g, e || f.queue === !1 ? this.each(g) : this.queue(f.queue, g);
	    }, stop: function stop(a, b, c) {
	      var d = function d(a) {
	        var b = a.stop;delete a.stop, b(c);
	      };return "string" != typeof a && (c = b, b = a, a = void 0), b && a !== !1 && this.queue(a || "fx", []), this.each(function () {
	        var b = !0,
	            e = null != a && a + "queueHooks",
	            f = r.timers,
	            g = V.get(this);if (e) g[e] && g[e].stop && d(g[e]);else for (e in g) {
	          g[e] && g[e].stop && ab.test(e) && d(g[e]);
	        }for (e = f.length; e--;) {
	          f[e].elem !== this || null != a && f[e].queue !== a || (f[e].anim.stop(c), b = !1, f.splice(e, 1));
	        }!b && c || r.dequeue(this, a);
	      });
	    }, finish: function finish(a) {
	      return a !== !1 && (a = a || "fx"), this.each(function () {
	        var b,
	            c = V.get(this),
	            d = c[a + "queue"],
	            e = c[a + "queueHooks"],
	            f = r.timers,
	            g = d ? d.length : 0;for (c.finish = !0, r.queue(this, a, []), e && e.stop && e.stop.call(this, !0), b = f.length; b--;) {
	          f[b].elem === this && f[b].queue === a && (f[b].anim.stop(!0), f.splice(b, 1));
	        }for (b = 0; b < g; b++) {
	          d[b] && d[b].finish && d[b].finish.call(this);
	        }delete c.finish;
	      });
	    } }), r.each(["toggle", "show", "hide"], function (a, b) {
	    var c = r.fn[b];r.fn[b] = function (a, d, e) {
	      return null == a || "boolean" == typeof a ? c.apply(this, arguments) : this.animate(db(b, !0), a, d, e);
	    };
	  }), r.each({ slideDown: db("show"), slideUp: db("hide"), slideToggle: db("toggle"), fadeIn: { opacity: "show" }, fadeOut: { opacity: "hide" }, fadeToggle: { opacity: "toggle" } }, function (a, b) {
	    r.fn[a] = function (a, c, d) {
	      return this.animate(b, a, c, d);
	    };
	  }), r.timers = [], r.fx.tick = function () {
	    var a,
	        b = 0,
	        c = r.timers;for (Za = r.now(); b < c.length; b++) {
	      a = c[b], a() || c[b] !== a || c.splice(b--, 1);
	    }c.length || r.fx.stop(), Za = void 0;
	  }, r.fx.timer = function (a) {
	    r.timers.push(a), a() ? r.fx.start() : r.timers.pop();
	  }, r.fx.interval = 13, r.fx.start = function () {
	    $a || ($a = a.requestAnimationFrame ? a.requestAnimationFrame(bb) : a.setInterval(r.fx.tick, r.fx.interval));
	  }, r.fx.stop = function () {
	    a.cancelAnimationFrame ? a.cancelAnimationFrame($a) : a.clearInterval($a), $a = null;
	  }, r.fx.speeds = { slow: 600, fast: 200, _default: 400 }, r.fn.delay = function (b, c) {
	    return b = r.fx ? r.fx.speeds[b] || b : b, c = c || "fx", this.queue(c, function (c, d) {
	      var e = a.setTimeout(c, b);d.stop = function () {
	        a.clearTimeout(e);
	      };
	    });
	  }, function () {
	    var a = d.createElement("input"),
	        b = d.createElement("select"),
	        c = b.appendChild(d.createElement("option"));a.type = "checkbox", o.checkOn = "" !== a.value, o.optSelected = c.selected, a = d.createElement("input"), a.value = "t", a.type = "radio", o.radioValue = "t" === a.value;
	  }();var ib,
	      jb = r.expr.attrHandle;r.fn.extend({ attr: function attr(a, b) {
	      return S(this, r.attr, a, b, arguments.length > 1);
	    }, removeAttr: function removeAttr(a) {
	      return this.each(function () {
	        r.removeAttr(this, a);
	      });
	    } }), r.extend({ attr: function attr(a, b, c) {
	      var d,
	          e,
	          f = a.nodeType;if (3 !== f && 8 !== f && 2 !== f) return "undefined" == typeof a.getAttribute ? r.prop(a, b, c) : (1 === f && r.isXMLDoc(a) || (e = r.attrHooks[b.toLowerCase()] || (r.expr.match.bool.test(b) ? ib : void 0)), void 0 !== c ? null === c ? void r.removeAttr(a, b) : e && "set" in e && void 0 !== (d = e.set(a, c, b)) ? d : (a.setAttribute(b, c + ""), c) : e && "get" in e && null !== (d = e.get(a, b)) ? d : (d = r.find.attr(a, b), null == d ? void 0 : d));
	    }, attrHooks: { type: { set: function set(a, b) {
	          if (!o.radioValue && "radio" === b && r.nodeName(a, "input")) {
	            var c = a.value;return a.setAttribute("type", b), c && (a.value = c), b;
	          }
	        } } }, removeAttr: function removeAttr(a, b) {
	      var c,
	          d = 0,
	          e = b && b.match(K);if (e && 1 === a.nodeType) while (c = e[d++]) {
	        a.removeAttribute(c);
	      }
	    } }), ib = { set: function set(a, b, c) {
	      return b === !1 ? r.removeAttr(a, c) : a.setAttribute(c, c), c;
	    } }, r.each(r.expr.match.bool.source.match(/\w+/g), function (a, b) {
	    var c = jb[b] || r.find.attr;jb[b] = function (a, b, d) {
	      var e,
	          f,
	          g = b.toLowerCase();return d || (f = jb[g], jb[g] = e, e = null != c(a, b, d) ? g : null, jb[g] = f), e;
	    };
	  });var kb = /^(?:input|select|textarea|button)$/i,
	      lb = /^(?:a|area)$/i;r.fn.extend({ prop: function prop(a, b) {
	      return S(this, r.prop, a, b, arguments.length > 1);
	    }, removeProp: function removeProp(a) {
	      return this.each(function () {
	        delete this[r.propFix[a] || a];
	      });
	    } }), r.extend({ prop: function prop(a, b, c) {
	      var d,
	          e,
	          f = a.nodeType;if (3 !== f && 8 !== f && 2 !== f) return 1 === f && r.isXMLDoc(a) || (b = r.propFix[b] || b, e = r.propHooks[b]), void 0 !== c ? e && "set" in e && void 0 !== (d = e.set(a, c, b)) ? d : a[b] = c : e && "get" in e && null !== (d = e.get(a, b)) ? d : a[b];
	    }, propHooks: { tabIndex: { get: function get(a) {
	          var b = r.find.attr(a, "tabindex");return b ? parseInt(b, 10) : kb.test(a.nodeName) || lb.test(a.nodeName) && a.href ? 0 : -1;
	        } } }, propFix: { "for": "htmlFor", "class": "className" } }), o.optSelected || (r.propHooks.selected = { get: function get(a) {
	      var b = a.parentNode;return b && b.parentNode && b.parentNode.selectedIndex, null;
	    }, set: function set(a) {
	      var b = a.parentNode;b && (b.selectedIndex, b.parentNode && b.parentNode.selectedIndex);
	    } }), r.each(["tabIndex", "readOnly", "maxLength", "cellSpacing", "cellPadding", "rowSpan", "colSpan", "useMap", "frameBorder", "contentEditable"], function () {
	    r.propFix[this.toLowerCase()] = this;
	  });function mb(a) {
	    var b = a.match(K) || [];return b.join(" ");
	  }function nb(a) {
	    return a.getAttribute && a.getAttribute("class") || "";
	  }r.fn.extend({ addClass: function addClass(a) {
	      var b,
	          c,
	          d,
	          e,
	          f,
	          g,
	          h,
	          i = 0;if (r.isFunction(a)) return this.each(function (b) {
	        r(this).addClass(a.call(this, b, nb(this)));
	      });if ("string" == typeof a && a) {
	        b = a.match(K) || [];while (c = this[i++]) {
	          if (e = nb(c), d = 1 === c.nodeType && " " + mb(e) + " ") {
	            g = 0;while (f = b[g++]) {
	              d.indexOf(" " + f + " ") < 0 && (d += f + " ");
	            }h = mb(d), e !== h && c.setAttribute("class", h);
	          }
	        }
	      }return this;
	    }, removeClass: function removeClass(a) {
	      var b,
	          c,
	          d,
	          e,
	          f,
	          g,
	          h,
	          i = 0;if (r.isFunction(a)) return this.each(function (b) {
	        r(this).removeClass(a.call(this, b, nb(this)));
	      });if (!arguments.length) return this.attr("class", "");if ("string" == typeof a && a) {
	        b = a.match(K) || [];while (c = this[i++]) {
	          if (e = nb(c), d = 1 === c.nodeType && " " + mb(e) + " ") {
	            g = 0;while (f = b[g++]) {
	              while (d.indexOf(" " + f + " ") > -1) {
	                d = d.replace(" " + f + " ", " ");
	              }
	            }h = mb(d), e !== h && c.setAttribute("class", h);
	          }
	        }
	      }return this;
	    }, toggleClass: function toggleClass(a, b) {
	      var c = typeof a === "undefined" ? "undefined" : _typeof(a);return "boolean" == typeof b && "string" === c ? b ? this.addClass(a) : this.removeClass(a) : r.isFunction(a) ? this.each(function (c) {
	        r(this).toggleClass(a.call(this, c, nb(this), b), b);
	      }) : this.each(function () {
	        var b, d, e, f;if ("string" === c) {
	          d = 0, e = r(this), f = a.match(K) || [];while (b = f[d++]) {
	            e.hasClass(b) ? e.removeClass(b) : e.addClass(b);
	          }
	        } else void 0 !== a && "boolean" !== c || (b = nb(this), b && V.set(this, "__className__", b), this.setAttribute && this.setAttribute("class", b || a === !1 ? "" : V.get(this, "__className__") || ""));
	      });
	    }, hasClass: function hasClass(a) {
	      var b,
	          c,
	          d = 0;b = " " + a + " ";while (c = this[d++]) {
	        if (1 === c.nodeType && (" " + mb(nb(c)) + " ").indexOf(b) > -1) return !0;
	      }return !1;
	    } });var ob = /\r/g;r.fn.extend({ val: function val(a) {
	      var b,
	          c,
	          d,
	          e = this[0];{
	        if (arguments.length) return d = r.isFunction(a), this.each(function (c) {
	          var e;1 === this.nodeType && (e = d ? a.call(this, c, r(this).val()) : a, null == e ? e = "" : "number" == typeof e ? e += "" : r.isArray(e) && (e = r.map(e, function (a) {
	            return null == a ? "" : a + "";
	          })), b = r.valHooks[this.type] || r.valHooks[this.nodeName.toLowerCase()], b && "set" in b && void 0 !== b.set(this, e, "value") || (this.value = e));
	        });if (e) return b = r.valHooks[e.type] || r.valHooks[e.nodeName.toLowerCase()], b && "get" in b && void 0 !== (c = b.get(e, "value")) ? c : (c = e.value, "string" == typeof c ? c.replace(ob, "") : null == c ? "" : c);
	      }
	    } }), r.extend({ valHooks: { option: { get: function get(a) {
	          var b = r.find.attr(a, "value");return null != b ? b : mb(r.text(a));
	        } }, select: { get: function get(a) {
	          var b,
	              c,
	              d,
	              e = a.options,
	              f = a.selectedIndex,
	              g = "select-one" === a.type,
	              h = g ? null : [],
	              i = g ? f + 1 : e.length;for (d = f < 0 ? i : g ? f : 0; d < i; d++) {
	            if (c = e[d], (c.selected || d === f) && !c.disabled && (!c.parentNode.disabled || !r.nodeName(c.parentNode, "optgroup"))) {
	              if (b = r(c).val(), g) return b;h.push(b);
	            }
	          }return h;
	        }, set: function set(a, b) {
	          var c,
	              d,
	              e = a.options,
	              f = r.makeArray(b),
	              g = e.length;while (g--) {
	            d = e[g], (d.selected = r.inArray(r.valHooks.option.get(d), f) > -1) && (c = !0);
	          }return c || (a.selectedIndex = -1), f;
	        } } } }), r.each(["radio", "checkbox"], function () {
	    r.valHooks[this] = { set: function set(a, b) {
	        if (r.isArray(b)) return a.checked = r.inArray(r(a).val(), b) > -1;
	      } }, o.checkOn || (r.valHooks[this].get = function (a) {
	      return null === a.getAttribute("value") ? "on" : a.value;
	    });
	  });var pb = /^(?:focusinfocus|focusoutblur)$/;r.extend(r.event, { trigger: function trigger(b, c, e, f) {
	      var g,
	          h,
	          i,
	          j,
	          k,
	          m,
	          n,
	          o = [e || d],
	          p = l.call(b, "type") ? b.type : b,
	          q = l.call(b, "namespace") ? b.namespace.split(".") : [];if (h = i = e = e || d, 3 !== e.nodeType && 8 !== e.nodeType && !pb.test(p + r.event.triggered) && (p.indexOf(".") > -1 && (q = p.split("."), p = q.shift(), q.sort()), k = p.indexOf(":") < 0 && "on" + p, b = b[r.expando] ? b : new r.Event(p, "object" == (typeof b === "undefined" ? "undefined" : _typeof(b)) && b), b.isTrigger = f ? 2 : 3, b.namespace = q.join("."), b.rnamespace = b.namespace ? new RegExp("(^|\\.)" + q.join("\\.(?:.*\\.|)") + "(\\.|$)") : null, b.result = void 0, b.target || (b.target = e), c = null == c ? [b] : r.makeArray(c, [b]), n = r.event.special[p] || {}, f || !n.trigger || n.trigger.apply(e, c) !== !1)) {
	        if (!f && !n.noBubble && !r.isWindow(e)) {
	          for (j = n.delegateType || p, pb.test(j + p) || (h = h.parentNode); h; h = h.parentNode) {
	            o.push(h), i = h;
	          }i === (e.ownerDocument || d) && o.push(i.defaultView || i.parentWindow || a);
	        }g = 0;while ((h = o[g++]) && !b.isPropagationStopped()) {
	          b.type = g > 1 ? j : n.bindType || p, m = (V.get(h, "events") || {})[b.type] && V.get(h, "handle"), m && m.apply(h, c), m = k && h[k], m && m.apply && T(h) && (b.result = m.apply(h, c), b.result === !1 && b.preventDefault());
	        }return b.type = p, f || b.isDefaultPrevented() || n._default && n._default.apply(o.pop(), c) !== !1 || !T(e) || k && r.isFunction(e[p]) && !r.isWindow(e) && (i = e[k], i && (e[k] = null), r.event.triggered = p, e[p](), r.event.triggered = void 0, i && (e[k] = i)), b.result;
	      }
	    }, simulate: function simulate(a, b, c) {
	      var d = r.extend(new r.Event(), c, { type: a, isSimulated: !0 });r.event.trigger(d, null, b);
	    } }), r.fn.extend({ trigger: function trigger(a, b) {
	      return this.each(function () {
	        r.event.trigger(a, b, this);
	      });
	    }, triggerHandler: function triggerHandler(a, b) {
	      var c = this[0];if (c) return r.event.trigger(a, b, c, !0);
	    } }), r.each("blur focus focusin focusout resize scroll click dblclick mousedown mouseup mousemove mouseover mouseout mouseenter mouseleave change select submit keydown keypress keyup contextmenu".split(" "), function (a, b) {
	    r.fn[b] = function (a, c) {
	      return arguments.length > 0 ? this.on(b, null, a, c) : this.trigger(b);
	    };
	  }), r.fn.extend({ hover: function hover(a, b) {
	      return this.mouseenter(a).mouseleave(b || a);
	    } }), o.focusin = "onfocusin" in a, o.focusin || r.each({ focus: "focusin", blur: "focusout" }, function (a, b) {
	    var c = function c(a) {
	      r.event.simulate(b, a.target, r.event.fix(a));
	    };r.event.special[b] = { setup: function setup() {
	        var d = this.ownerDocument || this,
	            e = V.access(d, b);e || d.addEventListener(a, c, !0), V.access(d, b, (e || 0) + 1);
	      }, teardown: function teardown() {
	        var d = this.ownerDocument || this,
	            e = V.access(d, b) - 1;e ? V.access(d, b, e) : (d.removeEventListener(a, c, !0), V.remove(d, b));
	      } };
	  });var qb = a.location,
	      rb = r.now(),
	      sb = /\?/;r.parseXML = function (b) {
	    var c;if (!b || "string" != typeof b) return null;try {
	      c = new a.DOMParser().parseFromString(b, "text/xml");
	    } catch (d) {
	      c = void 0;
	    }return c && !c.getElementsByTagName("parsererror").length || r.error("Invalid XML: " + b), c;
	  };var tb = /\[\]$/,
	      ub = /\r?\n/g,
	      vb = /^(?:submit|button|image|reset|file)$/i,
	      wb = /^(?:input|select|textarea|keygen)/i;function xb(a, b, c, d) {
	    var e;if (r.isArray(b)) r.each(b, function (b, e) {
	      c || tb.test(a) ? d(a, e) : xb(a + "[" + ("object" == (typeof e === "undefined" ? "undefined" : _typeof(e)) && null != e ? b : "") + "]", e, c, d);
	    });else if (c || "object" !== r.type(b)) d(a, b);else for (e in b) {
	      xb(a + "[" + e + "]", b[e], c, d);
	    }
	  }r.param = function (a, b) {
	    var c,
	        d = [],
	        e = function e(a, b) {
	      var c = r.isFunction(b) ? b() : b;d[d.length] = encodeURIComponent(a) + "=" + encodeURIComponent(null == c ? "" : c);
	    };if (r.isArray(a) || a.jquery && !r.isPlainObject(a)) r.each(a, function () {
	      e(this.name, this.value);
	    });else for (c in a) {
	      xb(c, a[c], b, e);
	    }return d.join("&");
	  }, r.fn.extend({ serialize: function serialize() {
	      return r.param(this.serializeArray());
	    }, serializeArray: function serializeArray() {
	      return this.map(function () {
	        var a = r.prop(this, "elements");return a ? r.makeArray(a) : this;
	      }).filter(function () {
	        var a = this.type;return this.name && !r(this).is(":disabled") && wb.test(this.nodeName) && !vb.test(a) && (this.checked || !ia.test(a));
	      }).map(function (a, b) {
	        var c = r(this).val();return null == c ? null : r.isArray(c) ? r.map(c, function (a) {
	          return { name: b.name, value: a.replace(ub, "\r\n") };
	        }) : { name: b.name, value: c.replace(ub, "\r\n") };
	      }).get();
	    } });var yb = /%20/g,
	      zb = /#.*$/,
	      Ab = /([?&])_=[^&]*/,
	      Bb = /^(.*?):[ \t]*([^\r\n]*)$/gm,
	      Cb = /^(?:about|app|app-storage|.+-extension|file|res|widget):$/,
	      Db = /^(?:GET|HEAD)$/,
	      Eb = /^\/\//,
	      Fb = {},
	      Gb = {},
	      Hb = "*/".concat("*"),
	      Ib = d.createElement("a");Ib.href = qb.href;function Jb(a) {
	    return function (b, c) {
	      "string" != typeof b && (c = b, b = "*");var d,
	          e = 0,
	          f = b.toLowerCase().match(K) || [];if (r.isFunction(c)) while (d = f[e++]) {
	        "+" === d[0] ? (d = d.slice(1) || "*", (a[d] = a[d] || []).unshift(c)) : (a[d] = a[d] || []).push(c);
	      }
	    };
	  }function Kb(a, b, c, d) {
	    var e = {},
	        f = a === Gb;function g(h) {
	      var i;return e[h] = !0, r.each(a[h] || [], function (a, h) {
	        var j = h(b, c, d);return "string" != typeof j || f || e[j] ? f ? !(i = j) : void 0 : (b.dataTypes.unshift(j), g(j), !1);
	      }), i;
	    }return g(b.dataTypes[0]) || !e["*"] && g("*");
	  }function Lb(a, b) {
	    var c,
	        d,
	        e = r.ajaxSettings.flatOptions || {};for (c in b) {
	      void 0 !== b[c] && ((e[c] ? a : d || (d = {}))[c] = b[c]);
	    }return d && r.extend(!0, a, d), a;
	  }function Mb(a, b, c) {
	    var d,
	        e,
	        f,
	        g,
	        h = a.contents,
	        i = a.dataTypes;while ("*" === i[0]) {
	      i.shift(), void 0 === d && (d = a.mimeType || b.getResponseHeader("Content-Type"));
	    }if (d) for (e in h) {
	      if (h[e] && h[e].test(d)) {
	        i.unshift(e);break;
	      }
	    }if (i[0] in c) f = i[0];else {
	      for (e in c) {
	        if (!i[0] || a.converters[e + " " + i[0]]) {
	          f = e;break;
	        }g || (g = e);
	      }f = f || g;
	    }if (f) return f !== i[0] && i.unshift(f), c[f];
	  }function Nb(a, b, c, d) {
	    var e,
	        f,
	        g,
	        h,
	        i,
	        j = {},
	        k = a.dataTypes.slice();if (k[1]) for (g in a.converters) {
	      j[g.toLowerCase()] = a.converters[g];
	    }f = k.shift();while (f) {
	      if (a.responseFields[f] && (c[a.responseFields[f]] = b), !i && d && a.dataFilter && (b = a.dataFilter(b, a.dataType)), i = f, f = k.shift()) if ("*" === f) f = i;else if ("*" !== i && i !== f) {
	        if (g = j[i + " " + f] || j["* " + f], !g) for (e in j) {
	          if (h = e.split(" "), h[1] === f && (g = j[i + " " + h[0]] || j["* " + h[0]])) {
	            g === !0 ? g = j[e] : j[e] !== !0 && (f = h[0], k.unshift(h[1]));break;
	          }
	        }if (g !== !0) if (g && a["throws"]) b = g(b);else try {
	          b = g(b);
	        } catch (l) {
	          return { state: "parsererror", error: g ? l : "No conversion from " + i + " to " + f };
	        }
	      }
	    }return { state: "success", data: b };
	  }r.extend({ active: 0, lastModified: {}, etag: {}, ajaxSettings: { url: qb.href, type: "GET", isLocal: Cb.test(qb.protocol), global: !0, processData: !0, async: !0, contentType: "application/x-www-form-urlencoded; charset=UTF-8", accepts: { "*": Hb, text: "text/plain", html: "text/html", xml: "application/xml, text/xml", json: "application/json, text/javascript" }, contents: { xml: /\bxml\b/, html: /\bhtml/, json: /\bjson\b/ }, responseFields: { xml: "responseXML", text: "responseText", json: "responseJSON" }, converters: { "* text": String, "text html": !0, "text json": JSON.parse, "text xml": r.parseXML }, flatOptions: { url: !0, context: !0 } }, ajaxSetup: function ajaxSetup(a, b) {
	      return b ? Lb(Lb(a, r.ajaxSettings), b) : Lb(r.ajaxSettings, a);
	    }, ajaxPrefilter: Jb(Fb), ajaxTransport: Jb(Gb), ajax: function ajax(b, c) {
	      "object" == (typeof b === "undefined" ? "undefined" : _typeof(b)) && (c = b, b = void 0), c = c || {};var e,
	          f,
	          g,
	          h,
	          i,
	          j,
	          k,
	          l,
	          m,
	          n,
	          o = r.ajaxSetup({}, c),
	          p = o.context || o,
	          q = o.context && (p.nodeType || p.jquery) ? r(p) : r.event,
	          s = r.Deferred(),
	          t = r.Callbacks("once memory"),
	          u = o.statusCode || {},
	          v = {},
	          w = {},
	          x = "canceled",
	          y = { readyState: 0, getResponseHeader: function getResponseHeader(a) {
	          var b;if (k) {
	            if (!h) {
	              h = {};while (b = Bb.exec(g)) {
	                h[b[1].toLowerCase()] = b[2];
	              }
	            }b = h[a.toLowerCase()];
	          }return null == b ? null : b;
	        }, getAllResponseHeaders: function getAllResponseHeaders() {
	          return k ? g : null;
	        }, setRequestHeader: function setRequestHeader(a, b) {
	          return null == k && (a = w[a.toLowerCase()] = w[a.toLowerCase()] || a, v[a] = b), this;
	        }, overrideMimeType: function overrideMimeType(a) {
	          return null == k && (o.mimeType = a), this;
	        }, statusCode: function statusCode(a) {
	          var b;if (a) if (k) y.always(a[y.status]);else for (b in a) {
	            u[b] = [u[b], a[b]];
	          }return this;
	        }, abort: function abort(a) {
	          var b = a || x;return e && e.abort(b), A(0, b), this;
	        } };if (s.promise(y), o.url = ((b || o.url || qb.href) + "").replace(Eb, qb.protocol + "//"), o.type = c.method || c.type || o.method || o.type, o.dataTypes = (o.dataType || "*").toLowerCase().match(K) || [""], null == o.crossDomain) {
	        j = d.createElement("a");try {
	          j.href = o.url, j.href = j.href, o.crossDomain = Ib.protocol + "//" + Ib.host != j.protocol + "//" + j.host;
	        } catch (z) {
	          o.crossDomain = !0;
	        }
	      }if (o.data && o.processData && "string" != typeof o.data && (o.data = r.param(o.data, o.traditional)), Kb(Fb, o, c, y), k) return y;l = r.event && o.global, l && 0 === r.active++ && r.event.trigger("ajaxStart"), o.type = o.type.toUpperCase(), o.hasContent = !Db.test(o.type), f = o.url.replace(zb, ""), o.hasContent ? o.data && o.processData && 0 === (o.contentType || "").indexOf("application/x-www-form-urlencoded") && (o.data = o.data.replace(yb, "+")) : (n = o.url.slice(f.length), o.data && (f += (sb.test(f) ? "&" : "?") + o.data, delete o.data), o.cache === !1 && (f = f.replace(Ab, "$1"), n = (sb.test(f) ? "&" : "?") + "_=" + rb++ + n), o.url = f + n), o.ifModified && (r.lastModified[f] && y.setRequestHeader("If-Modified-Since", r.lastModified[f]), r.etag[f] && y.setRequestHeader("If-None-Match", r.etag[f])), (o.data && o.hasContent && o.contentType !== !1 || c.contentType) && y.setRequestHeader("Content-Type", o.contentType), y.setRequestHeader("Accept", o.dataTypes[0] && o.accepts[o.dataTypes[0]] ? o.accepts[o.dataTypes[0]] + ("*" !== o.dataTypes[0] ? ", " + Hb + "; q=0.01" : "") : o.accepts["*"]);for (m in o.headers) {
	        y.setRequestHeader(m, o.headers[m]);
	      }if (o.beforeSend && (o.beforeSend.call(p, y, o) === !1 || k)) return y.abort();if (x = "abort", t.add(o.complete), y.done(o.success), y.fail(o.error), e = Kb(Gb, o, c, y)) {
	        if (y.readyState = 1, l && q.trigger("ajaxSend", [y, o]), k) return y;o.async && o.timeout > 0 && (i = a.setTimeout(function () {
	          y.abort("timeout");
	        }, o.timeout));try {
	          k = !1, e.send(v, A);
	        } catch (z) {
	          if (k) throw z;A(-1, z);
	        }
	      } else A(-1, "No Transport");function A(b, c, d, h) {
	        var j,
	            m,
	            n,
	            v,
	            w,
	            x = c;k || (k = !0, i && a.clearTimeout(i), e = void 0, g = h || "", y.readyState = b > 0 ? 4 : 0, j = b >= 200 && b < 300 || 304 === b, d && (v = Mb(o, y, d)), v = Nb(o, v, y, j), j ? (o.ifModified && (w = y.getResponseHeader("Last-Modified"), w && (r.lastModified[f] = w), w = y.getResponseHeader("etag"), w && (r.etag[f] = w)), 204 === b || "HEAD" === o.type ? x = "nocontent" : 304 === b ? x = "notmodified" : (x = v.state, m = v.data, n = v.error, j = !n)) : (n = x, !b && x || (x = "error", b < 0 && (b = 0))), y.status = b, y.statusText = (c || x) + "", j ? s.resolveWith(p, [m, x, y]) : s.rejectWith(p, [y, x, n]), y.statusCode(u), u = void 0, l && q.trigger(j ? "ajaxSuccess" : "ajaxError", [y, o, j ? m : n]), t.fireWith(p, [y, x]), l && (q.trigger("ajaxComplete", [y, o]), --r.active || r.event.trigger("ajaxStop")));
	      }return y;
	    }, getJSON: function getJSON(a, b, c) {
	      return r.get(a, b, c, "json");
	    }, getScript: function getScript(a, b) {
	      return r.get(a, void 0, b, "script");
	    } }), r.each(["get", "post"], function (a, b) {
	    r[b] = function (a, c, d, e) {
	      return r.isFunction(c) && (e = e || d, d = c, c = void 0), r.ajax(r.extend({ url: a, type: b, dataType: e, data: c, success: d }, r.isPlainObject(a) && a));
	    };
	  }), r._evalUrl = function (a) {
	    return r.ajax({ url: a, type: "GET", dataType: "script", cache: !0, async: !1, global: !1, "throws": !0 });
	  }, r.fn.extend({ wrapAll: function wrapAll(a) {
	      var b;return this[0] && (r.isFunction(a) && (a = a.call(this[0])), b = r(a, this[0].ownerDocument).eq(0).clone(!0), this[0].parentNode && b.insertBefore(this[0]), b.map(function () {
	        var a = this;while (a.firstElementChild) {
	          a = a.firstElementChild;
	        }return a;
	      }).append(this)), this;
	    }, wrapInner: function wrapInner(a) {
	      return r.isFunction(a) ? this.each(function (b) {
	        r(this).wrapInner(a.call(this, b));
	      }) : this.each(function () {
	        var b = r(this),
	            c = b.contents();c.length ? c.wrapAll(a) : b.append(a);
	      });
	    }, wrap: function wrap(a) {
	      var b = r.isFunction(a);return this.each(function (c) {
	        r(this).wrapAll(b ? a.call(this, c) : a);
	      });
	    }, unwrap: function unwrap(a) {
	      return this.parent(a).not("body").each(function () {
	        r(this).replaceWith(this.childNodes);
	      }), this;
	    } }), r.expr.pseudos.hidden = function (a) {
	    return !r.expr.pseudos.visible(a);
	  }, r.expr.pseudos.visible = function (a) {
	    return !!(a.offsetWidth || a.offsetHeight || a.getClientRects().length);
	  }, r.ajaxSettings.xhr = function () {
	    try {
	      return new a.XMLHttpRequest();
	    } catch (b) {}
	  };var Ob = { 0: 200, 1223: 204 },
	      Pb = r.ajaxSettings.xhr();o.cors = !!Pb && "withCredentials" in Pb, o.ajax = Pb = !!Pb, r.ajaxTransport(function (b) {
	    var _c, d;if (o.cors || Pb && !b.crossDomain) return { send: function send(e, f) {
	        var g,
	            h = b.xhr();if (h.open(b.type, b.url, b.async, b.username, b.password), b.xhrFields) for (g in b.xhrFields) {
	          h[g] = b.xhrFields[g];
	        }b.mimeType && h.overrideMimeType && h.overrideMimeType(b.mimeType), b.crossDomain || e["X-Requested-With"] || (e["X-Requested-With"] = "XMLHttpRequest");for (g in e) {
	          h.setRequestHeader(g, e[g]);
	        }_c = function c(a) {
	          return function () {
	            _c && (_c = d = h.onload = h.onerror = h.onabort = h.onreadystatechange = null, "abort" === a ? h.abort() : "error" === a ? "number" != typeof h.status ? f(0, "error") : f(h.status, h.statusText) : f(Ob[h.status] || h.status, h.statusText, "text" !== (h.responseType || "text") || "string" != typeof h.responseText ? { binary: h.response } : { text: h.responseText }, h.getAllResponseHeaders()));
	          };
	        }, h.onload = _c(), d = h.onerror = _c("error"), void 0 !== h.onabort ? h.onabort = d : h.onreadystatechange = function () {
	          4 === h.readyState && a.setTimeout(function () {
	            _c && d();
	          });
	        }, _c = _c("abort");try {
	          h.send(b.hasContent && b.data || null);
	        } catch (i) {
	          if (_c) throw i;
	        }
	      }, abort: function abort() {
	        _c && _c();
	      } };
	  }), r.ajaxPrefilter(function (a) {
	    a.crossDomain && (a.contents.script = !1);
	  }), r.ajaxSetup({ accepts: { script: "text/javascript, application/javascript, application/ecmascript, application/x-ecmascript" }, contents: { script: /\b(?:java|ecma)script\b/ }, converters: { "text script": function textScript(a) {
	        return r.globalEval(a), a;
	      } } }), r.ajaxPrefilter("script", function (a) {
	    void 0 === a.cache && (a.cache = !1), a.crossDomain && (a.type = "GET");
	  }), r.ajaxTransport("script", function (a) {
	    if (a.crossDomain) {
	      var b, _c2;return { send: function send(e, f) {
	          b = r("<script>").prop({ charset: a.scriptCharset, src: a.url }).on("load error", _c2 = function c(a) {
	            b.remove(), _c2 = null, a && f("error" === a.type ? 404 : 200, a.type);
	          }), d.head.appendChild(b[0]);
	        }, abort: function abort() {
	          _c2 && _c2();
	        } };
	    }
	  });var Qb = [],
	      Rb = /(=)\?(?=&|$)|\?\?/;r.ajaxSetup({ jsonp: "callback", jsonpCallback: function jsonpCallback() {
	      var a = Qb.pop() || r.expando + "_" + rb++;return this[a] = !0, a;
	    } }), r.ajaxPrefilter("json jsonp", function (b, c, d) {
	    var e,
	        f,
	        g,
	        h = b.jsonp !== !1 && (Rb.test(b.url) ? "url" : "string" == typeof b.data && 0 === (b.contentType || "").indexOf("application/x-www-form-urlencoded") && Rb.test(b.data) && "data");if (h || "jsonp" === b.dataTypes[0]) return e = b.jsonpCallback = r.isFunction(b.jsonpCallback) ? b.jsonpCallback() : b.jsonpCallback, h ? b[h] = b[h].replace(Rb, "$1" + e) : b.jsonp !== !1 && (b.url += (sb.test(b.url) ? "&" : "?") + b.jsonp + "=" + e), b.converters["script json"] = function () {
	      return g || r.error(e + " was not called"), g[0];
	    }, b.dataTypes[0] = "json", f = a[e], a[e] = function () {
	      g = arguments;
	    }, d.always(function () {
	      void 0 === f ? r(a).removeProp(e) : a[e] = f, b[e] && (b.jsonpCallback = c.jsonpCallback, Qb.push(e)), g && r.isFunction(f) && f(g[0]), g = f = void 0;
	    }), "script";
	  }), o.createHTMLDocument = function () {
	    var a = d.implementation.createHTMLDocument("").body;return a.innerHTML = "<form></form><form></form>", 2 === a.childNodes.length;
	  }(), r.parseHTML = function (a, b, c) {
	    if ("string" != typeof a) return [];"boolean" == typeof b && (c = b, b = !1);var e, f, g;return b || (o.createHTMLDocument ? (b = d.implementation.createHTMLDocument(""), e = b.createElement("base"), e.href = d.location.href, b.head.appendChild(e)) : b = d), f = B.exec(a), g = !c && [], f ? [b.createElement(f[1])] : (f = pa([a], b, g), g && g.length && r(g).remove(), r.merge([], f.childNodes));
	  }, r.fn.load = function (a, b, c) {
	    var d,
	        e,
	        f,
	        g = this,
	        h = a.indexOf(" ");return h > -1 && (d = mb(a.slice(h)), a = a.slice(0, h)), r.isFunction(b) ? (c = b, b = void 0) : b && "object" == (typeof b === "undefined" ? "undefined" : _typeof(b)) && (e = "POST"), g.length > 0 && r.ajax({ url: a, type: e || "GET", dataType: "html", data: b }).done(function (a) {
	      f = arguments, g.html(d ? r("<div>").append(r.parseHTML(a)).find(d) : a);
	    }).always(c && function (a, b) {
	      g.each(function () {
	        c.apply(this, f || [a.responseText, b, a]);
	      });
	    }), this;
	  }, r.each(["ajaxStart", "ajaxStop", "ajaxComplete", "ajaxError", "ajaxSuccess", "ajaxSend"], function (a, b) {
	    r.fn[b] = function (a) {
	      return this.on(b, a);
	    };
	  }), r.expr.pseudos.animated = function (a) {
	    return r.grep(r.timers, function (b) {
	      return a === b.elem;
	    }).length;
	  };function Sb(a) {
	    return r.isWindow(a) ? a : 9 === a.nodeType && a.defaultView;
	  }r.offset = { setOffset: function setOffset(a, b, c) {
	      var d,
	          e,
	          f,
	          g,
	          h,
	          i,
	          j,
	          k = r.css(a, "position"),
	          l = r(a),
	          m = {};"static" === k && (a.style.position = "relative"), h = l.offset(), f = r.css(a, "top"), i = r.css(a, "left"), j = ("absolute" === k || "fixed" === k) && (f + i).indexOf("auto") > -1, j ? (d = l.position(), g = d.top, e = d.left) : (g = parseFloat(f) || 0, e = parseFloat(i) || 0), r.isFunction(b) && (b = b.call(a, c, r.extend({}, h))), null != b.top && (m.top = b.top - h.top + g), null != b.left && (m.left = b.left - h.left + e), "using" in b ? b.using.call(a, m) : l.css(m);
	    } }, r.fn.extend({ offset: function offset(a) {
	      if (arguments.length) return void 0 === a ? this : this.each(function (b) {
	        r.offset.setOffset(this, a, b);
	      });var b,
	          c,
	          d,
	          e,
	          f = this[0];if (f) return f.getClientRects().length ? (d = f.getBoundingClientRect(), d.width || d.height ? (e = f.ownerDocument, c = Sb(e), b = e.documentElement, { top: d.top + c.pageYOffset - b.clientTop, left: d.left + c.pageXOffset - b.clientLeft }) : d) : { top: 0, left: 0 };
	    }, position: function position() {
	      if (this[0]) {
	        var a,
	            b,
	            c = this[0],
	            d = { top: 0, left: 0 };return "fixed" === r.css(c, "position") ? b = c.getBoundingClientRect() : (a = this.offsetParent(), b = this.offset(), r.nodeName(a[0], "html") || (d = a.offset()), d = { top: d.top + r.css(a[0], "borderTopWidth", !0), left: d.left + r.css(a[0], "borderLeftWidth", !0) }), { top: b.top - d.top - r.css(c, "marginTop", !0), left: b.left - d.left - r.css(c, "marginLeft", !0) };
	      }
	    }, offsetParent: function offsetParent() {
	      return this.map(function () {
	        var a = this.offsetParent;while (a && "static" === r.css(a, "position")) {
	          a = a.offsetParent;
	        }return a || qa;
	      });
	    } }), r.each({ scrollLeft: "pageXOffset", scrollTop: "pageYOffset" }, function (a, b) {
	    var c = "pageYOffset" === b;r.fn[a] = function (d) {
	      return S(this, function (a, d, e) {
	        var f = Sb(a);return void 0 === e ? f ? f[b] : a[d] : void (f ? f.scrollTo(c ? f.pageXOffset : e, c ? e : f.pageYOffset) : a[d] = e);
	      }, a, d, arguments.length);
	    };
	  }), r.each(["top", "left"], function (a, b) {
	    r.cssHooks[b] = Oa(o.pixelPosition, function (a, c) {
	      if (c) return c = Na(a, b), La.test(c) ? r(a).position()[b] + "px" : c;
	    });
	  }), r.each({ Height: "height", Width: "width" }, function (a, b) {
	    r.each({ padding: "inner" + a, content: b, "": "outer" + a }, function (c, d) {
	      r.fn[d] = function (e, f) {
	        var g = arguments.length && (c || "boolean" != typeof e),
	            h = c || (e === !0 || f === !0 ? "margin" : "border");return S(this, function (b, c, e) {
	          var f;return r.isWindow(b) ? 0 === d.indexOf("outer") ? b["inner" + a] : b.document.documentElement["client" + a] : 9 === b.nodeType ? (f = b.documentElement, Math.max(b.body["scroll" + a], f["scroll" + a], b.body["offset" + a], f["offset" + a], f["client" + a])) : void 0 === e ? r.css(b, c, h) : r.style(b, c, e, h);
	        }, b, g ? e : void 0, g);
	      };
	    });
	  }), r.fn.extend({ bind: function bind(a, b, c) {
	      return this.on(a, null, b, c);
	    }, unbind: function unbind(a, b) {
	      return this.off(a, null, b);
	    }, delegate: function delegate(a, b, c, d) {
	      return this.on(b, a, c, d);
	    }, undelegate: function undelegate(a, b, c) {
	      return 1 === arguments.length ? this.off(a, "**") : this.off(b, a || "**", c);
	    } }), r.parseJSON = JSON.parse, "function" == "function" && __webpack_require__(10) && !(__WEBPACK_AMD_DEFINE_ARRAY__ = [], __WEBPACK_AMD_DEFINE_RESULT__ = function () {
	    return r;
	  }.apply(exports, __WEBPACK_AMD_DEFINE_ARRAY__), __WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));var Tb = a.jQuery,
	      Ub = a.$;return r.noConflict = function (b) {
	    return a.$ === r && (a.$ = Ub), b && a.jQuery === r && (a.jQuery = Tb), r;
	  }, b || (a.jQuery = a.$ = r), r;
	});
	/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(9)(module)))

/***/ },
/* 9 */
/***/ function(module, exports) {

	module.exports = function(module) {
		if(!module.webpackPolyfill) {
			module.deprecate = function() {};
			module.paths = [];
			// module.parent = undefined by default
			module.children = [];
			module.webpackPolyfill = 1;
		}
		return module;
	}


/***/ },
/* 10 */
/***/ function(module, exports) {

	/* WEBPACK VAR INJECTION */(function(__webpack_amd_options__) {module.exports = __webpack_amd_options__;

	/* WEBPACK VAR INJECTION */}.call(exports, {}))

/***/ },
/* 11 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';

	__webpack_require__(12);
	module.exports = 'ngFileUpload';

/***/ },
/* 12 */
/***/ function(module, exports) {

	'use strict';

	/**!
	 * AngularJS file upload directives and services. Supports: file upload/drop/paste, resume, cancel/abort,
	 * progress, resize, thumbnail, preview, validation and CORS
	 * FileAPI Flash shim for old browsers not supporting FormData
	 * @author  Danial  <danial.farid@gmail.com>
	 * @version 12.2.13
	 */

	(function () {
	  /** @namespace FileAPI.noContentTimeout */

	  function patchXHR(fnName, newFn) {
	    window.XMLHttpRequest.prototype[fnName] = newFn(window.XMLHttpRequest.prototype[fnName]);
	  }

	  function redefineProp(xhr, prop, fn) {
	    try {
	      Object.defineProperty(xhr, prop, { get: fn });
	    } catch (e) {/*ignore*/
	    }
	  }

	  if (!window.FileAPI) {
	    window.FileAPI = {};
	  }

	  if (!window.XMLHttpRequest) {
	    throw 'AJAX is not supported. XMLHttpRequest is not defined.';
	  }

	  FileAPI.shouldLoad = !window.FormData || FileAPI.forceLoad;
	  if (FileAPI.shouldLoad) {
	    var initializeUploadListener = function initializeUploadListener(xhr) {
	      if (!xhr.__listeners) {
	        if (!xhr.upload) xhr.upload = {};
	        xhr.__listeners = [];
	        var origAddEventListener = xhr.upload.addEventListener;
	        xhr.upload.addEventListener = function (t, fn) {
	          xhr.__listeners[t] = fn;
	          if (origAddEventListener) origAddEventListener.apply(this, arguments);
	        };
	      }
	    };

	    patchXHR('open', function (orig) {
	      return function (m, url, b) {
	        initializeUploadListener(this);
	        this.__url = url;
	        try {
	          orig.apply(this, [m, url, b]);
	        } catch (e) {
	          if (e.message.indexOf('Access is denied') > -1) {
	            this.__origError = e;
	            orig.apply(this, [m, '_fix_for_ie_crossdomain__', b]);
	          }
	        }
	      };
	    });

	    patchXHR('getResponseHeader', function (orig) {
	      return function (h) {
	        return this.__fileApiXHR && this.__fileApiXHR.getResponseHeader ? this.__fileApiXHR.getResponseHeader(h) : orig == null ? null : orig.apply(this, [h]);
	      };
	    });

	    patchXHR('getAllResponseHeaders', function (orig) {
	      return function () {
	        return this.__fileApiXHR && this.__fileApiXHR.getAllResponseHeaders ? this.__fileApiXHR.getAllResponseHeaders() : orig == null ? null : orig.apply(this);
	      };
	    });

	    patchXHR('abort', function (orig) {
	      return function () {
	        return this.__fileApiXHR && this.__fileApiXHR.abort ? this.__fileApiXHR.abort() : orig == null ? null : orig.apply(this);
	      };
	    });

	    patchXHR('setRequestHeader', function (orig) {
	      return function (header, value) {
	        if (header === '__setXHR_') {
	          initializeUploadListener(this);
	          var val = value(this);
	          // fix for angular < 1.2.0
	          if (val instanceof Function) {
	            val(this);
	          }
	        } else {
	          this.__requestHeaders = this.__requestHeaders || {};
	          this.__requestHeaders[header] = value;
	          orig.apply(this, arguments);
	        }
	      };
	    });

	    patchXHR('send', function (orig) {
	      return function () {
	        var xhr = this;
	        if (arguments[0] && arguments[0].__isFileAPIShim) {
	          var formData = arguments[0];
	          var config = {
	            url: xhr.__url,
	            jsonp: false, //removes the callback form param
	            cache: true, //removes the ?fileapiXXX in the url
	            complete: function complete(err, fileApiXHR) {
	              if (err && angular.isString(err) && err.indexOf('#2174') !== -1) {
	                // this error seems to be fine the file is being uploaded properly.
	                err = null;
	              }
	              xhr.__completed = true;
	              if (!err && xhr.__listeners.load) xhr.__listeners.load({
	                type: 'load',
	                loaded: xhr.__loaded,
	                total: xhr.__total,
	                target: xhr,
	                lengthComputable: true
	              });
	              if (!err && xhr.__listeners.loadend) xhr.__listeners.loadend({
	                type: 'loadend',
	                loaded: xhr.__loaded,
	                total: xhr.__total,
	                target: xhr,
	                lengthComputable: true
	              });
	              if (err === 'abort' && xhr.__listeners.abort) xhr.__listeners.abort({
	                type: 'abort',
	                loaded: xhr.__loaded,
	                total: xhr.__total,
	                target: xhr,
	                lengthComputable: true
	              });
	              if (fileApiXHR.status !== undefined) redefineProp(xhr, 'status', function () {
	                return fileApiXHR.status === 0 && err && err !== 'abort' ? 500 : fileApiXHR.status;
	              });
	              if (fileApiXHR.statusText !== undefined) redefineProp(xhr, 'statusText', function () {
	                return fileApiXHR.statusText;
	              });
	              redefineProp(xhr, 'readyState', function () {
	                return 4;
	              });
	              if (fileApiXHR.response !== undefined) redefineProp(xhr, 'response', function () {
	                return fileApiXHR.response;
	              });
	              var resp = fileApiXHR.responseText || (err && fileApiXHR.status === 0 && err !== 'abort' ? err : undefined);
	              redefineProp(xhr, 'responseText', function () {
	                return resp;
	              });
	              redefineProp(xhr, 'response', function () {
	                return resp;
	              });
	              if (err) redefineProp(xhr, 'err', function () {
	                return err;
	              });
	              xhr.__fileApiXHR = fileApiXHR;
	              if (xhr.onreadystatechange) xhr.onreadystatechange();
	              if (xhr.onload) xhr.onload();
	            },
	            progress: function progress(e) {
	              e.target = xhr;
	              if (xhr.__listeners.progress) xhr.__listeners.progress(e);
	              xhr.__total = e.total;
	              xhr.__loaded = e.loaded;
	              if (e.total === e.loaded) {
	                // fix flash issue that doesn't call complete if there is no response text from the server
	                var _this = this;
	                setTimeout(function () {
	                  if (!xhr.__completed) {
	                    xhr.getAllResponseHeaders = function () {};
	                    _this.complete(null, { status: 204, statusText: 'No Content' });
	                  }
	                }, FileAPI.noContentTimeout || 10000);
	              }
	            },
	            headers: xhr.__requestHeaders
	          };
	          config.data = {};
	          config.files = {};
	          for (var i = 0; i < formData.data.length; i++) {
	            var item = formData.data[i];
	            if (item.val != null && item.val.name != null && item.val.size != null && item.val.type != null) {
	              config.files[item.key] = item.val;
	            } else {
	              config.data[item.key] = item.val;
	            }
	          }

	          setTimeout(function () {
	            if (!FileAPI.hasFlash) {
	              throw 'Adode Flash Player need to be installed. To check ahead use "FileAPI.hasFlash"';
	            }
	            xhr.__fileApiXHR = FileAPI.upload(config);
	          }, 1);
	        } else {
	          if (this.__origError) {
	            throw this.__origError;
	          }
	          orig.apply(xhr, arguments);
	        }
	      };
	    });
	    window.XMLHttpRequest.__isFileAPIShim = true;
	    window.FormData = FormData = function FormData() {
	      return {
	        append: function append(key, val, name) {
	          if (val.__isFileAPIBlobShim) {
	            val = val.data[0];
	          }
	          this.data.push({
	            key: key,
	            val: val,
	            name: name
	          });
	        },
	        data: [],
	        __isFileAPIShim: true
	      };
	    };

	    window.Blob = Blob = function Blob(b) {
	      return {
	        data: b,
	        __isFileAPIBlobShim: true
	      };
	    };
	  }
	})();

	(function () {
	  /** @namespace FileAPI.forceLoad */
	  /** @namespace window.FileAPI.jsUrl */
	  /** @namespace window.FileAPI.jsPath */

	  function isInputTypeFile(elem) {
	    return elem[0].tagName.toLowerCase() === 'input' && elem.attr('type') && elem.attr('type').toLowerCase() === 'file';
	  }

	  function hasFlash() {
	    try {
	      var fo = new ActiveXObject('ShockwaveFlash.ShockwaveFlash');
	      if (fo) return true;
	    } catch (e) {
	      if (navigator.mimeTypes['application/x-shockwave-flash'] !== undefined) return true;
	    }
	    return false;
	  }

	  function getOffset(obj) {
	    var left = 0,
	        top = 0;

	    if (window.jQuery) {
	      return jQuery(obj).offset();
	    }

	    if (obj.offsetParent) {
	      do {
	        left += obj.offsetLeft - obj.scrollLeft;
	        top += obj.offsetTop - obj.scrollTop;
	        obj = obj.offsetParent;
	      } while (obj);
	    }
	    return {
	      left: left,
	      top: top
	    };
	  }

	  if (FileAPI.shouldLoad) {
	    FileAPI.hasFlash = hasFlash();

	    //load FileAPI
	    if (FileAPI.forceLoad) {
	      FileAPI.html5 = false;
	    }

	    if (!FileAPI.upload) {
	      var jsUrl,
	          basePath,
	          script = document.createElement('script'),
	          allScripts = document.getElementsByTagName('script'),
	          i,
	          index,
	          src;
	      if (window.FileAPI.jsUrl) {
	        jsUrl = window.FileAPI.jsUrl;
	      } else if (window.FileAPI.jsPath) {
	        basePath = window.FileAPI.jsPath;
	      } else {
	        for (i = 0; i < allScripts.length; i++) {
	          src = allScripts[i].src;
	          index = src.search(/\/ng\-file\-upload[\-a-zA-z0-9\.]*\.js/);
	          if (index > -1) {
	            basePath = src.substring(0, index + 1);
	            break;
	          }
	        }
	      }

	      if (FileAPI.staticPath == null) FileAPI.staticPath = basePath;
	      script.setAttribute('src', jsUrl || basePath + 'FileAPI.min.js');
	      document.getElementsByTagName('head')[0].appendChild(script);
	    }

	    FileAPI.ngfFixIE = function (elem, fileElem, changeFn) {
	      if (!hasFlash()) {
	        throw 'Adode Flash Player need to be installed. To check ahead use "FileAPI.hasFlash"';
	      }
	      var fixInputStyle = function fixInputStyle() {
	        var label = fileElem.parent();
	        if (elem.attr('disabled')) {
	          if (label) label.removeClass('js-fileapi-wrapper');
	        } else {
	          if (!fileElem.attr('__ngf_flash_')) {
	            fileElem.unbind('change');
	            fileElem.unbind('click');
	            fileElem.bind('change', function (evt) {
	              fileApiChangeFn.apply(this, [evt]);
	              changeFn.apply(this, [evt]);
	            });
	            fileElem.attr('__ngf_flash_', 'true');
	          }
	          label.addClass('js-fileapi-wrapper');
	          if (!isInputTypeFile(elem)) {
	            label.css('position', 'absolute').css('top', getOffset(elem[0]).top + 'px').css('left', getOffset(elem[0]).left + 'px').css('width', elem[0].offsetWidth + 'px').css('height', elem[0].offsetHeight + 'px').css('filter', 'alpha(opacity=0)').css('display', elem.css('display')).css('overflow', 'hidden').css('z-index', '900000').css('visibility', 'visible');
	            fileElem.css('width', elem[0].offsetWidth + 'px').css('height', elem[0].offsetHeight + 'px').css('position', 'absolute').css('top', '0px').css('left', '0px');
	          }
	        }
	      };

	      elem.bind('mouseenter', fixInputStyle);

	      var fileApiChangeFn = function fileApiChangeFn(evt) {
	        var files = FileAPI.getFiles(evt);
	        //just a double check for #233
	        for (var i = 0; i < files.length; i++) {
	          if (files[i].size === undefined) files[i].size = 0;
	          if (files[i].name === undefined) files[i].name = 'file';
	          if (files[i].type === undefined) files[i].type = 'undefined';
	        }
	        if (!evt.target) {
	          evt.target = {};
	        }
	        evt.target.files = files;
	        // if evt.target.files is not writable use helper field
	        if (evt.target.files !== files) {
	          evt.__files_ = files;
	        }
	        (evt.__files_ || evt.target.files).item = function (i) {
	          return (evt.__files_ || evt.target.files)[i] || null;
	        };
	      };
	    };

	    FileAPI.disableFileInput = function (elem, disable) {
	      if (disable) {
	        elem.removeClass('js-fileapi-wrapper');
	      } else {
	        elem.addClass('js-fileapi-wrapper');
	      }
	    };
	  }
	})();

	if (!window.FileReader) {
	  window.FileReader = function () {
	    var _this = this,
	        loadStarted = false;
	    this.listeners = {};
	    this.addEventListener = function (type, fn) {
	      _this.listeners[type] = _this.listeners[type] || [];
	      _this.listeners[type].push(fn);
	    };
	    this.removeEventListener = function (type, fn) {
	      if (_this.listeners[type]) _this.listeners[type].splice(_this.listeners[type].indexOf(fn), 1);
	    };
	    this.dispatchEvent = function (evt) {
	      var list = _this.listeners[evt.type];
	      if (list) {
	        for (var i = 0; i < list.length; i++) {
	          list[i].call(_this, evt);
	        }
	      }
	    };
	    this.onabort = this.onerror = this.onload = this.onloadstart = this.onloadend = this.onprogress = null;

	    var constructEvent = function constructEvent(type, evt) {
	      var e = { type: type, target: _this, loaded: evt.loaded, total: evt.total, error: evt.error };
	      if (evt.result != null) e.target.result = evt.result;
	      return e;
	    };
	    var listener = function listener(evt) {
	      if (!loadStarted) {
	        loadStarted = true;
	        if (_this.onloadstart) _this.onloadstart(constructEvent('loadstart', evt));
	      }
	      var e;
	      if (evt.type === 'load') {
	        if (_this.onloadend) _this.onloadend(constructEvent('loadend', evt));
	        e = constructEvent('load', evt);
	        if (_this.onload) _this.onload(e);
	        _this.dispatchEvent(e);
	      } else if (evt.type === 'progress') {
	        e = constructEvent('progress', evt);
	        if (_this.onprogress) _this.onprogress(e);
	        _this.dispatchEvent(e);
	      } else {
	        e = constructEvent('error', evt);
	        if (_this.onerror) _this.onerror(e);
	        _this.dispatchEvent(e);
	      }
	    };
	    this.readAsDataURL = function (file) {
	      FileAPI.readAsDataURL(file, listener);
	    };
	    this.readAsText = function (file) {
	      FileAPI.readAsText(file, listener);
	    };
	  };
	}

	/**!
	 * AngularJS file upload directives and services. Supoorts: file upload/drop/paste, resume, cancel/abort,
	 * progress, resize, thumbnail, preview, validation and CORS
	 * @author  Danial  <danial.farid@gmail.com>
	 * @version 12.2.13
	 */

	if (window.XMLHttpRequest && !(window.FileAPI && FileAPI.shouldLoad)) {
	  window.XMLHttpRequest.prototype.setRequestHeader = function (orig) {
	    return function (header, value) {
	      if (header === '__setXHR_') {
	        var val = value(this);
	        // fix for angular < 1.2.0
	        if (val instanceof Function) {
	          val(this);
	        }
	      } else {
	        orig.apply(this, arguments);
	      }
	    };
	  }(window.XMLHttpRequest.prototype.setRequestHeader);
	}

	var ngFileUpload = angular.module('ngFileUpload', []);

	ngFileUpload.version = '12.2.13';

	ngFileUpload.service('UploadBase', ['$http', '$q', '$timeout', function ($http, $q, $timeout) {
	  var upload = this;
	  upload.promisesCount = 0;

	  this.isResumeSupported = function () {
	    return window.Blob && window.Blob.prototype.slice;
	  };

	  var resumeSupported = this.isResumeSupported();

	  function sendHttp(config) {
	    config.method = config.method || 'POST';
	    config.headers = config.headers || {};

	    var deferred = config._deferred = config._deferred || $q.defer();
	    var promise = deferred.promise;

	    function notifyProgress(e) {
	      if (deferred.notify) {
	        deferred.notify(e);
	      }
	      if (promise.progressFunc) {
	        $timeout(function () {
	          promise.progressFunc(e);
	        });
	      }
	    }

	    function getNotifyEvent(n) {
	      if (config._start != null && resumeSupported) {
	        return {
	          loaded: n.loaded + config._start,
	          total: config._file && config._file.size || n.total,
	          type: n.type, config: config,
	          lengthComputable: true, target: n.target
	        };
	      } else {
	        return n;
	      }
	    }

	    if (!config.disableProgress) {
	      config.headers.__setXHR_ = function () {
	        return function (xhr) {
	          if (!xhr || !xhr.upload || !xhr.upload.addEventListener) return;
	          config.__XHR = xhr;
	          if (config.xhrFn) config.xhrFn(xhr);
	          xhr.upload.addEventListener('progress', function (e) {
	            e.config = config;
	            notifyProgress(getNotifyEvent(e));
	          }, false);
	          //fix for firefox not firing upload progress end, also IE8-9
	          xhr.upload.addEventListener('load', function (e) {
	            if (e.lengthComputable) {
	              e.config = config;
	              notifyProgress(getNotifyEvent(e));
	            }
	          }, false);
	        };
	      };
	    }

	    function uploadWithAngular() {
	      $http(config).then(function (r) {
	        if (resumeSupported && config._chunkSize && !config._finished && config._file) {
	          var fileSize = config._file && config._file.size || 0;
	          notifyProgress({
	            loaded: Math.min(config._end, fileSize),
	            total: fileSize,
	            config: config,
	            type: 'progress'
	          });
	          upload.upload(config, true);
	        } else {
	          if (config._finished) delete config._finished;
	          deferred.resolve(r);
	        }
	      }, function (e) {
	        deferred.reject(e);
	      }, function (n) {
	        deferred.notify(n);
	      });
	    }

	    if (!resumeSupported) {
	      uploadWithAngular();
	    } else if (config._chunkSize && config._end && !config._finished) {
	      config._start = config._end;
	      config._end += config._chunkSize;
	      uploadWithAngular();
	    } else if (config.resumeSizeUrl) {
	      $http.get(config.resumeSizeUrl).then(function (resp) {
	        if (config.resumeSizeResponseReader) {
	          config._start = config.resumeSizeResponseReader(resp.data);
	        } else {
	          config._start = parseInt((resp.data.size == null ? resp.data : resp.data.size).toString());
	        }
	        if (config._chunkSize) {
	          config._end = config._start + config._chunkSize;
	        }
	        uploadWithAngular();
	      }, function (e) {
	        throw e;
	      });
	    } else if (config.resumeSize) {
	      config.resumeSize().then(function (size) {
	        config._start = size;
	        if (config._chunkSize) {
	          config._end = config._start + config._chunkSize;
	        }
	        uploadWithAngular();
	      }, function (e) {
	        throw e;
	      });
	    } else {
	      if (config._chunkSize) {
	        config._start = 0;
	        config._end = config._start + config._chunkSize;
	      }
	      uploadWithAngular();
	    }

	    promise.success = function (fn) {
	      promise.then(function (response) {
	        fn(response.data, response.status, response.headers, config);
	      });
	      return promise;
	    };

	    promise.error = function (fn) {
	      promise.then(null, function (response) {
	        fn(response.data, response.status, response.headers, config);
	      });
	      return promise;
	    };

	    promise.progress = function (fn) {
	      promise.progressFunc = fn;
	      promise.then(null, null, function (n) {
	        fn(n);
	      });
	      return promise;
	    };
	    promise.abort = promise.pause = function () {
	      if (config.__XHR) {
	        $timeout(function () {
	          config.__XHR.abort();
	        });
	      }
	      return promise;
	    };
	    promise.xhr = function (fn) {
	      config.xhrFn = function (origXhrFn) {
	        return function () {
	          if (origXhrFn) origXhrFn.apply(promise, arguments);
	          fn.apply(promise, arguments);
	        };
	      }(config.xhrFn);
	      return promise;
	    };

	    upload.promisesCount++;
	    if (promise['finally'] && promise['finally'] instanceof Function) {
	      promise['finally'](function () {
	        upload.promisesCount--;
	      });
	    }
	    return promise;
	  }

	  this.isUploadInProgress = function () {
	    return upload.promisesCount > 0;
	  };

	  this.rename = function (file, name) {
	    file.ngfName = name;
	    return file;
	  };

	  this.jsonBlob = function (val) {
	    if (val != null && !angular.isString(val)) {
	      val = JSON.stringify(val);
	    }
	    var blob = new window.Blob([val], { type: 'application/json' });
	    blob._ngfBlob = true;
	    return blob;
	  };

	  this.json = function (val) {
	    return angular.toJson(val);
	  };

	  function copy(obj) {
	    var clone = {};
	    for (var key in obj) {
	      if (obj.hasOwnProperty(key)) {
	        clone[key] = obj[key];
	      }
	    }
	    return clone;
	  }

	  this.isFile = function (file) {
	    return file != null && (file instanceof window.Blob || file.flashId && file.name && file.size);
	  };

	  this.upload = function (config, internal) {
	    function toResumeFile(file, formData) {
	      if (file._ngfBlob) return file;
	      config._file = config._file || file;
	      if (config._start != null && resumeSupported) {
	        if (config._end && config._end >= file.size) {
	          config._finished = true;
	          config._end = file.size;
	        }
	        var slice = file.slice(config._start, config._end || file.size);
	        slice.name = file.name;
	        slice.ngfName = file.ngfName;
	        if (config._chunkSize) {
	          formData.append('_chunkSize', config._chunkSize);
	          formData.append('_currentChunkSize', config._end - config._start);
	          formData.append('_chunkNumber', Math.floor(config._start / config._chunkSize));
	          formData.append('_totalSize', config._file.size);
	        }
	        return slice;
	      }
	      return file;
	    }

	    function addFieldToFormData(formData, val, key) {
	      if (val !== undefined) {
	        if (angular.isDate(val)) {
	          val = val.toISOString();
	        }
	        if (angular.isString(val)) {
	          formData.append(key, val);
	        } else if (upload.isFile(val)) {
	          var file = toResumeFile(val, formData);
	          var split = key.split(',');
	          if (split[1]) {
	            file.ngfName = split[1].replace(/^\s+|\s+$/g, '');
	            key = split[0];
	          }
	          config._fileKey = config._fileKey || key;
	          formData.append(key, file, file.ngfName || file.name);
	        } else {
	          if (angular.isObject(val)) {
	            if (val.$$ngfCircularDetection) throw 'ngFileUpload: Circular reference in config.data. Make sure specified data for Upload.upload() has no circular reference: ' + key;

	            val.$$ngfCircularDetection = true;
	            try {
	              for (var k in val) {
	                if (val.hasOwnProperty(k) && k !== '$$ngfCircularDetection') {
	                  var objectKey = config.objectKey == null ? '[i]' : config.objectKey;
	                  if (val.length && parseInt(k) > -1) {
	                    objectKey = config.arrayKey == null ? objectKey : config.arrayKey;
	                  }
	                  addFieldToFormData(formData, val[k], key + objectKey.replace(/[ik]/g, k));
	                }
	              }
	            } finally {
	              delete val.$$ngfCircularDetection;
	            }
	          } else {
	            formData.append(key, val);
	          }
	        }
	      }
	    }

	    function digestConfig() {
	      config._chunkSize = upload.translateScalars(config.resumeChunkSize);
	      config._chunkSize = config._chunkSize ? parseInt(config._chunkSize.toString()) : null;

	      config.headers = config.headers || {};
	      config.headers['Content-Type'] = undefined;
	      config.transformRequest = config.transformRequest ? angular.isArray(config.transformRequest) ? config.transformRequest : [config.transformRequest] : [];
	      config.transformRequest.push(function (data) {
	        var formData = new window.FormData(),
	            key;
	        data = data || config.fields || {};
	        if (config.file) {
	          data.file = config.file;
	        }
	        for (key in data) {
	          if (data.hasOwnProperty(key)) {
	            var val = data[key];
	            if (config.formDataAppender) {
	              config.formDataAppender(formData, key, val);
	            } else {
	              addFieldToFormData(formData, val, key);
	            }
	          }
	        }

	        return formData;
	      });
	    }

	    if (!internal) config = copy(config);
	    if (!config._isDigested) {
	      config._isDigested = true;
	      digestConfig();
	    }

	    return sendHttp(config);
	  };

	  this.http = function (config) {
	    config = copy(config);
	    config.transformRequest = config.transformRequest || function (data) {
	      if (window.ArrayBuffer && data instanceof window.ArrayBuffer || data instanceof window.Blob) {
	        return data;
	      }
	      return $http.defaults.transformRequest[0].apply(this, arguments);
	    };
	    config._chunkSize = upload.translateScalars(config.resumeChunkSize);
	    config._chunkSize = config._chunkSize ? parseInt(config._chunkSize.toString()) : null;

	    return sendHttp(config);
	  };

	  this.translateScalars = function (str) {
	    if (angular.isString(str)) {
	      if (str.search(/kb/i) === str.length - 2) {
	        return parseFloat(str.substring(0, str.length - 2) * 1024);
	      } else if (str.search(/mb/i) === str.length - 2) {
	        return parseFloat(str.substring(0, str.length - 2) * 1048576);
	      } else if (str.search(/gb/i) === str.length - 2) {
	        return parseFloat(str.substring(0, str.length - 2) * 1073741824);
	      } else if (str.search(/b/i) === str.length - 1) {
	        return parseFloat(str.substring(0, str.length - 1));
	      } else if (str.search(/s/i) === str.length - 1) {
	        return parseFloat(str.substring(0, str.length - 1));
	      } else if (str.search(/m/i) === str.length - 1) {
	        return parseFloat(str.substring(0, str.length - 1) * 60);
	      } else if (str.search(/h/i) === str.length - 1) {
	        return parseFloat(str.substring(0, str.length - 1) * 3600);
	      }
	    }
	    return str;
	  };

	  this.urlToBlob = function (url) {
	    var defer = $q.defer();
	    $http({ url: url, method: 'get', responseType: 'arraybuffer' }).then(function (resp) {
	      var arrayBufferView = new Uint8Array(resp.data);
	      var type = resp.headers('content-type') || 'image/WebP';
	      var blob = new window.Blob([arrayBufferView], { type: type });
	      var matches = url.match(/.*\/(.+?)(\?.*)?$/);
	      if (matches.length > 1) {
	        blob.name = matches[1];
	      }
	      defer.resolve(blob);
	    }, function (e) {
	      defer.reject(e);
	    });
	    return defer.promise;
	  };

	  this.setDefaults = function (defaults) {
	    this.defaults = defaults || {};
	  };

	  this.defaults = {};
	  this.version = ngFileUpload.version;
	}]);

	ngFileUpload.service('Upload', ['$parse', '$timeout', '$compile', '$q', 'UploadExif', function ($parse, $timeout, $compile, $q, UploadExif) {
	  var upload = UploadExif;
	  upload.getAttrWithDefaults = function (attr, name) {
	    if (attr[name] != null) return attr[name];
	    var def = upload.defaults[name];
	    return def == null ? def : angular.isString(def) ? def : JSON.stringify(def);
	  };

	  upload.attrGetter = function (name, attr, scope, params) {
	    var attrVal = this.getAttrWithDefaults(attr, name);
	    if (scope) {
	      try {
	        if (params) {
	          return $parse(attrVal)(scope, params);
	        } else {
	          return $parse(attrVal)(scope);
	        }
	      } catch (e) {
	        // hangle string value without single qoute
	        if (name.search(/min|max|pattern/i)) {
	          return attrVal;
	        } else {
	          throw e;
	        }
	      }
	    } else {
	      return attrVal;
	    }
	  };

	  upload.shouldUpdateOn = function (type, attr, scope) {
	    var modelOptions = upload.attrGetter('ngfModelOptions', attr, scope);
	    if (modelOptions && modelOptions.updateOn) {
	      return modelOptions.updateOn.split(' ').indexOf(type) > -1;
	    }
	    return true;
	  };

	  upload.emptyPromise = function () {
	    var d = $q.defer();
	    var args = arguments;
	    $timeout(function () {
	      d.resolve.apply(d, args);
	    });
	    return d.promise;
	  };

	  upload.rejectPromise = function () {
	    var d = $q.defer();
	    var args = arguments;
	    $timeout(function () {
	      d.reject.apply(d, args);
	    });
	    return d.promise;
	  };

	  upload.happyPromise = function (promise, data) {
	    var d = $q.defer();
	    promise.then(function (result) {
	      d.resolve(result);
	    }, function (error) {
	      $timeout(function () {
	        throw error;
	      });
	      d.resolve(data);
	    });
	    return d.promise;
	  };

	  function applyExifRotations(files, attr, scope) {
	    var promises = [upload.emptyPromise()];
	    angular.forEach(files, function (f, i) {
	      if (f.type.indexOf('image/jpeg') === 0 && upload.attrGetter('ngfFixOrientation', attr, scope, { $file: f })) {
	        promises.push(upload.happyPromise(upload.applyExifRotation(f), f).then(function (fixedFile) {
	          files.splice(i, 1, fixedFile);
	        }));
	      }
	    });
	    return $q.all(promises);
	  }

	  function resizeFile(files, attr, scope, ngModel) {
	    var resizeVal = upload.attrGetter('ngfResize', attr, scope);
	    if (!resizeVal || !upload.isResizeSupported() || !files.length) return upload.emptyPromise();
	    if (resizeVal instanceof Function) {
	      var defer = $q.defer();
	      return resizeVal(files).then(function (p) {
	        resizeWithParams(p, files, attr, scope, ngModel).then(function (r) {
	          defer.resolve(r);
	        }, function (e) {
	          defer.reject(e);
	        });
	      }, function (e) {
	        defer.reject(e);
	      });
	    } else {
	      return resizeWithParams(resizeVal, files, attr, scope, ngModel);
	    }
	  }

	  function resizeWithParams(params, files, attr, scope, ngModel) {
	    var promises = [upload.emptyPromise()];

	    function handleFile(f, i) {
	      if (f.type.indexOf('image') === 0) {
	        if (params.pattern && !upload.validatePattern(f, params.pattern)) return;
	        params.resizeIf = function (width, height) {
	          return upload.attrGetter('ngfResizeIf', attr, scope, { $width: width, $height: height, $file: f });
	        };
	        var promise = upload.resize(f, params);
	        promises.push(promise);
	        promise.then(function (resizedFile) {
	          files.splice(i, 1, resizedFile);
	        }, function (e) {
	          f.$error = 'resize';
	          (f.$errorMessages = f.$errorMessages || {}).resize = true;
	          f.$errorParam = (e ? (e.message ? e.message : e) + ': ' : '') + (f && f.name);
	          ngModel.$ngfValidations.push({ name: 'resize', valid: false });
	          upload.applyModelValidation(ngModel, files);
	        });
	      }
	    }

	    for (var i = 0; i < files.length; i++) {
	      handleFile(files[i], i);
	    }
	    return $q.all(promises);
	  }

	  upload.updateModel = function (ngModel, attr, scope, fileChange, files, evt, noDelay) {
	    function update(files, invalidFiles, newFiles, dupFiles, isSingleModel) {
	      attr.$$ngfPrevValidFiles = files;
	      attr.$$ngfPrevInvalidFiles = invalidFiles;
	      var file = files && files.length ? files[0] : null;
	      var invalidFile = invalidFiles && invalidFiles.length ? invalidFiles[0] : null;

	      if (ngModel) {
	        upload.applyModelValidation(ngModel, files);
	        ngModel.$setViewValue(isSingleModel ? file : files);
	      }

	      if (fileChange) {
	        $parse(fileChange)(scope, {
	          $files: files,
	          $file: file,
	          $newFiles: newFiles,
	          $duplicateFiles: dupFiles,
	          $invalidFiles: invalidFiles,
	          $invalidFile: invalidFile,
	          $event: evt
	        });
	      }

	      var invalidModel = upload.attrGetter('ngfModelInvalid', attr);
	      if (invalidModel) {
	        $timeout(function () {
	          $parse(invalidModel).assign(scope, isSingleModel ? invalidFile : invalidFiles);
	        });
	      }
	      $timeout(function () {
	        // scope apply changes
	      });
	    }

	    var allNewFiles,
	        dupFiles = [],
	        prevValidFiles,
	        prevInvalidFiles,
	        invalids = [],
	        valids = [];

	    function removeDuplicates() {
	      function equals(f1, f2) {
	        return f1.name === f2.name && (f1.$ngfOrigSize || f1.size) === (f2.$ngfOrigSize || f2.size) && f1.type === f2.type;
	      }

	      function isInPrevFiles(f) {
	        var j;
	        for (j = 0; j < prevValidFiles.length; j++) {
	          if (equals(f, prevValidFiles[j])) {
	            return true;
	          }
	        }
	        for (j = 0; j < prevInvalidFiles.length; j++) {
	          if (equals(f, prevInvalidFiles[j])) {
	            return true;
	          }
	        }
	        return false;
	      }

	      if (files) {
	        allNewFiles = [];
	        dupFiles = [];
	        for (var i = 0; i < files.length; i++) {
	          if (isInPrevFiles(files[i])) {
	            dupFiles.push(files[i]);
	          } else {
	            allNewFiles.push(files[i]);
	          }
	        }
	      }
	    }

	    function toArray(v) {
	      return angular.isArray(v) ? v : [v];
	    }

	    function resizeAndUpdate() {
	      function updateModel() {
	        $timeout(function () {
	          update(keep ? prevValidFiles.concat(valids) : valids, keep ? prevInvalidFiles.concat(invalids) : invalids, files, dupFiles, isSingleModel);
	        }, options && options.debounce ? options.debounce.change || options.debounce : 0);
	      }

	      var resizingFiles = validateAfterResize ? allNewFiles : valids;
	      resizeFile(resizingFiles, attr, scope, ngModel).then(function () {
	        if (validateAfterResize) {
	          upload.validate(allNewFiles, keep ? prevValidFiles.length : 0, ngModel, attr, scope).then(function (validationResult) {
	            valids = validationResult.validsFiles;
	            invalids = validationResult.invalidsFiles;
	            updateModel();
	          });
	        } else {
	          updateModel();
	        }
	      }, function () {
	        for (var i = 0; i < resizingFiles.length; i++) {
	          var f = resizingFiles[i];
	          if (f.$error === 'resize') {
	            var index = valids.indexOf(f);
	            if (index > -1) {
	              valids.splice(index, 1);
	              invalids.push(f);
	            }
	            updateModel();
	          }
	        }
	      });
	    }

	    prevValidFiles = attr.$$ngfPrevValidFiles || [];
	    prevInvalidFiles = attr.$$ngfPrevInvalidFiles || [];
	    if (ngModel && ngModel.$modelValue) {
	      prevValidFiles = toArray(ngModel.$modelValue);
	    }

	    var keep = upload.attrGetter('ngfKeep', attr, scope);
	    allNewFiles = (files || []).slice(0);
	    if (keep === 'distinct' || upload.attrGetter('ngfKeepDistinct', attr, scope) === true) {
	      removeDuplicates(attr, scope);
	    }

	    var isSingleModel = !keep && !upload.attrGetter('ngfMultiple', attr, scope) && !upload.attrGetter('multiple', attr);

	    if (keep && !allNewFiles.length) return;

	    upload.attrGetter('ngfBeforeModelChange', attr, scope, {
	      $files: files,
	      $file: files && files.length ? files[0] : null,
	      $newFiles: allNewFiles,
	      $duplicateFiles: dupFiles,
	      $event: evt
	    });

	    var validateAfterResize = upload.attrGetter('ngfValidateAfterResize', attr, scope);

	    var options = upload.attrGetter('ngfModelOptions', attr, scope);
	    upload.validate(allNewFiles, keep ? prevValidFiles.length : 0, ngModel, attr, scope).then(function (validationResult) {
	      if (noDelay) {
	        update(allNewFiles, [], files, dupFiles, isSingleModel);
	      } else {
	        if ((!options || !options.allowInvalid) && !validateAfterResize) {
	          valids = validationResult.validFiles;
	          invalids = validationResult.invalidFiles;
	        } else {
	          valids = allNewFiles;
	        }
	        if (upload.attrGetter('ngfFixOrientation', attr, scope) && upload.isExifSupported()) {
	          applyExifRotations(valids, attr, scope).then(function () {
	            resizeAndUpdate();
	          });
	        } else {
	          resizeAndUpdate();
	        }
	      }
	    });
	  };

	  return upload;
	}]);

	ngFileUpload.directive('ngfSelect', ['$parse', '$timeout', '$compile', 'Upload', function ($parse, $timeout, $compile, Upload) {
	  var generatedElems = [];

	  function isDelayedClickSupported(ua) {
	    // fix for android native browser < 4.4 and safari windows
	    var m = ua.match(/Android[^\d]*(\d+)\.(\d+)/);
	    if (m && m.length > 2) {
	      var v = Upload.defaults.androidFixMinorVersion || 4;
	      return parseInt(m[1]) < 4 || parseInt(m[1]) === v && parseInt(m[2]) < v;
	    }

	    // safari on windows
	    return ua.indexOf('Chrome') === -1 && /.*Windows.*Safari.*/.test(ua);
	  }

	  function linkFileSelect(scope, elem, attr, ngModel, $parse, $timeout, $compile, upload) {
	    /** @namespace attr.ngfSelect */
	    /** @namespace attr.ngfChange */
	    /** @namespace attr.ngModel */
	    /** @namespace attr.ngfModelOptions */
	    /** @namespace attr.ngfMultiple */
	    /** @namespace attr.ngfCapture */
	    /** @namespace attr.ngfValidate */
	    /** @namespace attr.ngfKeep */
	    var attrGetter = function attrGetter(name, scope) {
	      return upload.attrGetter(name, attr, scope);
	    };

	    function isInputTypeFile() {
	      return elem[0].tagName.toLowerCase() === 'input' && attr.type && attr.type.toLowerCase() === 'file';
	    }

	    function fileChangeAttr() {
	      return attrGetter('ngfChange') || attrGetter('ngfSelect');
	    }

	    function changeFn(evt) {
	      if (upload.shouldUpdateOn('change', attr, scope)) {
	        var fileList = evt.__files_ || evt.target && evt.target.files,
	            files = [];
	        /* Handle duplicate call in  IE11 */
	        if (!fileList) return;
	        for (var i = 0; i < fileList.length; i++) {
	          files.push(fileList[i]);
	        }
	        upload.updateModel(ngModel, attr, scope, fileChangeAttr(), files.length ? files : null, evt);
	      }
	    }

	    upload.registerModelChangeValidator(ngModel, attr, scope);

	    var unwatches = [];
	    if (attrGetter('ngfMultiple')) {
	      unwatches.push(scope.$watch(attrGetter('ngfMultiple'), function () {
	        fileElem.attr('multiple', attrGetter('ngfMultiple', scope));
	      }));
	    }
	    if (attrGetter('ngfCapture')) {
	      unwatches.push(scope.$watch(attrGetter('ngfCapture'), function () {
	        fileElem.attr('capture', attrGetter('ngfCapture', scope));
	      }));
	    }
	    if (attrGetter('ngfAccept')) {
	      unwatches.push(scope.$watch(attrGetter('ngfAccept'), function () {
	        fileElem.attr('accept', attrGetter('ngfAccept', scope));
	      }));
	    }
	    unwatches.push(attr.$observe('accept', function () {
	      fileElem.attr('accept', attrGetter('accept'));
	    }));
	    function bindAttrToFileInput(fileElem, label) {
	      function updateId(val) {
	        fileElem.attr('id', 'ngf-' + val);
	        label.attr('id', 'ngf-label-' + val);
	      }

	      for (var i = 0; i < elem[0].attributes.length; i++) {
	        var attribute = elem[0].attributes[i];
	        if (attribute.name !== 'type' && attribute.name !== 'class' && attribute.name !== 'style') {
	          if (attribute.name === 'id') {
	            updateId(attribute.value);
	            unwatches.push(attr.$observe('id', updateId));
	          } else {
	            fileElem.attr(attribute.name, !attribute.value && (attribute.name === 'required' || attribute.name === 'multiple') ? attribute.name : attribute.value);
	          }
	        }
	      }
	    }

	    function createFileInput() {
	      if (isInputTypeFile()) {
	        return elem;
	      }

	      var fileElem = angular.element('<input type="file">');

	      var label = angular.element('<label>upload</label>');
	      label.css('visibility', 'hidden').css('position', 'absolute').css('overflow', 'hidden').css('width', '0px').css('height', '0px').css('border', 'none').css('margin', '0px').css('padding', '0px').attr('tabindex', '-1');
	      bindAttrToFileInput(fileElem, label);

	      generatedElems.push({ el: elem, ref: label });

	      document.body.appendChild(label.append(fileElem)[0]);

	      return fileElem;
	    }

	    function clickHandler(evt) {
	      if (elem.attr('disabled')) return false;
	      if (attrGetter('ngfSelectDisabled', scope)) return;

	      var r = detectSwipe(evt);
	      // prevent the click if it is a swipe
	      if (r != null) return r;

	      resetModel(evt);

	      // fix for md when the element is removed from the DOM and added back #460
	      try {
	        if (!isInputTypeFile() && !document.body.contains(fileElem[0])) {
	          generatedElems.push({ el: elem, ref: fileElem.parent() });
	          document.body.appendChild(fileElem.parent()[0]);
	          fileElem.bind('change', changeFn);
	        }
	      } catch (e) {/*ignore*/
	      }

	      if (isDelayedClickSupported(navigator.userAgent)) {
	        setTimeout(function () {
	          fileElem[0].click();
	        }, 0);
	      } else {
	        fileElem[0].click();
	      }

	      return false;
	    }

	    var initialTouchStartY = 0;
	    var initialTouchStartX = 0;

	    function detectSwipe(evt) {
	      var touches = evt.changedTouches || evt.originalEvent && evt.originalEvent.changedTouches;
	      if (touches) {
	        if (evt.type === 'touchstart') {
	          initialTouchStartX = touches[0].clientX;
	          initialTouchStartY = touches[0].clientY;
	          return true; // don't block event default
	        } else {
	          // prevent scroll from triggering event
	          if (evt.type === 'touchend') {
	            var currentX = touches[0].clientX;
	            var currentY = touches[0].clientY;
	            if (Math.abs(currentX - initialTouchStartX) > 20 || Math.abs(currentY - initialTouchStartY) > 20) {
	              evt.stopPropagation();
	              evt.preventDefault();
	              return false;
	            }
	          }
	          return true;
	        }
	      }
	    }

	    var fileElem = elem;

	    function resetModel(evt) {
	      if (upload.shouldUpdateOn('click', attr, scope) && fileElem.val()) {
	        fileElem.val(null);
	        upload.updateModel(ngModel, attr, scope, fileChangeAttr(), null, evt, true);
	      }
	    }

	    if (!isInputTypeFile()) {
	      fileElem = createFileInput();
	    }
	    fileElem.bind('change', changeFn);

	    if (!isInputTypeFile()) {
	      elem.bind('click touchstart touchend', clickHandler);
	    } else {
	      elem.bind('click', resetModel);
	    }

	    function ie10SameFileSelectFix(evt) {
	      if (fileElem && !fileElem.attr('__ngf_ie10_Fix_')) {
	        if (!fileElem[0].parentNode) {
	          fileElem = null;
	          return;
	        }
	        evt.preventDefault();
	        evt.stopPropagation();
	        fileElem.unbind('click');
	        var clone = fileElem.clone();
	        fileElem.replaceWith(clone);
	        fileElem = clone;
	        fileElem.attr('__ngf_ie10_Fix_', 'true');
	        fileElem.bind('change', changeFn);
	        fileElem.bind('click', ie10SameFileSelectFix);
	        fileElem[0].click();
	        return false;
	      } else {
	        fileElem.removeAttr('__ngf_ie10_Fix_');
	      }
	    }

	    if (navigator.appVersion.indexOf('MSIE 10') !== -1) {
	      fileElem.bind('click', ie10SameFileSelectFix);
	    }

	    if (ngModel) ngModel.$formatters.push(function (val) {
	      if (val == null || val.length === 0) {
	        if (fileElem.val()) {
	          fileElem.val(null);
	        }
	      }
	      return val;
	    });

	    scope.$on('$destroy', function () {
	      if (!isInputTypeFile()) fileElem.parent().remove();
	      angular.forEach(unwatches, function (unwatch) {
	        unwatch();
	      });
	    });

	    $timeout(function () {
	      for (var i = 0; i < generatedElems.length; i++) {
	        var g = generatedElems[i];
	        if (!document.body.contains(g.el[0])) {
	          generatedElems.splice(i, 1);
	          g.ref.remove();
	        }
	      }
	    });

	    if (window.FileAPI && window.FileAPI.ngfFixIE) {
	      window.FileAPI.ngfFixIE(elem, fileElem, changeFn);
	    }
	  }

	  return {
	    restrict: 'AEC',
	    require: '?ngModel',
	    link: function link(scope, elem, attr, ngModel) {
	      linkFileSelect(scope, elem, attr, ngModel, $parse, $timeout, $compile, Upload);
	    }
	  };
	}]);

	(function () {

	  ngFileUpload.service('UploadDataUrl', ['UploadBase', '$timeout', '$q', function (UploadBase, $timeout, $q) {
	    var upload = UploadBase;
	    upload.base64DataUrl = function (file) {
	      if (angular.isArray(file)) {
	        var d = $q.defer(),
	            count = 0;
	        angular.forEach(file, function (f) {
	          upload.dataUrl(f, true)['finally'](function () {
	            count++;
	            if (count === file.length) {
	              var urls = [];
	              angular.forEach(file, function (ff) {
	                urls.push(ff.$ngfDataUrl);
	              });
	              d.resolve(urls, file);
	            }
	          });
	        });
	        return d.promise;
	      } else {
	        return upload.dataUrl(file, true);
	      }
	    };
	    upload.dataUrl = function (file, disallowObjectUrl) {
	      if (!file) return upload.emptyPromise(file, file);
	      if (disallowObjectUrl && file.$ngfDataUrl != null || !disallowObjectUrl && file.$ngfBlobUrl != null) {
	        return upload.emptyPromise(disallowObjectUrl ? file.$ngfDataUrl : file.$ngfBlobUrl, file);
	      }
	      var p = disallowObjectUrl ? file.$$ngfDataUrlPromise : file.$$ngfBlobUrlPromise;
	      if (p) return p;

	      var deferred = $q.defer();
	      $timeout(function () {
	        if (window.FileReader && file && (!window.FileAPI || navigator.userAgent.indexOf('MSIE 8') === -1 || file.size < 20000) && (!window.FileAPI || navigator.userAgent.indexOf('MSIE 9') === -1 || file.size < 4000000)) {
	          //prefer URL.createObjectURL for handling refrences to files of all sizes
	          //since it doesn´t build a large string in memory
	          var URL = window.URL || window.webkitURL;
	          if (URL && URL.createObjectURL && !disallowObjectUrl) {
	            var url;
	            try {
	              url = URL.createObjectURL(file);
	            } catch (e) {
	              $timeout(function () {
	                file.$ngfBlobUrl = '';
	                deferred.reject();
	              });
	              return;
	            }
	            $timeout(function () {
	              file.$ngfBlobUrl = url;
	              if (url) {
	                deferred.resolve(url, file);
	                upload.blobUrls = upload.blobUrls || [];
	                upload.blobUrlsTotalSize = upload.blobUrlsTotalSize || 0;
	                upload.blobUrls.push({ url: url, size: file.size });
	                upload.blobUrlsTotalSize += file.size || 0;
	                var maxMemory = upload.defaults.blobUrlsMaxMemory || 268435456;
	                var maxLength = upload.defaults.blobUrlsMaxQueueSize || 200;
	                while ((upload.blobUrlsTotalSize > maxMemory || upload.blobUrls.length > maxLength) && upload.blobUrls.length > 1) {
	                  var obj = upload.blobUrls.splice(0, 1)[0];
	                  URL.revokeObjectURL(obj.url);
	                  upload.blobUrlsTotalSize -= obj.size;
	                }
	              }
	            });
	          } else {
	            var fileReader = new FileReader();
	            fileReader.onload = function (e) {
	              $timeout(function () {
	                file.$ngfDataUrl = e.target.result;
	                deferred.resolve(e.target.result, file);
	                $timeout(function () {
	                  delete file.$ngfDataUrl;
	                }, 1000);
	              });
	            };
	            fileReader.onerror = function () {
	              $timeout(function () {
	                file.$ngfDataUrl = '';
	                deferred.reject();
	              });
	            };
	            fileReader.readAsDataURL(file);
	          }
	        } else {
	          $timeout(function () {
	            file[disallowObjectUrl ? '$ngfDataUrl' : '$ngfBlobUrl'] = '';
	            deferred.reject();
	          });
	        }
	      });

	      if (disallowObjectUrl) {
	        p = file.$$ngfDataUrlPromise = deferred.promise;
	      } else {
	        p = file.$$ngfBlobUrlPromise = deferred.promise;
	      }
	      p['finally'](function () {
	        delete file[disallowObjectUrl ? '$$ngfDataUrlPromise' : '$$ngfBlobUrlPromise'];
	      });
	      return p;
	    };
	    return upload;
	  }]);

	  function getTagType(el) {
	    if (el.tagName.toLowerCase() === 'img') return 'image';
	    if (el.tagName.toLowerCase() === 'audio') return 'audio';
	    if (el.tagName.toLowerCase() === 'video') return 'video';
	    return (/./
	    );
	  }

	  function linkFileDirective(Upload, $timeout, scope, elem, attr, directiveName, resizeParams, isBackground) {
	    function constructDataUrl(file) {
	      var disallowObjectUrl = Upload.attrGetter('ngfNoObjectUrl', attr, scope);
	      Upload.dataUrl(file, disallowObjectUrl)['finally'](function () {
	        $timeout(function () {
	          var src = (disallowObjectUrl ? file.$ngfDataUrl : file.$ngfBlobUrl) || file.$ngfDataUrl;
	          if (isBackground) {
	            elem.css('background-image', 'url(\'' + (src || '') + '\')');
	          } else {
	            elem.attr('src', src);
	          }
	          if (src) {
	            elem.removeClass('ng-hide');
	          } else {
	            elem.addClass('ng-hide');
	          }
	        });
	      });
	    }

	    $timeout(function () {
	      var unwatch = scope.$watch(attr[directiveName], function (file) {
	        var size = resizeParams;
	        if (directiveName === 'ngfThumbnail') {
	          if (!size) {
	            size = {
	              width: elem[0].naturalWidth || elem[0].clientWidth,
	              height: elem[0].naturalHeight || elem[0].clientHeight
	            };
	          }
	          if (size.width === 0 && window.getComputedStyle) {
	            var style = getComputedStyle(elem[0]);
	            if (style.width && style.width.indexOf('px') > -1 && style.height && style.height.indexOf('px') > -1) {
	              size = {
	                width: parseInt(style.width.slice(0, -2)),
	                height: parseInt(style.height.slice(0, -2))
	              };
	            }
	          }
	        }

	        if (angular.isString(file)) {
	          elem.removeClass('ng-hide');
	          if (isBackground) {
	            return elem.css('background-image', 'url(\'' + file + '\')');
	          } else {
	            return elem.attr('src', file);
	          }
	        }
	        if (file && file.type && file.type.search(getTagType(elem[0])) === 0 && (!isBackground || file.type.indexOf('image') === 0)) {
	          if (size && Upload.isResizeSupported()) {
	            size.resizeIf = function (width, height) {
	              return Upload.attrGetter('ngfResizeIf', attr, scope, { $width: width, $height: height, $file: file });
	            };
	            Upload.resize(file, size).then(function (f) {
	              constructDataUrl(f);
	            }, function (e) {
	              throw e;
	            });
	          } else {
	            constructDataUrl(file);
	          }
	        } else {
	          elem.addClass('ng-hide');
	        }
	      });

	      scope.$on('$destroy', function () {
	        unwatch();
	      });
	    });
	  }

	  /** @namespace attr.ngfSrc */
	  /** @namespace attr.ngfNoObjectUrl */
	  ngFileUpload.directive('ngfSrc', ['Upload', '$timeout', function (Upload, $timeout) {
	    return {
	      restrict: 'AE',
	      link: function link(scope, elem, attr) {
	        linkFileDirective(Upload, $timeout, scope, elem, attr, 'ngfSrc', Upload.attrGetter('ngfResize', attr, scope), false);
	      }
	    };
	  }]);

	  /** @namespace attr.ngfBackground */
	  /** @namespace attr.ngfNoObjectUrl */
	  ngFileUpload.directive('ngfBackground', ['Upload', '$timeout', function (Upload, $timeout) {
	    return {
	      restrict: 'AE',
	      link: function link(scope, elem, attr) {
	        linkFileDirective(Upload, $timeout, scope, elem, attr, 'ngfBackground', Upload.attrGetter('ngfResize', attr, scope), true);
	      }
	    };
	  }]);

	  /** @namespace attr.ngfThumbnail */
	  /** @namespace attr.ngfAsBackground */
	  /** @namespace attr.ngfSize */
	  /** @namespace attr.ngfNoObjectUrl */
	  ngFileUpload.directive('ngfThumbnail', ['Upload', '$timeout', function (Upload, $timeout) {
	    return {
	      restrict: 'AE',
	      link: function link(scope, elem, attr) {
	        var size = Upload.attrGetter('ngfSize', attr, scope);
	        linkFileDirective(Upload, $timeout, scope, elem, attr, 'ngfThumbnail', size, Upload.attrGetter('ngfAsBackground', attr, scope));
	      }
	    };
	  }]);

	  ngFileUpload.config(['$compileProvider', function ($compileProvider) {
	    if ($compileProvider.imgSrcSanitizationWhitelist) $compileProvider.imgSrcSanitizationWhitelist(/^\s*(https?|ftp|mailto|tel|webcal|local|file|data|blob):/);
	    if ($compileProvider.aHrefSanitizationWhitelist) $compileProvider.aHrefSanitizationWhitelist(/^\s*(https?|ftp|mailto|tel|webcal|local|file|data|blob):/);
	  }]);

	  ngFileUpload.filter('ngfDataUrl', ['UploadDataUrl', '$sce', function (UploadDataUrl, $sce) {
	    return function (file, disallowObjectUrl, trustedUrl) {
	      if (angular.isString(file)) {
	        return $sce.trustAsResourceUrl(file);
	      }
	      var src = file && ((disallowObjectUrl ? file.$ngfDataUrl : file.$ngfBlobUrl) || file.$ngfDataUrl);
	      if (file && !src) {
	        if (!file.$ngfDataUrlFilterInProgress && angular.isObject(file)) {
	          file.$ngfDataUrlFilterInProgress = true;
	          UploadDataUrl.dataUrl(file, disallowObjectUrl);
	        }
	        return '';
	      }
	      if (file) delete file.$ngfDataUrlFilterInProgress;
	      return (file && src ? trustedUrl ? $sce.trustAsResourceUrl(src) : src : file) || '';
	    };
	  }]);
	})();

	ngFileUpload.service('UploadValidate', ['UploadDataUrl', '$q', '$timeout', function (UploadDataUrl, $q, $timeout) {
	  var upload = UploadDataUrl;

	  function globStringToRegex(str) {
	    var regexp = '',
	        excludes = [];
	    if (str.length > 2 && str[0] === '/' && str[str.length - 1] === '/') {
	      regexp = str.substring(1, str.length - 1);
	    } else {
	      var split = str.split(',');
	      if (split.length > 1) {
	        for (var i = 0; i < split.length; i++) {
	          var r = globStringToRegex(split[i]);
	          if (r.regexp) {
	            regexp += '(' + r.regexp + ')';
	            if (i < split.length - 1) {
	              regexp += '|';
	            }
	          } else {
	            excludes = excludes.concat(r.excludes);
	          }
	        }
	      } else {
	        if (str.indexOf('!') === 0) {
	          excludes.push('^((?!' + globStringToRegex(str.substring(1)).regexp + ').)*$');
	        } else {
	          if (str.indexOf('.') === 0) {
	            str = '*' + str;
	          }
	          regexp = '^' + str.replace(new RegExp('[.\\\\+*?\\[\\^\\]$(){}=!<>|:\\-]', 'g'), '\\$&') + '$';
	          regexp = regexp.replace(/\\\*/g, '.*').replace(/\\\?/g, '.');
	        }
	      }
	    }
	    return { regexp: regexp, excludes: excludes };
	  }

	  upload.validatePattern = function (file, val) {
	    if (!val) {
	      return true;
	    }
	    var pattern = globStringToRegex(val),
	        valid = true;
	    if (pattern.regexp && pattern.regexp.length) {
	      var regexp = new RegExp(pattern.regexp, 'i');
	      valid = file.type != null && regexp.test(file.type) || file.name != null && regexp.test(file.name);
	    }
	    var len = pattern.excludes.length;
	    while (len--) {
	      var exclude = new RegExp(pattern.excludes[len], 'i');
	      valid = valid && (file.type == null || exclude.test(file.type)) && (file.name == null || exclude.test(file.name));
	    }
	    return valid;
	  };

	  upload.ratioToFloat = function (val) {
	    var r = val.toString(),
	        xIndex = r.search(/[x:]/i);
	    if (xIndex > -1) {
	      r = parseFloat(r.substring(0, xIndex)) / parseFloat(r.substring(xIndex + 1));
	    } else {
	      r = parseFloat(r);
	    }
	    return r;
	  };

	  upload.registerModelChangeValidator = function (ngModel, attr, scope) {
	    if (ngModel) {
	      ngModel.$formatters.push(function (files) {
	        if (ngModel.$dirty) {
	          var filesArray = files;
	          if (files && !angular.isArray(files)) {
	            filesArray = [files];
	          }
	          upload.validate(filesArray, 0, ngModel, attr, scope).then(function () {
	            upload.applyModelValidation(ngModel, filesArray);
	          });
	        }
	        return files;
	      });
	    }
	  };

	  function markModelAsDirty(ngModel, files) {
	    if (files != null && !ngModel.$dirty) {
	      if (ngModel.$setDirty) {
	        ngModel.$setDirty();
	      } else {
	        ngModel.$dirty = true;
	      }
	    }
	  }

	  upload.applyModelValidation = function (ngModel, files) {
	    markModelAsDirty(ngModel, files);
	    angular.forEach(ngModel.$ngfValidations, function (validation) {
	      ngModel.$setValidity(validation.name, validation.valid);
	    });
	  };

	  upload.getValidationAttr = function (attr, scope, name, validationName, file) {
	    var dName = 'ngf' + name[0].toUpperCase() + name.substr(1);
	    var val = upload.attrGetter(dName, attr, scope, { $file: file });
	    if (val == null) {
	      val = upload.attrGetter('ngfValidate', attr, scope, { $file: file });
	      if (val) {
	        var split = (validationName || name).split('.');
	        val = val[split[0]];
	        if (split.length > 1) {
	          val = val && val[split[1]];
	        }
	      }
	    }
	    return val;
	  };

	  upload.validate = function (files, prevLength, ngModel, attr, scope) {
	    ngModel = ngModel || {};
	    ngModel.$ngfValidations = ngModel.$ngfValidations || [];

	    angular.forEach(ngModel.$ngfValidations, function (v) {
	      v.valid = true;
	    });

	    var attrGetter = function attrGetter(name, params) {
	      return upload.attrGetter(name, attr, scope, params);
	    };

	    var ignoredErrors = (upload.attrGetter('ngfIgnoreInvalid', attr, scope) || '').split(' ');
	    var runAllValidation = upload.attrGetter('ngfRunAllValidations', attr, scope);

	    if (files == null || files.length === 0) {
	      return upload.emptyPromise({ 'validFiles': files, 'invalidFiles': [] });
	    }

	    files = files.length === undefined ? [files] : files.slice(0);
	    var invalidFiles = [];

	    function validateSync(name, validationName, fn) {
	      if (files) {
	        var i = files.length,
	            valid = null;
	        while (i--) {
	          var file = files[i];
	          if (file) {
	            var val = upload.getValidationAttr(attr, scope, name, validationName, file);
	            if (val != null) {
	              if (!fn(file, val, i)) {
	                if (ignoredErrors.indexOf(name) === -1) {
	                  file.$error = name;
	                  (file.$errorMessages = file.$errorMessages || {})[name] = true;
	                  file.$errorParam = val;
	                  if (invalidFiles.indexOf(file) === -1) {
	                    invalidFiles.push(file);
	                  }
	                  if (!runAllValidation) {
	                    files.splice(i, 1);
	                  }
	                  valid = false;
	                } else {
	                  files.splice(i, 1);
	                }
	              }
	            }
	          }
	        }
	        if (valid !== null) {
	          ngModel.$ngfValidations.push({ name: name, valid: valid });
	        }
	      }
	    }

	    validateSync('pattern', null, upload.validatePattern);
	    validateSync('minSize', 'size.min', function (file, val) {
	      return file.size + 0.1 >= upload.translateScalars(val);
	    });
	    validateSync('maxSize', 'size.max', function (file, val) {
	      return file.size - 0.1 <= upload.translateScalars(val);
	    });
	    var totalSize = 0;
	    validateSync('maxTotalSize', null, function (file, val) {
	      totalSize += file.size;
	      if (totalSize > upload.translateScalars(val)) {
	        files.splice(0, files.length);
	        return false;
	      }
	      return true;
	    });

	    validateSync('validateFn', null, function (file, r) {
	      return r === true || r === null || r === '';
	    });

	    if (!files.length) {
	      return upload.emptyPromise({ 'validFiles': [], 'invalidFiles': invalidFiles });
	    }

	    function validateAsync(name, validationName, type, asyncFn, fn) {
	      function resolveResult(defer, file, val) {
	        function resolveInternal(fn) {
	          if (fn()) {
	            if (ignoredErrors.indexOf(name) === -1) {
	              file.$error = name;
	              (file.$errorMessages = file.$errorMessages || {})[name] = true;
	              file.$errorParam = val;
	              if (invalidFiles.indexOf(file) === -1) {
	                invalidFiles.push(file);
	              }
	              if (!runAllValidation) {
	                var i = files.indexOf(file);
	                if (i > -1) files.splice(i, 1);
	              }
	              defer.resolve(false);
	            } else {
	              var j = files.indexOf(file);
	              if (j > -1) files.splice(j, 1);
	              defer.resolve(true);
	            }
	          } else {
	            defer.resolve(true);
	          }
	        }

	        if (val != null) {
	          asyncFn(file, val).then(function (d) {
	            resolveInternal(function () {
	              return !fn(d, val);
	            });
	          }, function () {
	            resolveInternal(function () {
	              return attrGetter('ngfValidateForce', { $file: file });
	            });
	          });
	        } else {
	          defer.resolve(true);
	        }
	      }

	      var promises = [upload.emptyPromise(true)];
	      if (files) {
	        files = files.length === undefined ? [files] : files;
	        angular.forEach(files, function (file) {
	          var defer = $q.defer();
	          promises.push(defer.promise);
	          if (type && (file.type == null || file.type.search(type) !== 0)) {
	            defer.resolve(true);
	            return;
	          }
	          if (name === 'dimensions' && upload.attrGetter('ngfDimensions', attr) != null) {
	            upload.imageDimensions(file).then(function (d) {
	              resolveResult(defer, file, attrGetter('ngfDimensions', { $file: file, $width: d.width, $height: d.height }));
	            }, function () {
	              defer.resolve(false);
	            });
	          } else if (name === 'duration' && upload.attrGetter('ngfDuration', attr) != null) {
	            upload.mediaDuration(file).then(function (d) {
	              resolveResult(defer, file, attrGetter('ngfDuration', { $file: file, $duration: d }));
	            }, function () {
	              defer.resolve(false);
	            });
	          } else {
	            resolveResult(defer, file, upload.getValidationAttr(attr, scope, name, validationName, file));
	          }
	        });
	      }
	      var deffer = $q.defer();
	      $q.all(promises).then(function (values) {
	        var isValid = true;
	        for (var i = 0; i < values.length; i++) {
	          if (!values[i]) {
	            isValid = false;
	            break;
	          }
	        }
	        ngModel.$ngfValidations.push({ name: name, valid: isValid });
	        deffer.resolve(isValid);
	      });
	      return deffer.promise;
	    }

	    var deffer = $q.defer();
	    var promises = [];

	    promises.push(validateAsync('maxHeight', 'height.max', /image/, this.imageDimensions, function (d, val) {
	      return d.height <= val;
	    }));
	    promises.push(validateAsync('minHeight', 'height.min', /image/, this.imageDimensions, function (d, val) {
	      return d.height >= val;
	    }));
	    promises.push(validateAsync('maxWidth', 'width.max', /image/, this.imageDimensions, function (d, val) {
	      return d.width <= val;
	    }));
	    promises.push(validateAsync('minWidth', 'width.min', /image/, this.imageDimensions, function (d, val) {
	      return d.width >= val;
	    }));
	    promises.push(validateAsync('dimensions', null, /image/, function (file, val) {
	      return upload.emptyPromise(val);
	    }, function (r) {
	      return r;
	    }));
	    promises.push(validateAsync('ratio', null, /image/, this.imageDimensions, function (d, val) {
	      var split = val.toString().split(','),
	          valid = false;
	      for (var i = 0; i < split.length; i++) {
	        if (Math.abs(d.width / d.height - upload.ratioToFloat(split[i])) < 0.01) {
	          valid = true;
	        }
	      }
	      return valid;
	    }));
	    promises.push(validateAsync('maxRatio', 'ratio.max', /image/, this.imageDimensions, function (d, val) {
	      return d.width / d.height - upload.ratioToFloat(val) < 0.0001;
	    }));
	    promises.push(validateAsync('minRatio', 'ratio.min', /image/, this.imageDimensions, function (d, val) {
	      return d.width / d.height - upload.ratioToFloat(val) > -0.0001;
	    }));
	    promises.push(validateAsync('maxDuration', 'duration.max', /audio|video/, this.mediaDuration, function (d, val) {
	      return d <= upload.translateScalars(val);
	    }));
	    promises.push(validateAsync('minDuration', 'duration.min', /audio|video/, this.mediaDuration, function (d, val) {
	      return d >= upload.translateScalars(val);
	    }));
	    promises.push(validateAsync('duration', null, /audio|video/, function (file, val) {
	      return upload.emptyPromise(val);
	    }, function (r) {
	      return r;
	    }));

	    promises.push(validateAsync('validateAsyncFn', null, null, function (file, val) {
	      return val;
	    }, function (r) {
	      return r === true || r === null || r === '';
	    }));

	    $q.all(promises).then(function () {

	      if (runAllValidation) {
	        for (var i = 0; i < files.length; i++) {
	          var file = files[i];
	          if (file.$error) {
	            files.splice(i--, 1);
	          }
	        }
	      }

	      runAllValidation = false;
	      validateSync('maxFiles', null, function (file, val, i) {
	        return prevLength + i < val;
	      });

	      deffer.resolve({ 'validFiles': files, 'invalidFiles': invalidFiles });
	    });
	    return deffer.promise;
	  };

	  upload.imageDimensions = function (file) {
	    if (file.$ngfWidth && file.$ngfHeight) {
	      var d = $q.defer();
	      $timeout(function () {
	        d.resolve({ width: file.$ngfWidth, height: file.$ngfHeight });
	      });
	      return d.promise;
	    }
	    if (file.$ngfDimensionPromise) return file.$ngfDimensionPromise;

	    var deferred = $q.defer();
	    $timeout(function () {
	      if (file.type.indexOf('image') !== 0) {
	        deferred.reject('not image');
	        return;
	      }
	      upload.dataUrl(file).then(function (dataUrl) {
	        var img = angular.element('<img>').attr('src', dataUrl).css('visibility', 'hidden').css('position', 'fixed').css('max-width', 'none !important').css('max-height', 'none !important');

	        function success() {
	          var width = img[0].naturalWidth || img[0].clientWidth;
	          var height = img[0].naturalHeight || img[0].clientHeight;
	          img.remove();
	          file.$ngfWidth = width;
	          file.$ngfHeight = height;
	          deferred.resolve({ width: width, height: height });
	        }

	        function error() {
	          img.remove();
	          deferred.reject('load error');
	        }

	        img.on('load', success);
	        img.on('error', error);

	        var secondsCounter = 0;
	        function checkLoadErrorInCaseOfNoCallback() {
	          $timeout(function () {
	            if (img[0].parentNode) {
	              if (img[0].clientWidth) {
	                success();
	              } else if (secondsCounter++ > 10) {
	                error();
	              } else {
	                checkLoadErrorInCaseOfNoCallback();
	              }
	            }
	          }, 1000);
	        }

	        checkLoadErrorInCaseOfNoCallback();

	        angular.element(document.getElementsByTagName('body')[0]).append(img);
	      }, function () {
	        deferred.reject('load error');
	      });
	    });

	    file.$ngfDimensionPromise = deferred.promise;
	    file.$ngfDimensionPromise['finally'](function () {
	      delete file.$ngfDimensionPromise;
	    });
	    return file.$ngfDimensionPromise;
	  };

	  upload.mediaDuration = function (file) {
	    if (file.$ngfDuration) {
	      var d = $q.defer();
	      $timeout(function () {
	        d.resolve(file.$ngfDuration);
	      });
	      return d.promise;
	    }
	    if (file.$ngfDurationPromise) return file.$ngfDurationPromise;

	    var deferred = $q.defer();
	    $timeout(function () {
	      if (file.type.indexOf('audio') !== 0 && file.type.indexOf('video') !== 0) {
	        deferred.reject('not media');
	        return;
	      }
	      upload.dataUrl(file).then(function (dataUrl) {
	        var el = angular.element(file.type.indexOf('audio') === 0 ? '<audio>' : '<video>').attr('src', dataUrl).css('visibility', 'none').css('position', 'fixed');

	        function success() {
	          var duration = el[0].duration;
	          file.$ngfDuration = duration;
	          el.remove();
	          deferred.resolve(duration);
	        }

	        function error() {
	          el.remove();
	          deferred.reject('load error');
	        }

	        el.on('loadedmetadata', success);
	        el.on('error', error);
	        var count = 0;

	        function checkLoadError() {
	          $timeout(function () {
	            if (el[0].parentNode) {
	              if (el[0].duration) {
	                success();
	              } else if (count > 10) {
	                error();
	              } else {
	                checkLoadError();
	              }
	            }
	          }, 1000);
	        }

	        checkLoadError();

	        angular.element(document.body).append(el);
	      }, function () {
	        deferred.reject('load error');
	      });
	    });

	    file.$ngfDurationPromise = deferred.promise;
	    file.$ngfDurationPromise['finally'](function () {
	      delete file.$ngfDurationPromise;
	    });
	    return file.$ngfDurationPromise;
	  };
	  return upload;
	}]);

	ngFileUpload.service('UploadResize', ['UploadValidate', '$q', function (UploadValidate, $q) {
	  var upload = UploadValidate;

	  /**
	   * Conserve aspect ratio of the original region. Useful when shrinking/enlarging
	   * images to fit into a certain area.
	   * Source:  http://stackoverflow.com/a/14731922
	   *
	   * @param {Number} srcWidth Source area width
	   * @param {Number} srcHeight Source area height
	   * @param {Number} maxWidth Nestable area maximum available width
	   * @param {Number} maxHeight Nestable area maximum available height
	   * @return {Object} { width, height }
	   */
	  var calculateAspectRatioFit = function calculateAspectRatioFit(srcWidth, srcHeight, maxWidth, maxHeight, centerCrop) {
	    var ratio = centerCrop ? Math.max(maxWidth / srcWidth, maxHeight / srcHeight) : Math.min(maxWidth / srcWidth, maxHeight / srcHeight);
	    return {
	      width: srcWidth * ratio, height: srcHeight * ratio,
	      marginX: srcWidth * ratio - maxWidth, marginY: srcHeight * ratio - maxHeight
	    };
	  };

	  // Extracted from https://github.com/romelgomez/angular-firebase-image-upload/blob/master/app/scripts/fileUpload.js#L89
	  var resize = function resize(imagen, width, height, quality, type, ratio, centerCrop, resizeIf) {
	    var deferred = $q.defer();
	    var canvasElement = document.createElement('canvas');
	    var imageElement = document.createElement('img');
	    imageElement.setAttribute('style', 'visibility:hidden;position:fixed;z-index:-100000');
	    document.body.appendChild(imageElement);

	    imageElement.onload = function () {
	      var imgWidth = imageElement.width,
	          imgHeight = imageElement.height;
	      imageElement.parentNode.removeChild(imageElement);
	      if (resizeIf != null && resizeIf(imgWidth, imgHeight) === false) {
	        deferred.reject('resizeIf');
	        return;
	      }
	      try {
	        if (ratio) {
	          var ratioFloat = upload.ratioToFloat(ratio);
	          var imgRatio = imgWidth / imgHeight;
	          if (imgRatio < ratioFloat) {
	            width = imgWidth;
	            height = width / ratioFloat;
	          } else {
	            height = imgHeight;
	            width = height * ratioFloat;
	          }
	        }
	        if (!width) {
	          width = imgWidth;
	        }
	        if (!height) {
	          height = imgHeight;
	        }
	        var dimensions = calculateAspectRatioFit(imgWidth, imgHeight, width, height, centerCrop);
	        canvasElement.width = Math.min(dimensions.width, width);
	        canvasElement.height = Math.min(dimensions.height, height);
	        var context = canvasElement.getContext('2d');
	        context.drawImage(imageElement, Math.min(0, -dimensions.marginX / 2), Math.min(0, -dimensions.marginY / 2), dimensions.width, dimensions.height);
	        deferred.resolve(canvasElement.toDataURL(type || 'image/WebP', quality || 0.934));
	      } catch (e) {
	        deferred.reject(e);
	      }
	    };
	    imageElement.onerror = function () {
	      imageElement.parentNode.removeChild(imageElement);
	      deferred.reject();
	    };
	    imageElement.src = imagen;
	    return deferred.promise;
	  };

	  upload.dataUrltoBlob = function (dataurl, name, origSize) {
	    var arr = dataurl.split(','),
	        mime = arr[0].match(/:(.*?);/)[1],
	        bstr = atob(arr[1]),
	        n = bstr.length,
	        u8arr = new Uint8Array(n);
	    while (n--) {
	      u8arr[n] = bstr.charCodeAt(n);
	    }
	    var blob = new window.Blob([u8arr], { type: mime });
	    blob.name = name;
	    blob.$ngfOrigSize = origSize;
	    return blob;
	  };

	  upload.isResizeSupported = function () {
	    var elem = document.createElement('canvas');
	    return window.atob && elem.getContext && elem.getContext('2d') && window.Blob;
	  };

	  if (upload.isResizeSupported()) {
	    // add name getter to the blob constructor prototype
	    Object.defineProperty(window.Blob.prototype, 'name', {
	      get: function get() {
	        return this.$ngfName;
	      },
	      set: function set(v) {
	        this.$ngfName = v;
	      },
	      configurable: true
	    });
	  }

	  upload.resize = function (file, options) {
	    if (file.type.indexOf('image') !== 0) return upload.emptyPromise(file);

	    var deferred = $q.defer();
	    upload.dataUrl(file, true).then(function (url) {
	      resize(url, options.width, options.height, options.quality, options.type || file.type, options.ratio, options.centerCrop, options.resizeIf).then(function (dataUrl) {
	        if (file.type === 'image/jpeg' && options.restoreExif !== false) {
	          try {
	            dataUrl = upload.restoreExif(url, dataUrl);
	          } catch (e) {
	            setTimeout(function () {
	              throw e;
	            }, 1);
	          }
	        }
	        try {
	          var blob = upload.dataUrltoBlob(dataUrl, file.name, file.size);
	          deferred.resolve(blob);
	        } catch (e) {
	          deferred.reject(e);
	        }
	      }, function (r) {
	        if (r === 'resizeIf') {
	          deferred.resolve(file);
	        }
	        deferred.reject(r);
	      });
	    }, function (e) {
	      deferred.reject(e);
	    });
	    return deferred.promise;
	  };

	  return upload;
	}]);

	(function () {
	  ngFileUpload.directive('ngfDrop', ['$parse', '$timeout', '$window', 'Upload', '$http', '$q', function ($parse, $timeout, $window, Upload, $http, $q) {
	    return {
	      restrict: 'AEC',
	      require: '?ngModel',
	      link: function link(scope, elem, attr, ngModel) {
	        linkDrop(scope, elem, attr, ngModel, $parse, $timeout, $window, Upload, $http, $q);
	      }
	    };
	  }]);

	  ngFileUpload.directive('ngfNoFileDrop', function () {
	    return function (scope, elem) {
	      if (dropAvailable()) elem.css('display', 'none');
	    };
	  });

	  ngFileUpload.directive('ngfDropAvailable', ['$parse', '$timeout', 'Upload', function ($parse, $timeout, Upload) {
	    return function (scope, elem, attr) {
	      if (dropAvailable()) {
	        var model = $parse(Upload.attrGetter('ngfDropAvailable', attr));
	        $timeout(function () {
	          model(scope);
	          if (model.assign) {
	            model.assign(scope, true);
	          }
	        });
	      }
	    };
	  }]);

	  function linkDrop(scope, elem, attr, ngModel, $parse, $timeout, $window, upload, $http, $q) {
	    var available = dropAvailable();

	    var attrGetter = function attrGetter(name, scope, params) {
	      return upload.attrGetter(name, attr, scope, params);
	    };

	    if (attrGetter('dropAvailable')) {
	      $timeout(function () {
	        if (scope[attrGetter('dropAvailable')]) {
	          scope[attrGetter('dropAvailable')].value = available;
	        } else {
	          scope[attrGetter('dropAvailable')] = available;
	        }
	      });
	    }
	    if (!available) {
	      if (attrGetter('ngfHideOnDropNotAvailable', scope) === true) {
	        elem.css('display', 'none');
	      }
	      return;
	    }

	    function isDisabled() {
	      return elem.attr('disabled') || attrGetter('ngfDropDisabled', scope);
	    }

	    if (attrGetter('ngfSelect') == null) {
	      upload.registerModelChangeValidator(ngModel, attr, scope);
	    }

	    var leaveTimeout = null;
	    var stopPropagation = $parse(attrGetter('ngfStopPropagation'));
	    var dragOverDelay = 1;
	    var actualDragOverClass;

	    elem[0].addEventListener('dragover', function (evt) {
	      if (isDisabled() || !upload.shouldUpdateOn('drop', attr, scope)) return;
	      evt.preventDefault();
	      if (stopPropagation(scope)) evt.stopPropagation();
	      // handling dragover events from the Chrome download bar
	      if (navigator.userAgent.indexOf('Chrome') > -1) {
	        var b = evt.dataTransfer.effectAllowed;
	        evt.dataTransfer.dropEffect = 'move' === b || 'linkMove' === b ? 'move' : 'copy';
	      }
	      $timeout.cancel(leaveTimeout);
	      if (!actualDragOverClass) {
	        actualDragOverClass = 'C';
	        calculateDragOverClass(scope, attr, evt, function (clazz) {
	          actualDragOverClass = clazz;
	          elem.addClass(actualDragOverClass);
	          attrGetter('ngfDrag', scope, { $isDragging: true, $class: actualDragOverClass, $event: evt });
	        });
	      }
	    }, false);
	    elem[0].addEventListener('dragenter', function (evt) {
	      if (isDisabled() || !upload.shouldUpdateOn('drop', attr, scope)) return;
	      evt.preventDefault();
	      if (stopPropagation(scope)) evt.stopPropagation();
	    }, false);
	    elem[0].addEventListener('dragleave', function (evt) {
	      if (isDisabled() || !upload.shouldUpdateOn('drop', attr, scope)) return;
	      evt.preventDefault();
	      if (stopPropagation(scope)) evt.stopPropagation();
	      leaveTimeout = $timeout(function () {
	        if (actualDragOverClass) elem.removeClass(actualDragOverClass);
	        actualDragOverClass = null;
	        attrGetter('ngfDrag', scope, { $isDragging: false, $event: evt });
	      }, dragOverDelay || 100);
	    }, false);
	    elem[0].addEventListener('drop', function (evt) {
	      if (isDisabled() || !upload.shouldUpdateOn('drop', attr, scope)) return;
	      evt.preventDefault();
	      if (stopPropagation(scope)) evt.stopPropagation();
	      if (actualDragOverClass) elem.removeClass(actualDragOverClass);
	      actualDragOverClass = null;
	      extractFilesAndUpdateModel(evt.dataTransfer, evt, 'dropUrl');
	    }, false);
	    elem[0].addEventListener('paste', function (evt) {
	      if (navigator.userAgent.toLowerCase().indexOf('firefox') > -1 && attrGetter('ngfEnableFirefoxPaste', scope)) {
	        evt.preventDefault();
	      }
	      if (isDisabled() || !upload.shouldUpdateOn('paste', attr, scope)) return;
	      extractFilesAndUpdateModel(evt.clipboardData || evt.originalEvent.clipboardData, evt, 'pasteUrl');
	    }, false);

	    if (navigator.userAgent.toLowerCase().indexOf('firefox') > -1 && attrGetter('ngfEnableFirefoxPaste', scope)) {
	      elem.attr('contenteditable', true);
	      elem.on('keypress', function (e) {
	        if (!e.metaKey && !e.ctrlKey) {
	          e.preventDefault();
	        }
	      });
	    }

	    function extractFilesAndUpdateModel(source, evt, updateOnType) {
	      if (!source) return;
	      // html needs to be calculated on the same process otherwise the data will be wiped
	      // after promise resolve or setTimeout.
	      var html;
	      try {
	        html = source && source.getData && source.getData('text/html');
	      } catch (e) {/* Fix IE11 that throw error calling getData */
	      }
	      extractFiles(source.items, source.files, attrGetter('ngfAllowDir', scope) !== false, attrGetter('multiple') || attrGetter('ngfMultiple', scope)).then(function (files) {
	        if (files.length) {
	          updateModel(files, evt);
	        } else {
	          extractFilesFromHtml(updateOnType, html).then(function (files) {
	            updateModel(files, evt);
	          });
	        }
	      });
	    }

	    function updateModel(files, evt) {
	      upload.updateModel(ngModel, attr, scope, attrGetter('ngfChange') || attrGetter('ngfDrop'), files, evt);
	    }

	    function extractFilesFromHtml(updateOn, html) {
	      if (!upload.shouldUpdateOn(updateOn, attr, scope) || typeof html !== 'string') return upload.rejectPromise([]);
	      var urls = [];
	      html.replace(/<(img src|img [^>]* src) *=\"([^\"]*)\"/gi, function (m, n, src) {
	        urls.push(src);
	      });
	      var promises = [],
	          files = [];
	      if (urls.length) {
	        angular.forEach(urls, function (url) {
	          promises.push(upload.urlToBlob(url).then(function (blob) {
	            files.push(blob);
	          }));
	        });
	        var defer = $q.defer();
	        $q.all(promises).then(function () {
	          defer.resolve(files);
	        }, function (e) {
	          defer.reject(e);
	        });
	        return defer.promise;
	      }
	      return upload.emptyPromise();
	    }

	    function calculateDragOverClass(scope, attr, evt, callback) {
	      var obj = attrGetter('ngfDragOverClass', scope, { $event: evt }),
	          dClass = 'dragover';
	      if (angular.isString(obj)) {
	        dClass = obj;
	      } else if (obj) {
	        if (obj.delay) dragOverDelay = obj.delay;
	        if (obj.accept || obj.reject) {
	          var items = evt.dataTransfer.items;
	          if (items == null || !items.length) {
	            dClass = obj.accept;
	          } else {
	            var pattern = obj.pattern || attrGetter('ngfPattern', scope, { $event: evt });
	            var len = items.length;
	            while (len--) {
	              if (!upload.validatePattern(items[len], pattern)) {
	                dClass = obj.reject;
	                break;
	              } else {
	                dClass = obj.accept;
	              }
	            }
	          }
	        }
	      }
	      callback(dClass);
	    }

	    function extractFiles(items, fileList, allowDir, multiple) {
	      var maxFiles = upload.getValidationAttr(attr, scope, 'maxFiles');
	      if (maxFiles == null) {
	        maxFiles = Number.MAX_VALUE;
	      }
	      var maxTotalSize = upload.getValidationAttr(attr, scope, 'maxTotalSize');
	      if (maxTotalSize == null) {
	        maxTotalSize = Number.MAX_VALUE;
	      }
	      var includeDir = attrGetter('ngfIncludeDir', scope);
	      var files = [],
	          totalSize = 0;

	      function traverseFileTree(entry, path) {
	        var defer = $q.defer();
	        if (entry != null) {
	          if (entry.isDirectory) {
	            var promises = [upload.emptyPromise()];
	            if (includeDir) {
	              var file = { type: 'directory' };
	              file.name = file.path = (path || '') + entry.name;
	              files.push(file);
	            }
	            var dirReader = entry.createReader();
	            var entries = [];
	            var readEntries = function readEntries() {
	              dirReader.readEntries(function (results) {
	                try {
	                  if (!results.length) {
	                    angular.forEach(entries.slice(0), function (e) {
	                      if (files.length <= maxFiles && totalSize <= maxTotalSize) {
	                        promises.push(traverseFileTree(e, (path ? path : '') + entry.name + '/'));
	                      }
	                    });
	                    $q.all(promises).then(function () {
	                      defer.resolve();
	                    }, function (e) {
	                      defer.reject(e);
	                    });
	                  } else {
	                    entries = entries.concat(Array.prototype.slice.call(results || [], 0));
	                    readEntries();
	                  }
	                } catch (e) {
	                  defer.reject(e);
	                }
	              }, function (e) {
	                defer.reject(e);
	              });
	            };
	            readEntries();
	          } else {
	            entry.file(function (file) {
	              try {
	                file.path = (path ? path : '') + file.name;
	                if (includeDir) {
	                  file = upload.rename(file, file.path);
	                }
	                files.push(file);
	                totalSize += file.size;
	                defer.resolve();
	              } catch (e) {
	                defer.reject(e);
	              }
	            }, function (e) {
	              defer.reject(e);
	            });
	          }
	        }
	        return defer.promise;
	      }

	      var promises = [upload.emptyPromise()];

	      if (items && items.length > 0 && $window.location.protocol !== 'file:') {
	        for (var i = 0; i < items.length; i++) {
	          if (items[i].webkitGetAsEntry && items[i].webkitGetAsEntry() && items[i].webkitGetAsEntry().isDirectory) {
	            var entry = items[i].webkitGetAsEntry();
	            if (entry.isDirectory && !allowDir) {
	              continue;
	            }
	            if (entry != null) {
	              promises.push(traverseFileTree(entry));
	            }
	          } else {
	            var f = items[i].getAsFile();
	            if (f != null) {
	              files.push(f);
	              totalSize += f.size;
	            }
	          }
	          if (files.length > maxFiles || totalSize > maxTotalSize || !multiple && files.length > 0) break;
	        }
	      } else {
	        if (fileList != null) {
	          for (var j = 0; j < fileList.length; j++) {
	            var file = fileList.item(j);
	            if (file.type || file.size > 0) {
	              files.push(file);
	              totalSize += file.size;
	            }
	            if (files.length > maxFiles || totalSize > maxTotalSize || !multiple && files.length > 0) break;
	          }
	        }
	      }

	      var defer = $q.defer();
	      $q.all(promises).then(function () {
	        if (!multiple && !includeDir && files.length) {
	          var i = 0;
	          while (files[i] && files[i].type === 'directory') {
	            i++;
	          }defer.resolve([files[i]]);
	        } else {
	          defer.resolve(files);
	        }
	      }, function (e) {
	        defer.reject(e);
	      });

	      return defer.promise;
	    }
	  }

	  function dropAvailable() {
	    var div = document.createElement('div');
	    return 'draggable' in div && 'ondrop' in div && !/Edge\/12./i.test(navigator.userAgent);
	  }
	})();

	// customized version of https://github.com/exif-js/exif-js
	ngFileUpload.service('UploadExif', ['UploadResize', '$q', function (UploadResize, $q) {
	  var upload = UploadResize;

	  upload.isExifSupported = function () {
	    return window.FileReader && new FileReader().readAsArrayBuffer && upload.isResizeSupported();
	  };

	  function applyTransform(ctx, orientation, width, height) {
	    switch (orientation) {
	      case 2:
	        return ctx.transform(-1, 0, 0, 1, width, 0);
	      case 3:
	        return ctx.transform(-1, 0, 0, -1, width, height);
	      case 4:
	        return ctx.transform(1, 0, 0, -1, 0, height);
	      case 5:
	        return ctx.transform(0, 1, 1, 0, 0, 0);
	      case 6:
	        return ctx.transform(0, 1, -1, 0, height, 0);
	      case 7:
	        return ctx.transform(0, -1, -1, 0, height, width);
	      case 8:
	        return ctx.transform(0, -1, 1, 0, 0, width);
	    }
	  }

	  upload.readOrientation = function (file) {
	    var defer = $q.defer();
	    var reader = new FileReader();
	    var slicedFile = file.slice ? file.slice(0, 64 * 1024) : file;
	    reader.readAsArrayBuffer(slicedFile);
	    reader.onerror = function (e) {
	      return defer.reject(e);
	    };
	    reader.onload = function (e) {
	      var result = { orientation: 1 };
	      var view = new DataView(this.result);
	      if (view.getUint16(0, false) !== 0xFFD8) return defer.resolve(result);

	      var length = view.byteLength,
	          offset = 2;
	      while (offset < length) {
	        var marker = view.getUint16(offset, false);
	        offset += 2;
	        if (marker === 0xFFE1) {
	          if (view.getUint32(offset += 2, false) !== 0x45786966) return defer.resolve(result);

	          var little = view.getUint16(offset += 6, false) === 0x4949;
	          offset += view.getUint32(offset + 4, little);
	          var tags = view.getUint16(offset, little);
	          offset += 2;
	          for (var i = 0; i < tags; i++) {
	            if (view.getUint16(offset + i * 12, little) === 0x0112) {
	              var orientation = view.getUint16(offset + i * 12 + 8, little);
	              if (orientation >= 2 && orientation <= 8) {
	                view.setUint16(offset + i * 12 + 8, 1, little);
	                result.fixedArrayBuffer = e.target.result;
	              }
	              result.orientation = orientation;
	              return defer.resolve(result);
	            }
	          }
	        } else if ((marker & 0xFF00) !== 0xFF00) break;else offset += view.getUint16(offset, false);
	      }
	      return defer.resolve(result);
	    };
	    return defer.promise;
	  };

	  function arrayBufferToBase64(buffer) {
	    var binary = '';
	    var bytes = new Uint8Array(buffer);
	    var len = bytes.byteLength;
	    for (var i = 0; i < len; i++) {
	      binary += String.fromCharCode(bytes[i]);
	    }
	    return window.btoa(binary);
	  }

	  upload.applyExifRotation = function (file) {
	    if (file.type.indexOf('image/jpeg') !== 0) {
	      return upload.emptyPromise(file);
	    }

	    var deferred = $q.defer();
	    upload.readOrientation(file).then(function (result) {
	      if (result.orientation < 2 || result.orientation > 8) {
	        return deferred.resolve(file);
	      }
	      upload.dataUrl(file, true).then(function (url) {
	        var canvas = document.createElement('canvas');
	        var img = document.createElement('img');

	        img.onload = function () {
	          try {
	            canvas.width = result.orientation > 4 ? img.height : img.width;
	            canvas.height = result.orientation > 4 ? img.width : img.height;
	            var ctx = canvas.getContext('2d');
	            applyTransform(ctx, result.orientation, img.width, img.height);
	            ctx.drawImage(img, 0, 0);
	            var dataUrl = canvas.toDataURL(file.type || 'image/WebP', 0.934);
	            dataUrl = upload.restoreExif(arrayBufferToBase64(result.fixedArrayBuffer), dataUrl);
	            var blob = upload.dataUrltoBlob(dataUrl, file.name);
	            deferred.resolve(blob);
	          } catch (e) {
	            return deferred.reject(e);
	          }
	        };
	        img.onerror = function () {
	          deferred.reject();
	        };
	        img.src = url;
	      }, function (e) {
	        deferred.reject(e);
	      });
	    }, function (e) {
	      deferred.reject(e);
	    });
	    return deferred.promise;
	  };

	  upload.restoreExif = function (orig, resized) {
	    var ExifRestorer = {};

	    ExifRestorer.KEY_STR = 'ABCDEFGHIJKLMNOP' + 'QRSTUVWXYZabcdef' + 'ghijklmnopqrstuv' + 'wxyz0123456789+/' + '=';

	    ExifRestorer.encode64 = function (input) {
	      var output = '',
	          chr1,
	          chr2,
	          chr3 = '',
	          enc1,
	          enc2,
	          enc3,
	          enc4 = '',
	          i = 0;

	      do {
	        chr1 = input[i++];
	        chr2 = input[i++];
	        chr3 = input[i++];

	        enc1 = chr1 >> 2;
	        enc2 = (chr1 & 3) << 4 | chr2 >> 4;
	        enc3 = (chr2 & 15) << 2 | chr3 >> 6;
	        enc4 = chr3 & 63;

	        if (isNaN(chr2)) {
	          enc3 = enc4 = 64;
	        } else if (isNaN(chr3)) {
	          enc4 = 64;
	        }

	        output = output + this.KEY_STR.charAt(enc1) + this.KEY_STR.charAt(enc2) + this.KEY_STR.charAt(enc3) + this.KEY_STR.charAt(enc4);
	        chr1 = chr2 = chr3 = '';
	        enc1 = enc2 = enc3 = enc4 = '';
	      } while (i < input.length);

	      return output;
	    };

	    ExifRestorer.restore = function (origFileBase64, resizedFileBase64) {
	      if (origFileBase64.match('data:image/jpeg;base64,')) {
	        origFileBase64 = origFileBase64.replace('data:image/jpeg;base64,', '');
	      }

	      var rawImage = this.decode64(origFileBase64);
	      var segments = this.slice2Segments(rawImage);

	      var image = this.exifManipulation(resizedFileBase64, segments);

	      return 'data:image/jpeg;base64,' + this.encode64(image);
	    };

	    ExifRestorer.exifManipulation = function (resizedFileBase64, segments) {
	      var exifArray = this.getExifArray(segments),
	          newImageArray = this.insertExif(resizedFileBase64, exifArray);
	      return new Uint8Array(newImageArray);
	    };

	    ExifRestorer.getExifArray = function (segments) {
	      var seg;
	      for (var x = 0; x < segments.length; x++) {
	        seg = segments[x];
	        if (seg[0] === 255 & seg[1] === 225) //(ff e1)
	          {
	            return seg;
	          }
	      }
	      return [];
	    };

	    ExifRestorer.insertExif = function (resizedFileBase64, exifArray) {
	      var imageData = resizedFileBase64.replace('data:image/jpeg;base64,', ''),
	          buf = this.decode64(imageData),
	          separatePoint = buf.indexOf(255, 3),
	          mae = buf.slice(0, separatePoint),
	          ato = buf.slice(separatePoint),
	          array = mae;

	      array = array.concat(exifArray);
	      array = array.concat(ato);
	      return array;
	    };

	    ExifRestorer.slice2Segments = function (rawImageArray) {
	      var head = 0,
	          segments = [];

	      while (1) {
	        if (rawImageArray[head] === 255 & rawImageArray[head + 1] === 218) {
	          break;
	        }
	        if (rawImageArray[head] === 255 & rawImageArray[head + 1] === 216) {
	          head += 2;
	        } else {
	          var length = rawImageArray[head + 2] * 256 + rawImageArray[head + 3],
	              endPoint = head + length + 2,
	              seg = rawImageArray.slice(head, endPoint);
	          segments.push(seg);
	          head = endPoint;
	        }
	        if (head > rawImageArray.length) {
	          break;
	        }
	      }

	      return segments;
	    };

	    ExifRestorer.decode64 = function (input) {
	      var chr1,
	          chr2,
	          chr3 = '',
	          enc1,
	          enc2,
	          enc3,
	          enc4 = '',
	          i = 0,
	          buf = [];

	      // remove all characters that are not A-Z, a-z, 0-9, +, /, or =
	      var base64test = /[^A-Za-z0-9\+\/\=]/g;
	      if (base64test.exec(input)) {
	        console.log('There were invalid base64 characters in the input text.\n' + 'Valid base64 characters are A-Z, a-z, 0-9, ' + ', ' / ',and "="\n' + 'Expect errors in decoding.');
	      }
	      input = input.replace(/[^A-Za-z0-9\+\/\=]/g, '');

	      do {
	        enc1 = this.KEY_STR.indexOf(input.charAt(i++));
	        enc2 = this.KEY_STR.indexOf(input.charAt(i++));
	        enc3 = this.KEY_STR.indexOf(input.charAt(i++));
	        enc4 = this.KEY_STR.indexOf(input.charAt(i++));

	        chr1 = enc1 << 2 | enc2 >> 4;
	        chr2 = (enc2 & 15) << 4 | enc3 >> 2;
	        chr3 = (enc3 & 3) << 6 | enc4;

	        buf.push(chr1);

	        if (enc3 !== 64) {
	          buf.push(chr2);
	        }
	        if (enc4 !== 64) {
	          buf.push(chr3);
	        }

	        chr1 = chr2 = chr3 = '';
	        enc1 = enc2 = enc3 = enc4 = '';
	      } while (i < input.length);

	      return buf;
	    };

	    return ExifRestorer.restore(orig, resized); //<= EXIF
	  };

	  return upload;
	}]);

/***/ },
/* 13 */
/***/ function(module, exports) {

	'use strict';

	Object.defineProperty(exports, "__esModule", {
	    value: true
	});
	RedirectServices.$inject = ['$window'];

	function RedirectServices($window) {
	    return {
	        to: {
	            index: function index() {
	                return redirectOrRefresh(getDomain());
	            },
	            admin: function admin() {
	                return redirectOrRefresh(getDomain() + '/admin');
	            },
	            login: function login(data) {
	                return redirectOrRefresh(getDomain() + (data ? '/#/login/?errorType=' + data : '/#/login'));
	            }
	        }
	    };

	    function redirectOrRefresh(url) {
	        if ($window.location.href === url) {
	            reload();
	            return;
	        }
	        $window.location = url;
	    }

	    function refresh() {
	        reload();
	    }

	    function reload() {
	        $window.location.reload(true);
	    }

	    function getDomain() {
	        var l = $window.location;
	        return l.protocol + '//' + l.host;
	    }
	}

	exports.default = RedirectServices;

/***/ },
/* 14 */
/***/ function(module, exports) {

	'use strict';

	Object.defineProperty(exports, "__esModule", {
	    value: true
	});
	AuthenticationServices.$inject = ['$http'];

	function AuthenticationServices($http) {
	    return {
	        authentication: {
	            login: function login(obj) {
	                return $http.post('login/', obj);
	            },
	            logout: function logout() {
	                return $http.get('logout');
	            }
	        },
	        logged: {
	            admin: function admin() {
	                return $http.get('admin/current');
	            },
	            current: function current() {
	                return $http.get('current');
	            }
	        }
	    };
	}

	exports.default = AuthenticationServices;

/***/ },
/* 15 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';

	Object.defineProperty(exports, "__esModule", {
	    value: true
	});

	var _confirmModalTpl = __webpack_require__(16);

	var _confirmModalTpl2 = _interopRequireDefault(_confirmModalTpl);

	var _ConfirmModalController = __webpack_require__(17);

	var _ConfirmModalController2 = _interopRequireDefault(_ConfirmModalController);

	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

	/**
	 * Created by zajac on 30.12.2016.
	 */
	ConfirmModalDirective.$inject = ['$uibModal'];

	function ConfirmModalDirective($uibModal) {
	    return {
	        restrict: 'A',
	        scope: {
	            confirmModal: '&'
	        },
	        link: onLink
	    };

	    function onLink(scope, element, attrs) {
	        element.bind('click', onElementClick);

	        function onElementClick(event) {
	            if (attrs.cmBlocked === 'true') return;
	            if (attrs.cmPropagation === 'false') event.stopPropagation();

	            $uibModal.open({
	                template: _confirmModalTpl2.default,
	                controller: _ConfirmModalController2.default,
	                controllerAs: 'vm',
	                backdrop: 'static',
	                resolve: {
	                    params: function params() {
	                        return {
	                            title: attrs.cmTitle,
	                            confirmModal: scope.confirmModal
	                        };
	                    }
	                }
	            });
	        }
	    }
	}

	exports.default = ConfirmModalDirective;

/***/ },
/* 16 */
/***/ function(module, exports) {

	module.exports = "<div cg-busy=\"vm.promise\">\r\n    <div class=\"modal-header\">\r\n        <h3 class=\"modal-title\" ng-bind=\"vm.title\"></h3>\r\n    </div>\r\n    <div class=\"modal-footer text-right\">\r\n        <button class=\"btn btn-primary\" ng-click=\"vm.ok()\">Tak</button>\r\n        <button class=\"btn btn-default\" ng-click=\"vm.cancel()\">Nie</button>\r\n    </div>\r\n</div>";

/***/ },
/* 17 */
/***/ function(module, exports) {

	'use strict';

	Object.defineProperty(exports, "__esModule", {
	    value: true
	});
	/**
	 * Created by zajac on 30.12.2016.
	 */
	ConfirmModalController.$inject = ['$uibModalInstance', 'params'];

	function ConfirmModalController($uibModalInstance, params) {
	    var vm = this;
	    vm.title = params.title || 'Czy jesteś pewny?';

	    vm.ok = ok;
	    vm.cancel = cancel;

	    // ------------------------------------------------------------------------

	    function ok() {
	        params.confirmModal().then(function () {
	            $uibModalInstance.close();
	        });
	    }

	    function cancel() {
	        $uibModalInstance.dismiss();
	    }
	}

	exports.default = ConfirmModalController;

/***/ },
/* 18 */
/***/ function(module, exports) {

	'use strict';

	Object.defineProperty(exports, "__esModule", {
	  value: true
	});
	/**
	 * Created by zajac on 02.01.2017.
	 */
	InterceptorConfig.$inject = ['$httpProvider'];

	function InterceptorConfig($httpProvider) {
	  $httpProvider.interceptors.push('ResponseInterceptor');
	}

	exports.default = InterceptorConfig;

/***/ },
/* 19 */
/***/ function(module, exports) {

	'use strict';

	Object.defineProperty(exports, "__esModule", {
	    value: true
	});
	/**
	 * Created by zajac on 02.01.2017.
	 */
	ResponseInterceptor.$inject = ['$log', '$q', 'ErrorServices'];

	function ResponseInterceptor($log, $q, ErrorServices) {
	    return {
	        responseError: function responseError(response) {
	            switch (response.status) {

	                case 403:
	                    $log.log('FORBIDDEN', response);
	                    ErrorServices.onAjaxCallError(response);
	                    return $q.reject(response);
	                    break;

	                case 401:
	                    $log.log('UNAUTHORIZED', response);
	                    ErrorServices.onAjaxCallError(response);
	                    return $q.reject(response);
	                    break;
	            }
	            return response;
	        }
	    };
	}

	exports.default = ResponseInterceptor;

/***/ },
/* 20 */
/***/ function(module, exports) {

	'use strict';

	Object.defineProperty(exports, "__esModule", {
	    value: true
	});
	/**
	 * Created by zajac on 02.01.2017.
	 */
	ErrorServices.$inject = ['RedirectServices'];

	function ErrorServices(RedirectServices) {
	    return {
	        getLabelByCode: getLabelByCode,
	        onAjaxCallError: onAjaxCallError
	    };

	    function getLabelByCode(code) {
	        var codes = {
	            'Forbidden': 'To miejsce wymaga zalogowania!',
	            'Unauthorized': 'Twoja sesja wygasła! Zaloguj się ponownie'
	        };
	        return codes[code] ? codes[code] : 'Wystąpił błąd';
	    }

	    function onAjaxCallError(data) {
	        RedirectServices.to.login(data.data);
	    }
	}

	exports.default = ErrorServices;

/***/ },
/* 21 */
/***/ function(module, exports) {

	'use strict';

	Object.defineProperty(exports, "__esModule", {
	  value: true
	});
	/**
	 * Created by zajac on 02.01.2017.
	 */

	AngularBusyConfig.$inject = ['angularBusyDefaults'];

	function AngularBusyConfig(angularBusyDefaults) {
	  angularBusyDefaults.message = 'asdsa';
	  angularBusyDefaults.minDuration = 200;
	}

	exports.default = AngularBusyConfig;

/***/ },
/* 22 */
/***/ function(module, exports) {

	'use strict';

	Object.defineProperty(exports, "__esModule", {
	    value: true
	});
	ManageEmployeesServices.$inject = ['$http'];

	function ManageEmployeesServices($http) {
	    return {
	        list: function list() {
	            return $http.post('employees/list');
	        },
	        listPaginated: function listPaginated(obj) {
	            return $http.post('employees/list', obj);
	        },
	        addOrUpdate: function addOrUpdate(obj) {
	            return $http.post('employees/add', obj);
	        },
	        delete: function _delete(id) {
	            return $http.get('employees/delete/' + id);
	        },
	        search: function search(obj) {
	            return $http.post('employees/search', obj);
	        },
	        current: function current() {
	            return $http.get('current');
	        }
	    };
	}

	exports.default = ManageEmployeesServices;

/***/ },
/* 23 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';

	Object.defineProperty(exports, "__esModule", {
	    value: true
	});

	var _dashTileTemplateTpl = __webpack_require__(24);

	var _dashTileTemplateTpl2 = _interopRequireDefault(_dashTileTemplateTpl);

	var _DashTileComponentController = __webpack_require__(25);

	var _DashTileComponentController2 = _interopRequireDefault(_DashTileComponentController);

	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

	exports.default = {
	    template: _dashTileTemplateTpl2.default,
	    transclude: true,
	    bindings: {
	        title: '='
	    },
	    controllerAs: 'vm',
	    controller: _DashTileComponentController2.default
	};

/***/ },
/* 24 */
/***/ function(module, exports) {

	module.exports = "<div class=\"panel panel-primary\" ng-show=\"vm.showWindow\">\r\n    <div class=\"panel-heading clearfix\">\r\n        <span ng-bind=\"vm.title\" class=\"pull-left\"></span>\r\n        <div class=\"pull-right\">\r\n                    <span class=\" cursor-pointer\"  ng-click=\"vm.showContent()\">\r\n            <i class=\"fa fa-window-minimize\" style=\"font-size:10px; margin-right:5px;\" aria-hidden=\"true\"></i>\r\n</span>\r\n                 <span class=\"cursor-pointer\" ng-click=\"vm.removeTile()\">\r\n            <i class=\"fa fa-times\" aria-hidden=\"true\"></i>   </span>\r\n        </div>\r\n\r\n\r\n    </div>\r\n    <div class=\"panel-body\" ng-show=\"vm.displayStatus\">\r\n        <p ng-transclude></p>\r\n    </div>\r\n</div>";

/***/ },
/* 25 */
/***/ function(module, exports) {

	"use strict";

	Object.defineProperty(exports, "__esModule", {
	    value: true
	});
	/**
	 * Created by zajac on 05.01.2017.
	 */

	DashTileComponentController.$inject = [];

	function DashTileComponentController() {
	    var vm = this;
	    vm.displayStatus = true;
	    vm.showWindow = true;

	    vm.showContent = showContent;
	    vm.removeTile = removeTile;

	    //-----------------------------

	    function showContent() {
	        vm.displayStatus = !vm.displayStatus;
	    }

	    function removeTile() {
	        vm.showWindow = !vm.showWindow;
	    }
	}

	exports.default = DashTileComponentController;

/***/ },
/* 26 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';

	Object.defineProperty(exports, "__esModule", {
	    value: true
	});

	var _employeeItemTemplateTpl = __webpack_require__(27);

	var _employeeItemTemplateTpl2 = _interopRequireDefault(_employeeItemTemplateTpl);

	var _EmployeeItemComponentController = __webpack_require__(28);

	var _EmployeeItemComponentController2 = _interopRequireDefault(_EmployeeItemComponentController);

	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

	/**
	 * Created by zajac on 05.01.2017.
	 */
	exports.default = {
	    template: _employeeItemTemplateTpl2.default,
	    transclude: true,
	    bindings: {
	        employee: '<'
	    },
	    controllerAs: 'vm',
	    controller: _EmployeeItemComponentController2.default
	};

/***/ },
/* 27 */
/***/ function(module, exports) {

	module.exports = "<div ng-click=\"vm.isCollapsed = !vm.isCollapsed\" uib-collapse=\"!vm.isCollapsed\">\r\n    <div class=\"display-flex cursor-pointer\"\r\n         style=\"margin-top:15px;\">\r\n        <img class=\"employee-item-img-big\" ng-src=\"{{vm.employee.avatarPath}}\">\r\n        </img>\r\n        <div class=\"employee-item-info\">\r\n            <div class=\"col-sm-6\">\r\n                <h3 class=\"margin-top-0\"\r\n                    ng-bind=\"vm.employee.academicTitle +' '+ vm.employee.firstName +' '+ vm.employee.lastName\"></h3>\r\n                <p class=\"margin-top-0 margin-bottom-0\" ng-bind=\"vm.employee.function\"></p>\r\n                <p class=\"margin-top-0\" ng-bind=\"vm.employee.department.name\"></p>\r\n                <p class=\"margin-top-0 margin-bottom-0\">Telefon: <span ng-bind=\"vm.employee.phoneNumber\"></span></p>\r\n                <p class=\"margin-top-0 margin-bottom-0\">Adres: <span ng-bind=\"vm.employee.address\"></span></p>\r\n                <p class=\"margin-top-0\" ng-bind=\"'Budynek: '+vm.employee.building+', Pokój:'+vm.employee.room\"></p>\r\n            </div>\r\n            <div class=\"col-sm-6 text-right\">\r\n                <i class=\"fa fa-address-card-o\" style=\"font-size:60px; color:#0957c3;\" aria-hidden=\"true\"></i>\r\n                <p  ng-bind=\"vm.employee.subdomain+'.po.opole.pl'\"></p>\r\n\r\n\r\n            </div>\r\n        </div>\r\n    </div>\r\n</div>\r\n\r\n<div ng-click=\"vm.isCollapsed = !vm.isCollapsed\" uib-collapse=\"vm.isCollapsed\">\r\n    <div class=\"display-flex cursor-pointer\"\r\n         style=\"margin-top:15px;\">\r\n        <div class=\"employee-item-img\" style=\"background-image: url('{{vm.employee.avatarPath}}')\">\r\n        </div>\r\n        <div class=\"employee-item-info\">\r\n            <p class=\"employee-item-title margin-bottom-0\"\r\n               ng-bind=\"vm.employee.academicTitle +' '+ vm.employee.firstName +' '+ vm.employee.lastName\"></p>\r\n            <p class=\"margin-top-0 margin-bottom-0\" ng-bind=\"vm.employee.function\"></p>\r\n            <p class=\"margin-top-0\" ng-bind=\"vm.employee.department.name\"></p>\r\n        </div>\r\n    </div>\r\n</div>";

/***/ },
/* 28 */
/***/ function(module, exports) {

	"use strict";

	Object.defineProperty(exports, "__esModule", {
	  value: true
	});
	/**
	 * Created by zajac on 05.01.2017.
	 */

	EmployeeItemComponentController.$inject = [];

	function EmployeeItemComponentController() {
	  var vm = this;
	  vm.isCollapsed = false;
	}

	exports.default = EmployeeItemComponentController;

/***/ },
/* 29 */
/***/ function(module, exports, __webpack_require__) {

	// style-loader: Adds some css to the DOM by adding a <style> tag

	// load the styles
	var content = __webpack_require__(30);
	if(typeof content === 'string') content = [[module.id, content, '']];
	// add the styles to the DOM
	var update = __webpack_require__(43)(content, {});
	if(content.locals) module.exports = content.locals;
	// Hot Module Replacement
	if(false) {
		// When the styles change, update the <style> tags
		if(!content.locals) {
			module.hot.accept("!!./../../node_modules/css-loader/index.js!./../../node_modules/sass-loader/index.js!./_main-app.scss", function() {
				var newContent = require("!!./../../node_modules/css-loader/index.js!./../../node_modules/sass-loader/index.js!./_main-app.scss");
				if(typeof newContent === 'string') newContent = [[module.id, newContent, '']];
				update(newContent);
			});
		}
		// When the module is disposed, remove the <style> tags
		module.hot.dispose(function() { update(); });
	}

/***/ },
/* 30 */
/***/ function(module, exports, __webpack_require__) {

	exports = module.exports = __webpack_require__(31)();
	// imports
	exports.push([module.id, "@import url(https://fonts.googleapis.com/css?family=Lato:400,900);", ""]);
	exports.push([module.id, "@import url(https://fonts.googleapis.com/css?family=Roboto);", ""]);

	// module
	exports.push([module.id, "@charset \"UTF-8\";\n/*!\n * Bootstrap v3.3.7 (http://getbootstrap.com)\n * Copyright 2011-2016 Twitter, Inc.\n * Licensed under MIT (https://github.com/twbs/core/blob/master/LICENSE)\n */\n/*! normalize.css v3.0.3 | MIT License | github.com/necolas/normalize.css */\nhtml {\n  font-family: sans-serif;\n  -ms-text-size-adjust: 100%;\n  -webkit-text-size-adjust: 100%; }\n\nbody {\n  margin: 0; }\n\narticle,\naside,\ndetails,\nfigcaption,\nfigure,\nfooter,\nheader,\nhgroup,\nmain,\nmenu,\nnav,\nsection,\nsummary {\n  display: block; }\n\naudio,\ncanvas,\nprogress,\nvideo {\n  display: inline-block;\n  vertical-align: baseline; }\n\naudio:not([controls]) {\n  display: none;\n  height: 0; }\n\n[hidden],\ntemplate {\n  display: none; }\n\na {\n  background-color: transparent; }\n\na:active,\na:hover {\n  outline: 0; }\n\nabbr[title] {\n  border-bottom: 1px dotted; }\n\nb,\nstrong {\n  font-weight: bold; }\n\ndfn {\n  font-style: italic; }\n\nh1 {\n  font-size: 2em;\n  margin: 0.67em 0; }\n\nmark {\n  background: #ff0;\n  color: #000; }\n\nsmall {\n  font-size: 80%; }\n\nsub,\nsup {\n  font-size: 75%;\n  line-height: 0;\n  position: relative;\n  vertical-align: baseline; }\n\nsup {\n  top: -0.5em; }\n\nsub {\n  bottom: -0.25em; }\n\nimg {\n  border: 0; }\n\nsvg:not(:root) {\n  overflow: hidden; }\n\nfigure {\n  margin: 1em 40px; }\n\nhr {\n  box-sizing: content-box;\n  height: 0; }\n\npre {\n  overflow: auto; }\n\ncode,\nkbd,\npre,\nsamp {\n  font-family: monospace, monospace;\n  font-size: 1em; }\n\nbutton,\ninput,\noptgroup,\nselect,\ntextarea {\n  color: inherit;\n  font: inherit;\n  margin: 0; }\n\nbutton {\n  overflow: visible; }\n\nbutton,\nselect {\n  text-transform: none; }\n\nbutton,\nhtml input[type=\"button\"],\ninput[type=\"reset\"],\ninput[type=\"submit\"] {\n  -webkit-appearance: button;\n  cursor: pointer; }\n\nbutton[disabled],\nhtml input[disabled] {\n  cursor: default; }\n\nbutton::-moz-focus-inner,\ninput::-moz-focus-inner {\n  border: 0;\n  padding: 0; }\n\ninput {\n  line-height: normal; }\n\ninput[type=\"checkbox\"],\ninput[type=\"radio\"] {\n  box-sizing: border-box;\n  padding: 0; }\n\ninput[type=\"number\"]::-webkit-inner-spin-button,\ninput[type=\"number\"]::-webkit-outer-spin-button {\n  height: auto; }\n\ninput[type=\"search\"] {\n  -webkit-appearance: textfield;\n  box-sizing: content-box; }\n\ninput[type=\"search\"]::-webkit-search-cancel-button,\ninput[type=\"search\"]::-webkit-search-decoration {\n  -webkit-appearance: none; }\n\nfieldset {\n  border: 1px solid #c0c0c0;\n  margin: 0 2px;\n  padding: 0.35em 0.625em 0.75em; }\n\nlegend {\n  border: 0;\n  padding: 0; }\n\ntextarea {\n  overflow: auto; }\n\noptgroup {\n  font-weight: bold; }\n\ntable {\n  border-collapse: collapse;\n  border-spacing: 0; }\n\ntd,\nth {\n  padding: 0; }\n\n/*! Source: https://github.com/h5bp/html5-boilerplate/blob/master/src/css/main.css */\n@media print {\n  *,\n  *:before,\n  *:after {\n    background: transparent !important;\n    color: #000 !important;\n    box-shadow: none !important;\n    text-shadow: none !important; }\n  a,\n  a:visited {\n    text-decoration: underline; }\n  a[href]:after {\n    content: \" (\" attr(href) \")\"; }\n  abbr[title]:after {\n    content: \" (\" attr(title) \")\"; }\n  a[href^=\"#\"]:after,\n  a[href^=\"javascript:\"]:after {\n    content: \"\"; }\n  pre,\n  blockquote {\n    border: 1px solid #999;\n    page-break-inside: avoid; }\n  thead {\n    display: table-header-group; }\n  tr,\n  img {\n    page-break-inside: avoid; }\n  img {\n    max-width: 100% !important; }\n  p,\n  h2,\n  h3 {\n    orphans: 3;\n    widows: 3; }\n  h2,\n  h3 {\n    page-break-after: avoid; }\n  .navbar {\n    display: none; }\n  .btn > .caret,\n  .dropup > .btn > .caret {\n    border-top-color: #000 !important; }\n  .label {\n    border: 1px solid #000; }\n  .table {\n    border-collapse: collapse !important; }\n    .table td,\n    .table th {\n      background-color: #fff !important; }\n  .table-bordered th,\n  .table-bordered td {\n    border: 1px solid #ddd !important; } }\n\n@font-face {\n  font-family: 'Glyphicons Halflings';\n  src: url(" + __webpack_require__(32) + ");\n  src: url(" + __webpack_require__(32) + "?#iefix) format(\"embedded-opentype\"), url(" + __webpack_require__(33) + ") format(\"woff2\"), url(" + __webpack_require__(34) + ") format(\"woff\"), url(" + __webpack_require__(35) + ") format(\"truetype\"), url(" + __webpack_require__(36) + "#glyphicons_halflingsregular) format(\"svg\"); }\n\n.glyphicon {\n  position: relative;\n  top: 1px;\n  display: inline-block;\n  font-family: 'Glyphicons Halflings';\n  font-style: normal;\n  font-weight: normal;\n  line-height: 1;\n  -webkit-font-smoothing: antialiased;\n  -moz-osx-font-smoothing: grayscale; }\n\n.glyphicon-asterisk:before {\n  content: \"*\"; }\n\n.glyphicon-plus:before {\n  content: \"+\"; }\n\n.glyphicon-euro:before,\n.glyphicon-eur:before {\n  content: \"\\20AC\"; }\n\n.glyphicon-minus:before {\n  content: \"\\2212\"; }\n\n.glyphicon-cloud:before {\n  content: \"\\2601\"; }\n\n.glyphicon-envelope:before {\n  content: \"\\2709\"; }\n\n.glyphicon-pencil:before {\n  content: \"\\270F\"; }\n\n.glyphicon-glass:before {\n  content: \"\\E001\"; }\n\n.glyphicon-music:before {\n  content: \"\\E002\"; }\n\n.glyphicon-search:before {\n  content: \"\\E003\"; }\n\n.glyphicon-heart:before {\n  content: \"\\E005\"; }\n\n.glyphicon-star:before {\n  content: \"\\E006\"; }\n\n.glyphicon-star-empty:before {\n  content: \"\\E007\"; }\n\n.glyphicon-user:before {\n  content: \"\\E008\"; }\n\n.glyphicon-film:before {\n  content: \"\\E009\"; }\n\n.glyphicon-th-large:before {\n  content: \"\\E010\"; }\n\n.glyphicon-th:before {\n  content: \"\\E011\"; }\n\n.glyphicon-th-list:before {\n  content: \"\\E012\"; }\n\n.glyphicon-ok:before {\n  content: \"\\E013\"; }\n\n.glyphicon-remove:before {\n  content: \"\\E014\"; }\n\n.glyphicon-zoom-in:before {\n  content: \"\\E015\"; }\n\n.glyphicon-zoom-out:before {\n  content: \"\\E016\"; }\n\n.glyphicon-off:before {\n  content: \"\\E017\"; }\n\n.glyphicon-signal:before {\n  content: \"\\E018\"; }\n\n.glyphicon-cog:before {\n  content: \"\\E019\"; }\n\n.glyphicon-trash:before {\n  content: \"\\E020\"; }\n\n.glyphicon-home:before {\n  content: \"\\E021\"; }\n\n.glyphicon-file:before {\n  content: \"\\E022\"; }\n\n.glyphicon-time:before {\n  content: \"\\E023\"; }\n\n.glyphicon-road:before {\n  content: \"\\E024\"; }\n\n.glyphicon-download-alt:before {\n  content: \"\\E025\"; }\n\n.glyphicon-download:before {\n  content: \"\\E026\"; }\n\n.glyphicon-upload:before {\n  content: \"\\E027\"; }\n\n.glyphicon-inbox:before {\n  content: \"\\E028\"; }\n\n.glyphicon-play-circle:before {\n  content: \"\\E029\"; }\n\n.glyphicon-repeat:before {\n  content: \"\\E030\"; }\n\n.glyphicon-refresh:before {\n  content: \"\\E031\"; }\n\n.glyphicon-list-alt:before {\n  content: \"\\E032\"; }\n\n.glyphicon-lock:before {\n  content: \"\\E033\"; }\n\n.glyphicon-flag:before {\n  content: \"\\E034\"; }\n\n.glyphicon-headphones:before {\n  content: \"\\E035\"; }\n\n.glyphicon-volume-off:before {\n  content: \"\\E036\"; }\n\n.glyphicon-volume-down:before {\n  content: \"\\E037\"; }\n\n.glyphicon-volume-up:before {\n  content: \"\\E038\"; }\n\n.glyphicon-qrcode:before {\n  content: \"\\E039\"; }\n\n.glyphicon-barcode:before {\n  content: \"\\E040\"; }\n\n.glyphicon-tag:before {\n  content: \"\\E041\"; }\n\n.glyphicon-tags:before {\n  content: \"\\E042\"; }\n\n.glyphicon-book:before {\n  content: \"\\E043\"; }\n\n.glyphicon-bookmark:before {\n  content: \"\\E044\"; }\n\n.glyphicon-print:before {\n  content: \"\\E045\"; }\n\n.glyphicon-camera:before {\n  content: \"\\E046\"; }\n\n.glyphicon-font:before {\n  content: \"\\E047\"; }\n\n.glyphicon-bold:before {\n  content: \"\\E048\"; }\n\n.glyphicon-italic:before {\n  content: \"\\E049\"; }\n\n.glyphicon-text-height:before {\n  content: \"\\E050\"; }\n\n.glyphicon-text-width:before {\n  content: \"\\E051\"; }\n\n.glyphicon-align-left:before {\n  content: \"\\E052\"; }\n\n.glyphicon-align-center:before {\n  content: \"\\E053\"; }\n\n.glyphicon-align-right:before {\n  content: \"\\E054\"; }\n\n.glyphicon-align-justify:before {\n  content: \"\\E055\"; }\n\n.glyphicon-list:before {\n  content: \"\\E056\"; }\n\n.glyphicon-indent-left:before {\n  content: \"\\E057\"; }\n\n.glyphicon-indent-right:before {\n  content: \"\\E058\"; }\n\n.glyphicon-facetime-video:before {\n  content: \"\\E059\"; }\n\n.glyphicon-picture:before {\n  content: \"\\E060\"; }\n\n.glyphicon-map-marker:before {\n  content: \"\\E062\"; }\n\n.glyphicon-adjust:before {\n  content: \"\\E063\"; }\n\n.glyphicon-tint:before {\n  content: \"\\E064\"; }\n\n.glyphicon-edit:before {\n  content: \"\\E065\"; }\n\n.glyphicon-share:before {\n  content: \"\\E066\"; }\n\n.glyphicon-check:before {\n  content: \"\\E067\"; }\n\n.glyphicon-move:before {\n  content: \"\\E068\"; }\n\n.glyphicon-step-backward:before {\n  content: \"\\E069\"; }\n\n.glyphicon-fast-backward:before {\n  content: \"\\E070\"; }\n\n.glyphicon-backward:before {\n  content: \"\\E071\"; }\n\n.glyphicon-play:before {\n  content: \"\\E072\"; }\n\n.glyphicon-pause:before {\n  content: \"\\E073\"; }\n\n.glyphicon-stop:before {\n  content: \"\\E074\"; }\n\n.glyphicon-forward:before {\n  content: \"\\E075\"; }\n\n.glyphicon-fast-forward:before {\n  content: \"\\E076\"; }\n\n.glyphicon-step-forward:before {\n  content: \"\\E077\"; }\n\n.glyphicon-eject:before {\n  content: \"\\E078\"; }\n\n.glyphicon-chevron-left:before {\n  content: \"\\E079\"; }\n\n.glyphicon-chevron-right:before {\n  content: \"\\E080\"; }\n\n.glyphicon-plus-sign:before {\n  content: \"\\E081\"; }\n\n.glyphicon-minus-sign:before {\n  content: \"\\E082\"; }\n\n.glyphicon-remove-sign:before {\n  content: \"\\E083\"; }\n\n.glyphicon-ok-sign:before {\n  content: \"\\E084\"; }\n\n.glyphicon-question-sign:before {\n  content: \"\\E085\"; }\n\n.glyphicon-info-sign:before {\n  content: \"\\E086\"; }\n\n.glyphicon-screenshot:before {\n  content: \"\\E087\"; }\n\n.glyphicon-remove-circle:before {\n  content: \"\\E088\"; }\n\n.glyphicon-ok-circle:before {\n  content: \"\\E089\"; }\n\n.glyphicon-ban-circle:before {\n  content: \"\\E090\"; }\n\n.glyphicon-arrow-left:before {\n  content: \"\\E091\"; }\n\n.glyphicon-arrow-right:before {\n  content: \"\\E092\"; }\n\n.glyphicon-arrow-up:before {\n  content: \"\\E093\"; }\n\n.glyphicon-arrow-down:before {\n  content: \"\\E094\"; }\n\n.glyphicon-share-alt:before {\n  content: \"\\E095\"; }\n\n.glyphicon-resize-full:before {\n  content: \"\\E096\"; }\n\n.glyphicon-resize-small:before {\n  content: \"\\E097\"; }\n\n.glyphicon-exclamation-sign:before {\n  content: \"\\E101\"; }\n\n.glyphicon-gift:before {\n  content: \"\\E102\"; }\n\n.glyphicon-leaf:before {\n  content: \"\\E103\"; }\n\n.glyphicon-fire:before {\n  content: \"\\E104\"; }\n\n.glyphicon-eye-open:before {\n  content: \"\\E105\"; }\n\n.glyphicon-eye-close:before {\n  content: \"\\E106\"; }\n\n.glyphicon-warning-sign:before {\n  content: \"\\E107\"; }\n\n.glyphicon-plane:before {\n  content: \"\\E108\"; }\n\n.glyphicon-calendar:before {\n  content: \"\\E109\"; }\n\n.glyphicon-random:before {\n  content: \"\\E110\"; }\n\n.glyphicon-comment:before {\n  content: \"\\E111\"; }\n\n.glyphicon-magnet:before {\n  content: \"\\E112\"; }\n\n.glyphicon-chevron-up:before {\n  content: \"\\E113\"; }\n\n.glyphicon-chevron-down:before {\n  content: \"\\E114\"; }\n\n.glyphicon-retweet:before {\n  content: \"\\E115\"; }\n\n.glyphicon-shopping-cart:before {\n  content: \"\\E116\"; }\n\n.glyphicon-folder-close:before {\n  content: \"\\E117\"; }\n\n.glyphicon-folder-open:before {\n  content: \"\\E118\"; }\n\n.glyphicon-resize-vertical:before {\n  content: \"\\E119\"; }\n\n.glyphicon-resize-horizontal:before {\n  content: \"\\E120\"; }\n\n.glyphicon-hdd:before {\n  content: \"\\E121\"; }\n\n.glyphicon-bullhorn:before {\n  content: \"\\E122\"; }\n\n.glyphicon-bell:before {\n  content: \"\\E123\"; }\n\n.glyphicon-certificate:before {\n  content: \"\\E124\"; }\n\n.glyphicon-thumbs-up:before {\n  content: \"\\E125\"; }\n\n.glyphicon-thumbs-down:before {\n  content: \"\\E126\"; }\n\n.glyphicon-hand-right:before {\n  content: \"\\E127\"; }\n\n.glyphicon-hand-left:before {\n  content: \"\\E128\"; }\n\n.glyphicon-hand-up:before {\n  content: \"\\E129\"; }\n\n.glyphicon-hand-down:before {\n  content: \"\\E130\"; }\n\n.glyphicon-circle-arrow-right:before {\n  content: \"\\E131\"; }\n\n.glyphicon-circle-arrow-left:before {\n  content: \"\\E132\"; }\n\n.glyphicon-circle-arrow-up:before {\n  content: \"\\E133\"; }\n\n.glyphicon-circle-arrow-down:before {\n  content: \"\\E134\"; }\n\n.glyphicon-globe:before {\n  content: \"\\E135\"; }\n\n.glyphicon-wrench:before {\n  content: \"\\E136\"; }\n\n.glyphicon-tasks:before {\n  content: \"\\E137\"; }\n\n.glyphicon-filter:before {\n  content: \"\\E138\"; }\n\n.glyphicon-briefcase:before {\n  content: \"\\E139\"; }\n\n.glyphicon-fullscreen:before {\n  content: \"\\E140\"; }\n\n.glyphicon-dashboard:before {\n  content: \"\\E141\"; }\n\n.glyphicon-paperclip:before {\n  content: \"\\E142\"; }\n\n.glyphicon-heart-empty:before {\n  content: \"\\E143\"; }\n\n.glyphicon-link:before {\n  content: \"\\E144\"; }\n\n.glyphicon-phone:before {\n  content: \"\\E145\"; }\n\n.glyphicon-pushpin:before {\n  content: \"\\E146\"; }\n\n.glyphicon-usd:before {\n  content: \"\\E148\"; }\n\n.glyphicon-gbp:before {\n  content: \"\\E149\"; }\n\n.glyphicon-sort:before {\n  content: \"\\E150\"; }\n\n.glyphicon-sort-by-alphabet:before {\n  content: \"\\E151\"; }\n\n.glyphicon-sort-by-alphabet-alt:before {\n  content: \"\\E152\"; }\n\n.glyphicon-sort-by-order:before {\n  content: \"\\E153\"; }\n\n.glyphicon-sort-by-order-alt:before {\n  content: \"\\E154\"; }\n\n.glyphicon-sort-by-attributes:before {\n  content: \"\\E155\"; }\n\n.glyphicon-sort-by-attributes-alt:before {\n  content: \"\\E156\"; }\n\n.glyphicon-unchecked:before {\n  content: \"\\E157\"; }\n\n.glyphicon-expand:before {\n  content: \"\\E158\"; }\n\n.glyphicon-collapse-down:before {\n  content: \"\\E159\"; }\n\n.glyphicon-collapse-up:before {\n  content: \"\\E160\"; }\n\n.glyphicon-log-in:before {\n  content: \"\\E161\"; }\n\n.glyphicon-flash:before {\n  content: \"\\E162\"; }\n\n.glyphicon-log-out:before {\n  content: \"\\E163\"; }\n\n.glyphicon-new-window:before {\n  content: \"\\E164\"; }\n\n.glyphicon-record:before {\n  content: \"\\E165\"; }\n\n.glyphicon-save:before {\n  content: \"\\E166\"; }\n\n.glyphicon-open:before {\n  content: \"\\E167\"; }\n\n.glyphicon-saved:before {\n  content: \"\\E168\"; }\n\n.glyphicon-import:before {\n  content: \"\\E169\"; }\n\n.glyphicon-export:before {\n  content: \"\\E170\"; }\n\n.glyphicon-send:before {\n  content: \"\\E171\"; }\n\n.glyphicon-floppy-disk:before {\n  content: \"\\E172\"; }\n\n.glyphicon-floppy-saved:before {\n  content: \"\\E173\"; }\n\n.glyphicon-floppy-remove:before {\n  content: \"\\E174\"; }\n\n.glyphicon-floppy-save:before {\n  content: \"\\E175\"; }\n\n.glyphicon-floppy-open:before {\n  content: \"\\E176\"; }\n\n.glyphicon-credit-card:before {\n  content: \"\\E177\"; }\n\n.glyphicon-transfer:before {\n  content: \"\\E178\"; }\n\n.glyphicon-cutlery:before {\n  content: \"\\E179\"; }\n\n.glyphicon-header:before {\n  content: \"\\E180\"; }\n\n.glyphicon-compressed:before {\n  content: \"\\E181\"; }\n\n.glyphicon-earphone:before {\n  content: \"\\E182\"; }\n\n.glyphicon-phone-alt:before {\n  content: \"\\E183\"; }\n\n.glyphicon-tower:before {\n  content: \"\\E184\"; }\n\n.glyphicon-stats:before {\n  content: \"\\E185\"; }\n\n.glyphicon-sd-video:before {\n  content: \"\\E186\"; }\n\n.glyphicon-hd-video:before {\n  content: \"\\E187\"; }\n\n.glyphicon-subtitles:before {\n  content: \"\\E188\"; }\n\n.glyphicon-sound-stereo:before {\n  content: \"\\E189\"; }\n\n.glyphicon-sound-dolby:before {\n  content: \"\\E190\"; }\n\n.glyphicon-sound-5-1:before {\n  content: \"\\E191\"; }\n\n.glyphicon-sound-6-1:before {\n  content: \"\\E192\"; }\n\n.glyphicon-sound-7-1:before {\n  content: \"\\E193\"; }\n\n.glyphicon-copyright-mark:before {\n  content: \"\\E194\"; }\n\n.glyphicon-registration-mark:before {\n  content: \"\\E195\"; }\n\n.glyphicon-cloud-download:before {\n  content: \"\\E197\"; }\n\n.glyphicon-cloud-upload:before {\n  content: \"\\E198\"; }\n\n.glyphicon-tree-conifer:before {\n  content: \"\\E199\"; }\n\n.glyphicon-tree-deciduous:before {\n  content: \"\\E200\"; }\n\n.glyphicon-cd:before {\n  content: \"\\E201\"; }\n\n.glyphicon-save-file:before {\n  content: \"\\E202\"; }\n\n.glyphicon-open-file:before {\n  content: \"\\E203\"; }\n\n.glyphicon-level-up:before {\n  content: \"\\E204\"; }\n\n.glyphicon-copy:before {\n  content: \"\\E205\"; }\n\n.glyphicon-paste:before {\n  content: \"\\E206\"; }\n\n.glyphicon-alert:before {\n  content: \"\\E209\"; }\n\n.glyphicon-equalizer:before {\n  content: \"\\E210\"; }\n\n.glyphicon-king:before {\n  content: \"\\E211\"; }\n\n.glyphicon-queen:before {\n  content: \"\\E212\"; }\n\n.glyphicon-pawn:before {\n  content: \"\\E213\"; }\n\n.glyphicon-bishop:before {\n  content: \"\\E214\"; }\n\n.glyphicon-knight:before {\n  content: \"\\E215\"; }\n\n.glyphicon-baby-formula:before {\n  content: \"\\E216\"; }\n\n.glyphicon-tent:before {\n  content: \"\\26FA\"; }\n\n.glyphicon-blackboard:before {\n  content: \"\\E218\"; }\n\n.glyphicon-bed:before {\n  content: \"\\E219\"; }\n\n.glyphicon-apple:before {\n  content: \"\\F8FF\"; }\n\n.glyphicon-erase:before {\n  content: \"\\E221\"; }\n\n.glyphicon-hourglass:before {\n  content: \"\\231B\"; }\n\n.glyphicon-lamp:before {\n  content: \"\\E223\"; }\n\n.glyphicon-duplicate:before {\n  content: \"\\E224\"; }\n\n.glyphicon-piggy-bank:before {\n  content: \"\\E225\"; }\n\n.glyphicon-scissors:before {\n  content: \"\\E226\"; }\n\n.glyphicon-bitcoin:before {\n  content: \"\\E227\"; }\n\n.glyphicon-btc:before {\n  content: \"\\E227\"; }\n\n.glyphicon-xbt:before {\n  content: \"\\E227\"; }\n\n.glyphicon-yen:before {\n  content: \"\\A5\"; }\n\n.glyphicon-jpy:before {\n  content: \"\\A5\"; }\n\n.glyphicon-ruble:before {\n  content: \"\\20BD\"; }\n\n.glyphicon-rub:before {\n  content: \"\\20BD\"; }\n\n.glyphicon-scale:before {\n  content: \"\\E230\"; }\n\n.glyphicon-ice-lolly:before {\n  content: \"\\E231\"; }\n\n.glyphicon-ice-lolly-tasted:before {\n  content: \"\\E232\"; }\n\n.glyphicon-education:before {\n  content: \"\\E233\"; }\n\n.glyphicon-option-horizontal:before {\n  content: \"\\E234\"; }\n\n.glyphicon-option-vertical:before {\n  content: \"\\E235\"; }\n\n.glyphicon-menu-hamburger:before {\n  content: \"\\E236\"; }\n\n.glyphicon-modal-window:before {\n  content: \"\\E237\"; }\n\n.glyphicon-oil:before {\n  content: \"\\E238\"; }\n\n.glyphicon-grain:before {\n  content: \"\\E239\"; }\n\n.glyphicon-sunglasses:before {\n  content: \"\\E240\"; }\n\n.glyphicon-text-size:before {\n  content: \"\\E241\"; }\n\n.glyphicon-text-color:before {\n  content: \"\\E242\"; }\n\n.glyphicon-text-background:before {\n  content: \"\\E243\"; }\n\n.glyphicon-object-align-top:before {\n  content: \"\\E244\"; }\n\n.glyphicon-object-align-bottom:before {\n  content: \"\\E245\"; }\n\n.glyphicon-object-align-horizontal:before {\n  content: \"\\E246\"; }\n\n.glyphicon-object-align-left:before {\n  content: \"\\E247\"; }\n\n.glyphicon-object-align-vertical:before {\n  content: \"\\E248\"; }\n\n.glyphicon-object-align-right:before {\n  content: \"\\E249\"; }\n\n.glyphicon-triangle-right:before {\n  content: \"\\E250\"; }\n\n.glyphicon-triangle-left:before {\n  content: \"\\E251\"; }\n\n.glyphicon-triangle-bottom:before {\n  content: \"\\E252\"; }\n\n.glyphicon-triangle-top:before {\n  content: \"\\E253\"; }\n\n.glyphicon-console:before {\n  content: \"\\E254\"; }\n\n.glyphicon-superscript:before {\n  content: \"\\E255\"; }\n\n.glyphicon-subscript:before {\n  content: \"\\E256\"; }\n\n.glyphicon-menu-left:before {\n  content: \"\\E257\"; }\n\n.glyphicon-menu-right:before {\n  content: \"\\E258\"; }\n\n.glyphicon-menu-down:before {\n  content: \"\\E259\"; }\n\n.glyphicon-menu-up:before {\n  content: \"\\E260\"; }\n\n* {\n  -webkit-box-sizing: border-box;\n  -moz-box-sizing: border-box;\n  box-sizing: border-box; }\n\n*:before,\n*:after {\n  -webkit-box-sizing: border-box;\n  -moz-box-sizing: border-box;\n  box-sizing: border-box; }\n\nhtml {\n  font-size: 10px;\n  -webkit-tap-highlight-color: transparent; }\n\nbody {\n  font-family: \"Helvetica Neue\", Helvetica, Arial, sans-serif;\n  font-size: 14px;\n  line-height: 1.42857;\n  color: #2b2b2b;\n  background-color: #fff; }\n\ninput,\nbutton,\nselect,\ntextarea {\n  font-family: inherit;\n  font-size: inherit;\n  line-height: inherit; }\n\na {\n  color: #2b2b2b;\n  text-decoration: none; }\n  a:hover, a:focus {\n    color: #21be88;\n    text-decoration: underline; }\n  a:focus {\n    outline: 5px auto -webkit-focus-ring-color;\n    outline-offset: -2px; }\n\nfigure {\n  margin: 0; }\n\nimg {\n  vertical-align: middle; }\n\n.img-responsive {\n  display: block;\n  max-width: 100%;\n  height: auto; }\n\n.img-rounded {\n  border-radius: 6px; }\n\n.img-thumbnail {\n  padding: 4px;\n  line-height: 1.42857;\n  background-color: #fff;\n  border: 1px solid #ddd;\n  border-radius: 4px;\n  -webkit-transition: all 0.2s ease-in-out;\n  -o-transition: all 0.2s ease-in-out;\n  transition: all 0.2s ease-in-out;\n  display: inline-block;\n  max-width: 100%;\n  height: auto; }\n\n.img-circle {\n  border-radius: 50%; }\n\nhr {\n  margin-top: 20px;\n  margin-bottom: 20px;\n  border: 0;\n  border-top: 1px solid #eeeeee; }\n\n.sr-only {\n  position: absolute;\n  width: 1px;\n  height: 1px;\n  margin: -1px;\n  padding: 0;\n  overflow: hidden;\n  clip: rect(0, 0, 0, 0);\n  border: 0; }\n\n.sr-only-focusable:active, .sr-only-focusable:focus {\n  position: static;\n  width: auto;\n  height: auto;\n  margin: 0;\n  overflow: visible;\n  clip: auto; }\n\n[role=\"button\"] {\n  cursor: pointer; }\n\nh1, h2, h3, h4, h5, h6,\n.h1, .h2, .h3, .h4, .h5, .h6 {\n  font-family: inherit;\n  font-weight: 500;\n  line-height: 1.1;\n  color: inherit; }\n  h1 small,\n  h1 .small, h2 small,\n  h2 .small, h3 small,\n  h3 .small, h4 small,\n  h4 .small, h5 small,\n  h5 .small, h6 small,\n  h6 .small,\n  .h1 small,\n  .h1 .small, .h2 small,\n  .h2 .small, .h3 small,\n  .h3 .small, .h4 small,\n  .h4 .small, .h5 small,\n  .h5 .small, .h6 small,\n  .h6 .small {\n    font-weight: normal;\n    line-height: 1;\n    color: #777777; }\n\nh1, .h1,\nh2, .h2,\nh3, .h3 {\n  margin-top: 20px;\n  margin-bottom: 10px; }\n  h1 small,\n  h1 .small, .h1 small,\n  .h1 .small,\n  h2 small,\n  h2 .small, .h2 small,\n  .h2 .small,\n  h3 small,\n  h3 .small, .h3 small,\n  .h3 .small {\n    font-size: 65%; }\n\nh4, .h4,\nh5, .h5,\nh6, .h6 {\n  margin-top: 10px;\n  margin-bottom: 10px; }\n  h4 small,\n  h4 .small, .h4 small,\n  .h4 .small,\n  h5 small,\n  h5 .small, .h5 small,\n  .h5 .small,\n  h6 small,\n  h6 .small, .h6 small,\n  .h6 .small {\n    font-size: 75%; }\n\nh1, .h1 {\n  font-size: 36px; }\n\nh2, .h2 {\n  font-size: 30px; }\n\nh3, .h3 {\n  font-size: 24px; }\n\nh4, .h4 {\n  font-size: 18px; }\n\nh5, .h5 {\n  font-size: 14px; }\n\nh6, .h6 {\n  font-size: 12px; }\n\np {\n  margin: 0 0 10px; }\n\n.lead {\n  margin-bottom: 20px;\n  font-size: 16px;\n  font-weight: 300;\n  line-height: 1.4; }\n  @media (min-width: 768px) {\n    .lead {\n      font-size: 21px; } }\n\nsmall,\n.small {\n  font-size: 85%; }\n\nmark,\n.mark {\n  background-color: #fcf8e3;\n  padding: .2em; }\n\n.text-left {\n  text-align: left; }\n\n.text-right {\n  text-align: right; }\n\n.text-center {\n  text-align: center; }\n\n.text-justify {\n  text-align: justify; }\n\n.text-nowrap {\n  white-space: nowrap; }\n\n.text-lowercase {\n  text-transform: lowercase; }\n\n.text-uppercase, .initialism {\n  text-transform: uppercase; }\n\n.text-capitalize {\n  text-transform: capitalize; }\n\n.text-muted {\n  color: #777777; }\n\n.text-primary {\n  color: #21be88; }\n\na.text-primary:hover,\na.text-primary:focus {\n  color: #199369; }\n\n.text-success {\n  color: #3c763d; }\n\na.text-success:hover,\na.text-success:focus {\n  color: #2b542c; }\n\n.text-info {\n  color: #31708f; }\n\na.text-info:hover,\na.text-info:focus {\n  color: #245269; }\n\n.text-warning {\n  color: #8a6d3b; }\n\na.text-warning:hover,\na.text-warning:focus {\n  color: #66512c; }\n\n.text-danger {\n  color: #a94442; }\n\na.text-danger:hover,\na.text-danger:focus {\n  color: #843534; }\n\n.bg-primary {\n  color: #fff; }\n\n.bg-primary {\n  background-color: #21be88; }\n\na.bg-primary:hover,\na.bg-primary:focus {\n  background-color: #199369; }\n\n.bg-success {\n  background-color: #dff0d8; }\n\na.bg-success:hover,\na.bg-success:focus {\n  background-color: #c1e2b3; }\n\n.bg-info {\n  background-color: #d9edf7; }\n\na.bg-info:hover,\na.bg-info:focus {\n  background-color: #afd9ee; }\n\n.bg-warning {\n  background-color: #fcf8e3; }\n\na.bg-warning:hover,\na.bg-warning:focus {\n  background-color: #f7ecb5; }\n\n.bg-danger {\n  background-color: #f2dede; }\n\na.bg-danger:hover,\na.bg-danger:focus {\n  background-color: #e4b9b9; }\n\n.page-header {\n  padding-bottom: 9px;\n  margin: 40px 0 20px;\n  border-bottom: 1px solid #eeeeee; }\n\nul,\nol {\n  margin-top: 0;\n  margin-bottom: 10px; }\n  ul ul,\n  ul ol,\n  ol ul,\n  ol ol {\n    margin-bottom: 0; }\n\n.list-unstyled {\n  padding-left: 0;\n  list-style: none; }\n\n.list-inline {\n  padding-left: 0;\n  list-style: none;\n  margin-left: -5px; }\n  .list-inline > li {\n    display: inline-block;\n    padding-left: 5px;\n    padding-right: 5px; }\n\ndl {\n  margin-top: 0;\n  margin-bottom: 20px; }\n\ndt,\ndd {\n  line-height: 1.42857; }\n\ndt {\n  font-weight: bold; }\n\ndd {\n  margin-left: 0; }\n\n.dl-horizontal dd:before, .dl-horizontal dd:after {\n  content: \" \";\n  display: table; }\n\n.dl-horizontal dd:after {\n  clear: both; }\n\n@media (min-width: 768px) {\n  .dl-horizontal dt {\n    float: left;\n    width: 160px;\n    clear: left;\n    text-align: right;\n    overflow: hidden;\n    text-overflow: ellipsis;\n    white-space: nowrap; }\n  .dl-horizontal dd {\n    margin-left: 180px; } }\n\nabbr[title],\nabbr[data-original-title] {\n  cursor: help;\n  border-bottom: 1px dotted #777777; }\n\n.initialism {\n  font-size: 90%; }\n\nblockquote {\n  padding: 10px 20px;\n  margin: 0 0 20px;\n  font-size: 17.5px;\n  border-left: 5px solid #eeeeee; }\n  blockquote p:last-child,\n  blockquote ul:last-child,\n  blockquote ol:last-child {\n    margin-bottom: 0; }\n  blockquote footer,\n  blockquote small,\n  blockquote .small {\n    display: block;\n    font-size: 80%;\n    line-height: 1.42857;\n    color: #777777; }\n    blockquote footer:before,\n    blockquote small:before,\n    blockquote .small:before {\n      content: '\\2014   \\A0'; }\n\n.blockquote-reverse,\nblockquote.pull-right {\n  padding-right: 15px;\n  padding-left: 0;\n  border-right: 5px solid #eeeeee;\n  border-left: 0;\n  text-align: right; }\n  .blockquote-reverse footer:before,\n  .blockquote-reverse small:before,\n  .blockquote-reverse .small:before,\n  blockquote.pull-right footer:before,\n  blockquote.pull-right small:before,\n  blockquote.pull-right .small:before {\n    content: ''; }\n  .blockquote-reverse footer:after,\n  .blockquote-reverse small:after,\n  .blockquote-reverse .small:after,\n  blockquote.pull-right footer:after,\n  blockquote.pull-right small:after,\n  blockquote.pull-right .small:after {\n    content: '\\A0   \\2014'; }\n\naddress {\n  margin-bottom: 20px;\n  font-style: normal;\n  line-height: 1.42857; }\n\ncode,\nkbd,\npre,\nsamp {\n  font-family: Menlo, Monaco, Consolas, \"Courier New\", monospace; }\n\ncode {\n  padding: 2px 4px;\n  font-size: 90%;\n  color: #c7254e;\n  background-color: #f9f2f4;\n  border-radius: 4px; }\n\nkbd {\n  padding: 2px 4px;\n  font-size: 90%;\n  color: #fff;\n  background-color: #333;\n  border-radius: 3px;\n  box-shadow: inset 0 -1px 0 rgba(0, 0, 0, 0.25); }\n  kbd kbd {\n    padding: 0;\n    font-size: 100%;\n    font-weight: bold;\n    box-shadow: none; }\n\npre {\n  display: block;\n  padding: 9.5px;\n  margin: 0 0 10px;\n  font-size: 13px;\n  line-height: 1.42857;\n  word-break: break-all;\n  word-wrap: break-word;\n  color: #333333;\n  background-color: #f5f5f5;\n  border: 1px solid #ccc;\n  border-radius: 4px; }\n  pre code {\n    padding: 0;\n    font-size: inherit;\n    color: inherit;\n    white-space: pre-wrap;\n    background-color: transparent;\n    border-radius: 0; }\n\n.pre-scrollable {\n  max-height: 340px;\n  overflow-y: scroll; }\n\n.container {\n  margin-right: auto;\n  margin-left: auto;\n  padding-left: 15px;\n  padding-right: 15px; }\n  .container:before, .container:after {\n    content: \" \";\n    display: table; }\n  .container:after {\n    clear: both; }\n  @media (min-width: 768px) {\n    .container {\n      width: 750px; } }\n  @media (min-width: 992px) {\n    .container {\n      width: 970px; } }\n  @media (min-width: 1200px) {\n    .container {\n      width: 1170px; } }\n\n.container-fluid {\n  margin-right: auto;\n  margin-left: auto;\n  padding-left: 15px;\n  padding-right: 15px; }\n  .container-fluid:before, .container-fluid:after {\n    content: \" \";\n    display: table; }\n  .container-fluid:after {\n    clear: both; }\n\n.row {\n  margin-left: -15px;\n  margin-right: -15px; }\n  .row:before, .row:after {\n    content: \" \";\n    display: table; }\n  .row:after {\n    clear: both; }\n\n.col-xs-1, .col-sm-1, .col-md-1, .col-lg-1, .col-xs-2, .col-sm-2, .col-md-2, .col-lg-2, .col-xs-3, .col-sm-3, .col-md-3, .col-lg-3, .col-xs-4, .col-sm-4, .col-md-4, .col-lg-4, .col-xs-5, .col-sm-5, .col-md-5, .col-lg-5, .col-xs-6, .col-sm-6, .col-md-6, .col-lg-6, .col-xs-7, .col-sm-7, .col-md-7, .col-lg-7, .col-xs-8, .col-sm-8, .col-md-8, .col-lg-8, .col-xs-9, .col-sm-9, .col-md-9, .col-lg-9, .col-xs-10, .col-sm-10, .col-md-10, .col-lg-10, .col-xs-11, .col-sm-11, .col-md-11, .col-lg-11, .col-xs-12, .col-sm-12, .col-md-12, .col-lg-12 {\n  position: relative;\n  min-height: 1px;\n  padding-left: 15px;\n  padding-right: 15px; }\n\n.col-xs-1, .col-xs-2, .col-xs-3, .col-xs-4, .col-xs-5, .col-xs-6, .col-xs-7, .col-xs-8, .col-xs-9, .col-xs-10, .col-xs-11, .col-xs-12 {\n  float: left; }\n\n.col-xs-1 {\n  width: 8.33333%; }\n\n.col-xs-2 {\n  width: 16.66667%; }\n\n.col-xs-3 {\n  width: 25%; }\n\n.col-xs-4 {\n  width: 33.33333%; }\n\n.col-xs-5 {\n  width: 41.66667%; }\n\n.col-xs-6 {\n  width: 50%; }\n\n.col-xs-7 {\n  width: 58.33333%; }\n\n.col-xs-8 {\n  width: 66.66667%; }\n\n.col-xs-9 {\n  width: 75%; }\n\n.col-xs-10 {\n  width: 83.33333%; }\n\n.col-xs-11 {\n  width: 91.66667%; }\n\n.col-xs-12 {\n  width: 100%; }\n\n.col-xs-pull-0 {\n  right: auto; }\n\n.col-xs-pull-1 {\n  right: 8.33333%; }\n\n.col-xs-pull-2 {\n  right: 16.66667%; }\n\n.col-xs-pull-3 {\n  right: 25%; }\n\n.col-xs-pull-4 {\n  right: 33.33333%; }\n\n.col-xs-pull-5 {\n  right: 41.66667%; }\n\n.col-xs-pull-6 {\n  right: 50%; }\n\n.col-xs-pull-7 {\n  right: 58.33333%; }\n\n.col-xs-pull-8 {\n  right: 66.66667%; }\n\n.col-xs-pull-9 {\n  right: 75%; }\n\n.col-xs-pull-10 {\n  right: 83.33333%; }\n\n.col-xs-pull-11 {\n  right: 91.66667%; }\n\n.col-xs-pull-12 {\n  right: 100%; }\n\n.col-xs-push-0 {\n  left: auto; }\n\n.col-xs-push-1 {\n  left: 8.33333%; }\n\n.col-xs-push-2 {\n  left: 16.66667%; }\n\n.col-xs-push-3 {\n  left: 25%; }\n\n.col-xs-push-4 {\n  left: 33.33333%; }\n\n.col-xs-push-5 {\n  left: 41.66667%; }\n\n.col-xs-push-6 {\n  left: 50%; }\n\n.col-xs-push-7 {\n  left: 58.33333%; }\n\n.col-xs-push-8 {\n  left: 66.66667%; }\n\n.col-xs-push-9 {\n  left: 75%; }\n\n.col-xs-push-10 {\n  left: 83.33333%; }\n\n.col-xs-push-11 {\n  left: 91.66667%; }\n\n.col-xs-push-12 {\n  left: 100%; }\n\n.col-xs-offset-0 {\n  margin-left: 0%; }\n\n.col-xs-offset-1 {\n  margin-left: 8.33333%; }\n\n.col-xs-offset-2 {\n  margin-left: 16.66667%; }\n\n.col-xs-offset-3 {\n  margin-left: 25%; }\n\n.col-xs-offset-4 {\n  margin-left: 33.33333%; }\n\n.col-xs-offset-5 {\n  margin-left: 41.66667%; }\n\n.col-xs-offset-6 {\n  margin-left: 50%; }\n\n.col-xs-offset-7 {\n  margin-left: 58.33333%; }\n\n.col-xs-offset-8 {\n  margin-left: 66.66667%; }\n\n.col-xs-offset-9 {\n  margin-left: 75%; }\n\n.col-xs-offset-10 {\n  margin-left: 83.33333%; }\n\n.col-xs-offset-11 {\n  margin-left: 91.66667%; }\n\n.col-xs-offset-12 {\n  margin-left: 100%; }\n\n@media (min-width: 768px) {\n  .col-sm-1, .col-sm-2, .col-sm-3, .col-sm-4, .col-sm-5, .col-sm-6, .col-sm-7, .col-sm-8, .col-sm-9, .col-sm-10, .col-sm-11, .col-sm-12 {\n    float: left; }\n  .col-sm-1 {\n    width: 8.33333%; }\n  .col-sm-2 {\n    width: 16.66667%; }\n  .col-sm-3 {\n    width: 25%; }\n  .col-sm-4 {\n    width: 33.33333%; }\n  .col-sm-5 {\n    width: 41.66667%; }\n  .col-sm-6 {\n    width: 50%; }\n  .col-sm-7 {\n    width: 58.33333%; }\n  .col-sm-8 {\n    width: 66.66667%; }\n  .col-sm-9 {\n    width: 75%; }\n  .col-sm-10 {\n    width: 83.33333%; }\n  .col-sm-11 {\n    width: 91.66667%; }\n  .col-sm-12 {\n    width: 100%; }\n  .col-sm-pull-0 {\n    right: auto; }\n  .col-sm-pull-1 {\n    right: 8.33333%; }\n  .col-sm-pull-2 {\n    right: 16.66667%; }\n  .col-sm-pull-3 {\n    right: 25%; }\n  .col-sm-pull-4 {\n    right: 33.33333%; }\n  .col-sm-pull-5 {\n    right: 41.66667%; }\n  .col-sm-pull-6 {\n    right: 50%; }\n  .col-sm-pull-7 {\n    right: 58.33333%; }\n  .col-sm-pull-8 {\n    right: 66.66667%; }\n  .col-sm-pull-9 {\n    right: 75%; }\n  .col-sm-pull-10 {\n    right: 83.33333%; }\n  .col-sm-pull-11 {\n    right: 91.66667%; }\n  .col-sm-pull-12 {\n    right: 100%; }\n  .col-sm-push-0 {\n    left: auto; }\n  .col-sm-push-1 {\n    left: 8.33333%; }\n  .col-sm-push-2 {\n    left: 16.66667%; }\n  .col-sm-push-3 {\n    left: 25%; }\n  .col-sm-push-4 {\n    left: 33.33333%; }\n  .col-sm-push-5 {\n    left: 41.66667%; }\n  .col-sm-push-6 {\n    left: 50%; }\n  .col-sm-push-7 {\n    left: 58.33333%; }\n  .col-sm-push-8 {\n    left: 66.66667%; }\n  .col-sm-push-9 {\n    left: 75%; }\n  .col-sm-push-10 {\n    left: 83.33333%; }\n  .col-sm-push-11 {\n    left: 91.66667%; }\n  .col-sm-push-12 {\n    left: 100%; }\n  .col-sm-offset-0 {\n    margin-left: 0%; }\n  .col-sm-offset-1 {\n    margin-left: 8.33333%; }\n  .col-sm-offset-2 {\n    margin-left: 16.66667%; }\n  .col-sm-offset-3 {\n    margin-left: 25%; }\n  .col-sm-offset-4 {\n    margin-left: 33.33333%; }\n  .col-sm-offset-5 {\n    margin-left: 41.66667%; }\n  .col-sm-offset-6 {\n    margin-left: 50%; }\n  .col-sm-offset-7 {\n    margin-left: 58.33333%; }\n  .col-sm-offset-8 {\n    margin-left: 66.66667%; }\n  .col-sm-offset-9 {\n    margin-left: 75%; }\n  .col-sm-offset-10 {\n    margin-left: 83.33333%; }\n  .col-sm-offset-11 {\n    margin-left: 91.66667%; }\n  .col-sm-offset-12 {\n    margin-left: 100%; } }\n\n@media (min-width: 992px) {\n  .col-md-1, .col-md-2, .col-md-3, .col-md-4, .col-md-5, .col-md-6, .col-md-7, .col-md-8, .col-md-9, .col-md-10, .col-md-11, .col-md-12 {\n    float: left; }\n  .col-md-1 {\n    width: 8.33333%; }\n  .col-md-2 {\n    width: 16.66667%; }\n  .col-md-3 {\n    width: 25%; }\n  .col-md-4 {\n    width: 33.33333%; }\n  .col-md-5 {\n    width: 41.66667%; }\n  .col-md-6 {\n    width: 50%; }\n  .col-md-7 {\n    width: 58.33333%; }\n  .col-md-8 {\n    width: 66.66667%; }\n  .col-md-9 {\n    width: 75%; }\n  .col-md-10 {\n    width: 83.33333%; }\n  .col-md-11 {\n    width: 91.66667%; }\n  .col-md-12 {\n    width: 100%; }\n  .col-md-pull-0 {\n    right: auto; }\n  .col-md-pull-1 {\n    right: 8.33333%; }\n  .col-md-pull-2 {\n    right: 16.66667%; }\n  .col-md-pull-3 {\n    right: 25%; }\n  .col-md-pull-4 {\n    right: 33.33333%; }\n  .col-md-pull-5 {\n    right: 41.66667%; }\n  .col-md-pull-6 {\n    right: 50%; }\n  .col-md-pull-7 {\n    right: 58.33333%; }\n  .col-md-pull-8 {\n    right: 66.66667%; }\n  .col-md-pull-9 {\n    right: 75%; }\n  .col-md-pull-10 {\n    right: 83.33333%; }\n  .col-md-pull-11 {\n    right: 91.66667%; }\n  .col-md-pull-12 {\n    right: 100%; }\n  .col-md-push-0 {\n    left: auto; }\n  .col-md-push-1 {\n    left: 8.33333%; }\n  .col-md-push-2 {\n    left: 16.66667%; }\n  .col-md-push-3 {\n    left: 25%; }\n  .col-md-push-4 {\n    left: 33.33333%; }\n  .col-md-push-5 {\n    left: 41.66667%; }\n  .col-md-push-6 {\n    left: 50%; }\n  .col-md-push-7 {\n    left: 58.33333%; }\n  .col-md-push-8 {\n    left: 66.66667%; }\n  .col-md-push-9 {\n    left: 75%; }\n  .col-md-push-10 {\n    left: 83.33333%; }\n  .col-md-push-11 {\n    left: 91.66667%; }\n  .col-md-push-12 {\n    left: 100%; }\n  .col-md-offset-0 {\n    margin-left: 0%; }\n  .col-md-offset-1 {\n    margin-left: 8.33333%; }\n  .col-md-offset-2 {\n    margin-left: 16.66667%; }\n  .col-md-offset-3 {\n    margin-left: 25%; }\n  .col-md-offset-4 {\n    margin-left: 33.33333%; }\n  .col-md-offset-5 {\n    margin-left: 41.66667%; }\n  .col-md-offset-6 {\n    margin-left: 50%; }\n  .col-md-offset-7 {\n    margin-left: 58.33333%; }\n  .col-md-offset-8 {\n    margin-left: 66.66667%; }\n  .col-md-offset-9 {\n    margin-left: 75%; }\n  .col-md-offset-10 {\n    margin-left: 83.33333%; }\n  .col-md-offset-11 {\n    margin-left: 91.66667%; }\n  .col-md-offset-12 {\n    margin-left: 100%; } }\n\n@media (min-width: 1200px) {\n  .col-lg-1, .col-lg-2, .col-lg-3, .col-lg-4, .col-lg-5, .col-lg-6, .col-lg-7, .col-lg-8, .col-lg-9, .col-lg-10, .col-lg-11, .col-lg-12 {\n    float: left; }\n  .col-lg-1 {\n    width: 8.33333%; }\n  .col-lg-2 {\n    width: 16.66667%; }\n  .col-lg-3 {\n    width: 25%; }\n  .col-lg-4 {\n    width: 33.33333%; }\n  .col-lg-5 {\n    width: 41.66667%; }\n  .col-lg-6 {\n    width: 50%; }\n  .col-lg-7 {\n    width: 58.33333%; }\n  .col-lg-8 {\n    width: 66.66667%; }\n  .col-lg-9 {\n    width: 75%; }\n  .col-lg-10 {\n    width: 83.33333%; }\n  .col-lg-11 {\n    width: 91.66667%; }\n  .col-lg-12 {\n    width: 100%; }\n  .col-lg-pull-0 {\n    right: auto; }\n  .col-lg-pull-1 {\n    right: 8.33333%; }\n  .col-lg-pull-2 {\n    right: 16.66667%; }\n  .col-lg-pull-3 {\n    right: 25%; }\n  .col-lg-pull-4 {\n    right: 33.33333%; }\n  .col-lg-pull-5 {\n    right: 41.66667%; }\n  .col-lg-pull-6 {\n    right: 50%; }\n  .col-lg-pull-7 {\n    right: 58.33333%; }\n  .col-lg-pull-8 {\n    right: 66.66667%; }\n  .col-lg-pull-9 {\n    right: 75%; }\n  .col-lg-pull-10 {\n    right: 83.33333%; }\n  .col-lg-pull-11 {\n    right: 91.66667%; }\n  .col-lg-pull-12 {\n    right: 100%; }\n  .col-lg-push-0 {\n    left: auto; }\n  .col-lg-push-1 {\n    left: 8.33333%; }\n  .col-lg-push-2 {\n    left: 16.66667%; }\n  .col-lg-push-3 {\n    left: 25%; }\n  .col-lg-push-4 {\n    left: 33.33333%; }\n  .col-lg-push-5 {\n    left: 41.66667%; }\n  .col-lg-push-6 {\n    left: 50%; }\n  .col-lg-push-7 {\n    left: 58.33333%; }\n  .col-lg-push-8 {\n    left: 66.66667%; }\n  .col-lg-push-9 {\n    left: 75%; }\n  .col-lg-push-10 {\n    left: 83.33333%; }\n  .col-lg-push-11 {\n    left: 91.66667%; }\n  .col-lg-push-12 {\n    left: 100%; }\n  .col-lg-offset-0 {\n    margin-left: 0%; }\n  .col-lg-offset-1 {\n    margin-left: 8.33333%; }\n  .col-lg-offset-2 {\n    margin-left: 16.66667%; }\n  .col-lg-offset-3 {\n    margin-left: 25%; }\n  .col-lg-offset-4 {\n    margin-left: 33.33333%; }\n  .col-lg-offset-5 {\n    margin-left: 41.66667%; }\n  .col-lg-offset-6 {\n    margin-left: 50%; }\n  .col-lg-offset-7 {\n    margin-left: 58.33333%; }\n  .col-lg-offset-8 {\n    margin-left: 66.66667%; }\n  .col-lg-offset-9 {\n    margin-left: 75%; }\n  .col-lg-offset-10 {\n    margin-left: 83.33333%; }\n  .col-lg-offset-11 {\n    margin-left: 91.66667%; }\n  .col-lg-offset-12 {\n    margin-left: 100%; } }\n\ntable {\n  background-color: transparent; }\n\ncaption {\n  padding-top: 8px;\n  padding-bottom: 8px;\n  color: #777777;\n  text-align: left; }\n\nth {\n  text-align: left; }\n\n.table {\n  width: 100%;\n  max-width: 100%;\n  margin-bottom: 20px; }\n  .table > thead > tr > th,\n  .table > thead > tr > td,\n  .table > tbody > tr > th,\n  .table > tbody > tr > td,\n  .table > tfoot > tr > th,\n  .table > tfoot > tr > td {\n    padding: 8px;\n    line-height: 1.42857;\n    vertical-align: top;\n    border-top: 1px solid #ddd; }\n  .table > thead > tr > th {\n    vertical-align: bottom;\n    border-bottom: 2px solid #ddd; }\n  .table > caption + thead > tr:first-child > th,\n  .table > caption + thead > tr:first-child > td,\n  .table > colgroup + thead > tr:first-child > th,\n  .table > colgroup + thead > tr:first-child > td,\n  .table > thead:first-child > tr:first-child > th,\n  .table > thead:first-child > tr:first-child > td {\n    border-top: 0; }\n  .table > tbody + tbody {\n    border-top: 2px solid #ddd; }\n  .table .table {\n    background-color: #fff; }\n\n.table-condensed > thead > tr > th,\n.table-condensed > thead > tr > td,\n.table-condensed > tbody > tr > th,\n.table-condensed > tbody > tr > td,\n.table-condensed > tfoot > tr > th,\n.table-condensed > tfoot > tr > td {\n  padding: 5px; }\n\n.table-bordered {\n  border: 1px solid #ddd; }\n  .table-bordered > thead > tr > th,\n  .table-bordered > thead > tr > td,\n  .table-bordered > tbody > tr > th,\n  .table-bordered > tbody > tr > td,\n  .table-bordered > tfoot > tr > th,\n  .table-bordered > tfoot > tr > td {\n    border: 1px solid #ddd; }\n  .table-bordered > thead > tr > th,\n  .table-bordered > thead > tr > td {\n    border-bottom-width: 2px; }\n\n.table-striped > tbody > tr:nth-of-type(odd) {\n  background-color: #f9f9f9; }\n\n.table-hover > tbody > tr:hover {\n  background-color: #f5f5f5; }\n\ntable col[class*=\"col-\"] {\n  position: static;\n  float: none;\n  display: table-column; }\n\ntable td[class*=\"col-\"],\ntable th[class*=\"col-\"] {\n  position: static;\n  float: none;\n  display: table-cell; }\n\n.table > thead > tr > td.active,\n.table > thead > tr > th.active,\n.table > thead > tr.active > td,\n.table > thead > tr.active > th,\n.table > tbody > tr > td.active,\n.table > tbody > tr > th.active,\n.table > tbody > tr.active > td,\n.table > tbody > tr.active > th,\n.table > tfoot > tr > td.active,\n.table > tfoot > tr > th.active,\n.table > tfoot > tr.active > td,\n.table > tfoot > tr.active > th {\n  background-color: #f5f5f5; }\n\n.table-hover > tbody > tr > td.active:hover,\n.table-hover > tbody > tr > th.active:hover,\n.table-hover > tbody > tr.active:hover > td,\n.table-hover > tbody > tr:hover > .active,\n.table-hover > tbody > tr.active:hover > th {\n  background-color: #e8e8e8; }\n\n.table > thead > tr > td.success,\n.table > thead > tr > th.success,\n.table > thead > tr.success > td,\n.table > thead > tr.success > th,\n.table > tbody > tr > td.success,\n.table > tbody > tr > th.success,\n.table > tbody > tr.success > td,\n.table > tbody > tr.success > th,\n.table > tfoot > tr > td.success,\n.table > tfoot > tr > th.success,\n.table > tfoot > tr.success > td,\n.table > tfoot > tr.success > th {\n  background-color: #dff0d8; }\n\n.table-hover > tbody > tr > td.success:hover,\n.table-hover > tbody > tr > th.success:hover,\n.table-hover > tbody > tr.success:hover > td,\n.table-hover > tbody > tr:hover > .success,\n.table-hover > tbody > tr.success:hover > th {\n  background-color: #d0e9c6; }\n\n.table > thead > tr > td.info,\n.table > thead > tr > th.info,\n.table > thead > tr.info > td,\n.table > thead > tr.info > th,\n.table > tbody > tr > td.info,\n.table > tbody > tr > th.info,\n.table > tbody > tr.info > td,\n.table > tbody > tr.info > th,\n.table > tfoot > tr > td.info,\n.table > tfoot > tr > th.info,\n.table > tfoot > tr.info > td,\n.table > tfoot > tr.info > th {\n  background-color: #d9edf7; }\n\n.table-hover > tbody > tr > td.info:hover,\n.table-hover > tbody > tr > th.info:hover,\n.table-hover > tbody > tr.info:hover > td,\n.table-hover > tbody > tr:hover > .info,\n.table-hover > tbody > tr.info:hover > th {\n  background-color: #c4e3f3; }\n\n.table > thead > tr > td.warning,\n.table > thead > tr > th.warning,\n.table > thead > tr.warning > td,\n.table > thead > tr.warning > th,\n.table > tbody > tr > td.warning,\n.table > tbody > tr > th.warning,\n.table > tbody > tr.warning > td,\n.table > tbody > tr.warning > th,\n.table > tfoot > tr > td.warning,\n.table > tfoot > tr > th.warning,\n.table > tfoot > tr.warning > td,\n.table > tfoot > tr.warning > th {\n  background-color: #fcf8e3; }\n\n.table-hover > tbody > tr > td.warning:hover,\n.table-hover > tbody > tr > th.warning:hover,\n.table-hover > tbody > tr.warning:hover > td,\n.table-hover > tbody > tr:hover > .warning,\n.table-hover > tbody > tr.warning:hover > th {\n  background-color: #faf2cc; }\n\n.table > thead > tr > td.danger,\n.table > thead > tr > th.danger,\n.table > thead > tr.danger > td,\n.table > thead > tr.danger > th,\n.table > tbody > tr > td.danger,\n.table > tbody > tr > th.danger,\n.table > tbody > tr.danger > td,\n.table > tbody > tr.danger > th,\n.table > tfoot > tr > td.danger,\n.table > tfoot > tr > th.danger,\n.table > tfoot > tr.danger > td,\n.table > tfoot > tr.danger > th {\n  background-color: #f2dede; }\n\n.table-hover > tbody > tr > td.danger:hover,\n.table-hover > tbody > tr > th.danger:hover,\n.table-hover > tbody > tr.danger:hover > td,\n.table-hover > tbody > tr:hover > .danger,\n.table-hover > tbody > tr.danger:hover > th {\n  background-color: #ebcccc; }\n\n.table-responsive {\n  overflow-x: auto;\n  min-height: 0.01%; }\n  @media screen and (max-width: 767px) {\n    .table-responsive {\n      width: 100%;\n      margin-bottom: 15px;\n      overflow-y: hidden;\n      -ms-overflow-style: -ms-autohiding-scrollbar;\n      border: 1px solid #ddd; }\n      .table-responsive > .table {\n        margin-bottom: 0; }\n        .table-responsive > .table > thead > tr > th,\n        .table-responsive > .table > thead > tr > td,\n        .table-responsive > .table > tbody > tr > th,\n        .table-responsive > .table > tbody > tr > td,\n        .table-responsive > .table > tfoot > tr > th,\n        .table-responsive > .table > tfoot > tr > td {\n          white-space: nowrap; }\n      .table-responsive > .table-bordered {\n        border: 0; }\n        .table-responsive > .table-bordered > thead > tr > th:first-child,\n        .table-responsive > .table-bordered > thead > tr > td:first-child,\n        .table-responsive > .table-bordered > tbody > tr > th:first-child,\n        .table-responsive > .table-bordered > tbody > tr > td:first-child,\n        .table-responsive > .table-bordered > tfoot > tr > th:first-child,\n        .table-responsive > .table-bordered > tfoot > tr > td:first-child {\n          border-left: 0; }\n        .table-responsive > .table-bordered > thead > tr > th:last-child,\n        .table-responsive > .table-bordered > thead > tr > td:last-child,\n        .table-responsive > .table-bordered > tbody > tr > th:last-child,\n        .table-responsive > .table-bordered > tbody > tr > td:last-child,\n        .table-responsive > .table-bordered > tfoot > tr > th:last-child,\n        .table-responsive > .table-bordered > tfoot > tr > td:last-child {\n          border-right: 0; }\n        .table-responsive > .table-bordered > tbody > tr:last-child > th,\n        .table-responsive > .table-bordered > tbody > tr:last-child > td,\n        .table-responsive > .table-bordered > tfoot > tr:last-child > th,\n        .table-responsive > .table-bordered > tfoot > tr:last-child > td {\n          border-bottom: 0; } }\n\nfieldset {\n  padding: 0;\n  margin: 0;\n  border: 0;\n  min-width: 0; }\n\nlegend {\n  display: block;\n  width: 100%;\n  padding: 0;\n  margin-bottom: 20px;\n  font-size: 21px;\n  line-height: inherit;\n  color: #333333;\n  border: 0;\n  border-bottom: 1px solid #e5e5e5; }\n\nlabel {\n  display: inline-block;\n  max-width: 100%;\n  margin-bottom: 5px;\n  font-weight: bold; }\n\ninput[type=\"search\"] {\n  -webkit-box-sizing: border-box;\n  -moz-box-sizing: border-box;\n  box-sizing: border-box; }\n\ninput[type=\"radio\"],\ninput[type=\"checkbox\"] {\n  margin: 4px 0 0;\n  margin-top: 1px \\9;\n  line-height: normal; }\n\ninput[type=\"file\"] {\n  display: block; }\n\ninput[type=\"range\"] {\n  display: block;\n  width: 100%; }\n\nselect[multiple],\nselect[size] {\n  height: auto; }\n\ninput[type=\"file\"]:focus,\ninput[type=\"radio\"]:focus,\ninput[type=\"checkbox\"]:focus {\n  outline: 5px auto -webkit-focus-ring-color;\n  outline-offset: -2px; }\n\noutput {\n  display: block;\n  padding-top: 7px;\n  font-size: 14px;\n  line-height: 1.42857;\n  color: #555555; }\n\n.form-control {\n  display: block;\n  width: 100%;\n  height: 34px;\n  padding: 6px 12px;\n  font-size: 14px;\n  line-height: 1.42857;\n  color: #555555;\n  background-color: #fff;\n  background-image: none;\n  border: 1px solid #ccc;\n  border-radius: 4px;\n  -webkit-box-shadow: inset 0 1px 1px rgba(0, 0, 0, 0.075);\n  box-shadow: inset 0 1px 1px rgba(0, 0, 0, 0.075);\n  -webkit-transition: border-color ease-in-out 0.15s, box-shadow ease-in-out 0.15s;\n  -o-transition: border-color ease-in-out 0.15s, box-shadow ease-in-out 0.15s;\n  transition: border-color ease-in-out 0.15s, box-shadow ease-in-out 0.15s; }\n  .form-control:focus {\n    border-color: #66afe9;\n    outline: 0;\n    -webkit-box-shadow: inset 0 1px 1px rgba(0, 0, 0, 0.075), 0 0 8px rgba(102, 175, 233, 0.6);\n    box-shadow: inset 0 1px 1px rgba(0, 0, 0, 0.075), 0 0 8px rgba(102, 175, 233, 0.6); }\n  .form-control::-moz-placeholder {\n    color: #999;\n    opacity: 1; }\n  .form-control:-ms-input-placeholder {\n    color: #999; }\n  .form-control::-webkit-input-placeholder {\n    color: #999; }\n  .form-control::-ms-expand {\n    border: 0;\n    background-color: transparent; }\n  .form-control[disabled], .form-control[readonly],\n  fieldset[disabled] .form-control {\n    background-color: #eeeeee;\n    opacity: 1; }\n  .form-control[disabled],\n  fieldset[disabled] .form-control {\n    cursor: not-allowed; }\n\ntextarea.form-control {\n  height: auto; }\n\ninput[type=\"search\"] {\n  -webkit-appearance: none; }\n\n@media screen and (-webkit-min-device-pixel-ratio: 0) {\n  input[type=\"date\"].form-control,\n  input[type=\"time\"].form-control,\n  input[type=\"datetime-local\"].form-control,\n  input[type=\"month\"].form-control {\n    line-height: 34px; }\n  input[type=\"date\"].input-sm, .input-group-sm > input[type=\"date\"].form-control,\n  .input-group-sm > input[type=\"date\"].input-group-addon,\n  .input-group-sm > .input-group-btn > input[type=\"date\"].btn,\n  .input-group-sm input[type=\"date\"],\n  input[type=\"time\"].input-sm,\n  .input-group-sm > input[type=\"time\"].form-control,\n  .input-group-sm > input[type=\"time\"].input-group-addon,\n  .input-group-sm > .input-group-btn > input[type=\"time\"].btn,\n  .input-group-sm\n  input[type=\"time\"],\n  input[type=\"datetime-local\"].input-sm,\n  .input-group-sm > input[type=\"datetime-local\"].form-control,\n  .input-group-sm > input[type=\"datetime-local\"].input-group-addon,\n  .input-group-sm > .input-group-btn > input[type=\"datetime-local\"].btn,\n  .input-group-sm\n  input[type=\"datetime-local\"],\n  input[type=\"month\"].input-sm,\n  .input-group-sm > input[type=\"month\"].form-control,\n  .input-group-sm > input[type=\"month\"].input-group-addon,\n  .input-group-sm > .input-group-btn > input[type=\"month\"].btn,\n  .input-group-sm\n  input[type=\"month\"] {\n    line-height: 30px; }\n  input[type=\"date\"].input-lg, .input-group-lg > input[type=\"date\"].form-control,\n  .input-group-lg > input[type=\"date\"].input-group-addon,\n  .input-group-lg > .input-group-btn > input[type=\"date\"].btn,\n  .input-group-lg input[type=\"date\"],\n  input[type=\"time\"].input-lg,\n  .input-group-lg > input[type=\"time\"].form-control,\n  .input-group-lg > input[type=\"time\"].input-group-addon,\n  .input-group-lg > .input-group-btn > input[type=\"time\"].btn,\n  .input-group-lg\n  input[type=\"time\"],\n  input[type=\"datetime-local\"].input-lg,\n  .input-group-lg > input[type=\"datetime-local\"].form-control,\n  .input-group-lg > input[type=\"datetime-local\"].input-group-addon,\n  .input-group-lg > .input-group-btn > input[type=\"datetime-local\"].btn,\n  .input-group-lg\n  input[type=\"datetime-local\"],\n  input[type=\"month\"].input-lg,\n  .input-group-lg > input[type=\"month\"].form-control,\n  .input-group-lg > input[type=\"month\"].input-group-addon,\n  .input-group-lg > .input-group-btn > input[type=\"month\"].btn,\n  .input-group-lg\n  input[type=\"month\"] {\n    line-height: 46px; } }\n\n.form-group {\n  margin-bottom: 15px; }\n\n.radio,\n.checkbox {\n  position: relative;\n  display: block;\n  margin-top: 10px;\n  margin-bottom: 10px; }\n  .radio label,\n  .checkbox label {\n    min-height: 20px;\n    padding-left: 20px;\n    margin-bottom: 0;\n    font-weight: normal;\n    cursor: pointer; }\n\n.radio input[type=\"radio\"],\n.radio-inline input[type=\"radio\"],\n.checkbox input[type=\"checkbox\"],\n.checkbox-inline input[type=\"checkbox\"] {\n  position: absolute;\n  margin-left: -20px;\n  margin-top: 4px \\9; }\n\n.radio + .radio,\n.checkbox + .checkbox {\n  margin-top: -5px; }\n\n.radio-inline,\n.checkbox-inline {\n  position: relative;\n  display: inline-block;\n  padding-left: 20px;\n  margin-bottom: 0;\n  vertical-align: middle;\n  font-weight: normal;\n  cursor: pointer; }\n\n.radio-inline + .radio-inline,\n.checkbox-inline + .checkbox-inline {\n  margin-top: 0;\n  margin-left: 10px; }\n\ninput[type=\"radio\"][disabled], input[type=\"radio\"].disabled,\nfieldset[disabled] input[type=\"radio\"],\ninput[type=\"checkbox\"][disabled],\ninput[type=\"checkbox\"].disabled,\nfieldset[disabled]\ninput[type=\"checkbox\"] {\n  cursor: not-allowed; }\n\n.radio-inline.disabled,\nfieldset[disabled] .radio-inline,\n.checkbox-inline.disabled,\nfieldset[disabled]\n.checkbox-inline {\n  cursor: not-allowed; }\n\n.radio.disabled label,\nfieldset[disabled] .radio label,\n.checkbox.disabled label,\nfieldset[disabled]\n.checkbox label {\n  cursor: not-allowed; }\n\n.form-control-static {\n  padding-top: 7px;\n  padding-bottom: 7px;\n  margin-bottom: 0;\n  min-height: 34px; }\n  .form-control-static.input-lg, .input-group-lg > .form-control-static.form-control,\n  .input-group-lg > .form-control-static.input-group-addon,\n  .input-group-lg > .input-group-btn > .form-control-static.btn, .form-control-static.input-sm, .input-group-sm > .form-control-static.form-control,\n  .input-group-sm > .form-control-static.input-group-addon,\n  .input-group-sm > .input-group-btn > .form-control-static.btn {\n    padding-left: 0;\n    padding-right: 0; }\n\n.input-sm, .input-group-sm > .form-control,\n.input-group-sm > .input-group-addon,\n.input-group-sm > .input-group-btn > .btn {\n  height: 30px;\n  padding: 5px 10px;\n  font-size: 12px;\n  line-height: 1.5;\n  border-radius: 3px; }\n\nselect.input-sm, .input-group-sm > select.form-control,\n.input-group-sm > select.input-group-addon,\n.input-group-sm > .input-group-btn > select.btn {\n  height: 30px;\n  line-height: 30px; }\n\ntextarea.input-sm, .input-group-sm > textarea.form-control,\n.input-group-sm > textarea.input-group-addon,\n.input-group-sm > .input-group-btn > textarea.btn,\nselect[multiple].input-sm,\n.input-group-sm > select[multiple].form-control,\n.input-group-sm > select[multiple].input-group-addon,\n.input-group-sm > .input-group-btn > select[multiple].btn {\n  height: auto; }\n\n.form-group-sm .form-control {\n  height: 30px;\n  padding: 5px 10px;\n  font-size: 12px;\n  line-height: 1.5;\n  border-radius: 3px; }\n\n.form-group-sm select.form-control {\n  height: 30px;\n  line-height: 30px; }\n\n.form-group-sm textarea.form-control,\n.form-group-sm select[multiple].form-control {\n  height: auto; }\n\n.form-group-sm .form-control-static {\n  height: 30px;\n  min-height: 32px;\n  padding: 6px 10px;\n  font-size: 12px;\n  line-height: 1.5; }\n\n.input-lg, .input-group-lg > .form-control,\n.input-group-lg > .input-group-addon,\n.input-group-lg > .input-group-btn > .btn {\n  height: 46px;\n  padding: 10px 16px;\n  font-size: 18px;\n  line-height: 1.33333;\n  border-radius: 6px; }\n\nselect.input-lg, .input-group-lg > select.form-control,\n.input-group-lg > select.input-group-addon,\n.input-group-lg > .input-group-btn > select.btn {\n  height: 46px;\n  line-height: 46px; }\n\ntextarea.input-lg, .input-group-lg > textarea.form-control,\n.input-group-lg > textarea.input-group-addon,\n.input-group-lg > .input-group-btn > textarea.btn,\nselect[multiple].input-lg,\n.input-group-lg > select[multiple].form-control,\n.input-group-lg > select[multiple].input-group-addon,\n.input-group-lg > .input-group-btn > select[multiple].btn {\n  height: auto; }\n\n.form-group-lg .form-control {\n  height: 46px;\n  padding: 10px 16px;\n  font-size: 18px;\n  line-height: 1.33333;\n  border-radius: 6px; }\n\n.form-group-lg select.form-control {\n  height: 46px;\n  line-height: 46px; }\n\n.form-group-lg textarea.form-control,\n.form-group-lg select[multiple].form-control {\n  height: auto; }\n\n.form-group-lg .form-control-static {\n  height: 46px;\n  min-height: 38px;\n  padding: 11px 16px;\n  font-size: 18px;\n  line-height: 1.33333; }\n\n.has-feedback {\n  position: relative; }\n  .has-feedback .form-control {\n    padding-right: 42.5px; }\n\n.form-control-feedback {\n  position: absolute;\n  top: 0;\n  right: 0;\n  z-index: 2;\n  display: block;\n  width: 34px;\n  height: 34px;\n  line-height: 34px;\n  text-align: center;\n  pointer-events: none; }\n\n.input-lg + .form-control-feedback, .input-group-lg > .form-control + .form-control-feedback,\n.input-group-lg > .input-group-addon + .form-control-feedback,\n.input-group-lg > .input-group-btn > .btn + .form-control-feedback,\n.input-group-lg + .form-control-feedback,\n.form-group-lg .form-control + .form-control-feedback {\n  width: 46px;\n  height: 46px;\n  line-height: 46px; }\n\n.input-sm + .form-control-feedback, .input-group-sm > .form-control + .form-control-feedback,\n.input-group-sm > .input-group-addon + .form-control-feedback,\n.input-group-sm > .input-group-btn > .btn + .form-control-feedback,\n.input-group-sm + .form-control-feedback,\n.form-group-sm .form-control + .form-control-feedback {\n  width: 30px;\n  height: 30px;\n  line-height: 30px; }\n\n.has-success .help-block,\n.has-success .control-label,\n.has-success .radio,\n.has-success .checkbox,\n.has-success .radio-inline,\n.has-success .checkbox-inline,\n.has-success.radio label,\n.has-success.checkbox label,\n.has-success.radio-inline label,\n.has-success.checkbox-inline label {\n  color: #3c763d; }\n\n.has-success .form-control {\n  border-color: #3c763d;\n  -webkit-box-shadow: inset 0 1px 1px rgba(0, 0, 0, 0.075);\n  box-shadow: inset 0 1px 1px rgba(0, 0, 0, 0.075); }\n  .has-success .form-control:focus {\n    border-color: #2b542c;\n    -webkit-box-shadow: inset 0 1px 1px rgba(0, 0, 0, 0.075), 0 0 6px #67b168;\n    box-shadow: inset 0 1px 1px rgba(0, 0, 0, 0.075), 0 0 6px #67b168; }\n\n.has-success .input-group-addon {\n  color: #3c763d;\n  border-color: #3c763d;\n  background-color: #dff0d8; }\n\n.has-success .form-control-feedback {\n  color: #3c763d; }\n\n.has-warning .help-block,\n.has-warning .control-label,\n.has-warning .radio,\n.has-warning .checkbox,\n.has-warning .radio-inline,\n.has-warning .checkbox-inline,\n.has-warning.radio label,\n.has-warning.checkbox label,\n.has-warning.radio-inline label,\n.has-warning.checkbox-inline label {\n  color: #8a6d3b; }\n\n.has-warning .form-control {\n  border-color: #8a6d3b;\n  -webkit-box-shadow: inset 0 1px 1px rgba(0, 0, 0, 0.075);\n  box-shadow: inset 0 1px 1px rgba(0, 0, 0, 0.075); }\n  .has-warning .form-control:focus {\n    border-color: #66512c;\n    -webkit-box-shadow: inset 0 1px 1px rgba(0, 0, 0, 0.075), 0 0 6px #c0a16b;\n    box-shadow: inset 0 1px 1px rgba(0, 0, 0, 0.075), 0 0 6px #c0a16b; }\n\n.has-warning .input-group-addon {\n  color: #8a6d3b;\n  border-color: #8a6d3b;\n  background-color: #fcf8e3; }\n\n.has-warning .form-control-feedback {\n  color: #8a6d3b; }\n\n.has-error .help-block,\n.has-error .control-label,\n.has-error .radio,\n.has-error .checkbox,\n.has-error .radio-inline,\n.has-error .checkbox-inline,\n.has-error.radio label,\n.has-error.checkbox label,\n.has-error.radio-inline label,\n.has-error.checkbox-inline label {\n  color: #a94442; }\n\n.has-error .form-control {\n  border-color: #a94442;\n  -webkit-box-shadow: inset 0 1px 1px rgba(0, 0, 0, 0.075);\n  box-shadow: inset 0 1px 1px rgba(0, 0, 0, 0.075); }\n  .has-error .form-control:focus {\n    border-color: #843534;\n    -webkit-box-shadow: inset 0 1px 1px rgba(0, 0, 0, 0.075), 0 0 6px #ce8483;\n    box-shadow: inset 0 1px 1px rgba(0, 0, 0, 0.075), 0 0 6px #ce8483; }\n\n.has-error .input-group-addon {\n  color: #a94442;\n  border-color: #a94442;\n  background-color: #f2dede; }\n\n.has-error .form-control-feedback {\n  color: #a94442; }\n\n.has-feedback label ~ .form-control-feedback {\n  top: 25px; }\n\n.has-feedback label.sr-only ~ .form-control-feedback {\n  top: 0; }\n\n.help-block {\n  display: block;\n  margin-top: 5px;\n  margin-bottom: 10px;\n  color: #6b6b6b; }\n\n@media (min-width: 768px) {\n  .form-inline .form-group {\n    display: inline-block;\n    margin-bottom: 0;\n    vertical-align: middle; }\n  .form-inline .form-control {\n    display: inline-block;\n    width: auto;\n    vertical-align: middle; }\n  .form-inline .form-control-static {\n    display: inline-block; }\n  .form-inline .input-group {\n    display: inline-table;\n    vertical-align: middle; }\n    .form-inline .input-group .input-group-addon,\n    .form-inline .input-group .input-group-btn,\n    .form-inline .input-group .form-control {\n      width: auto; }\n  .form-inline .input-group > .form-control {\n    width: 100%; }\n  .form-inline .control-label {\n    margin-bottom: 0;\n    vertical-align: middle; }\n  .form-inline .radio,\n  .form-inline .checkbox {\n    display: inline-block;\n    margin-top: 0;\n    margin-bottom: 0;\n    vertical-align: middle; }\n    .form-inline .radio label,\n    .form-inline .checkbox label {\n      padding-left: 0; }\n  .form-inline .radio input[type=\"radio\"],\n  .form-inline .checkbox input[type=\"checkbox\"] {\n    position: relative;\n    margin-left: 0; }\n  .form-inline .has-feedback .form-control-feedback {\n    top: 0; } }\n\n.form-horizontal .radio,\n.form-horizontal .checkbox,\n.form-horizontal .radio-inline,\n.form-horizontal .checkbox-inline {\n  margin-top: 0;\n  margin-bottom: 0;\n  padding-top: 7px; }\n\n.form-horizontal .radio,\n.form-horizontal .checkbox {\n  min-height: 27px; }\n\n.form-horizontal .form-group {\n  margin-left: -15px;\n  margin-right: -15px; }\n  .form-horizontal .form-group:before, .form-horizontal .form-group:after {\n    content: \" \";\n    display: table; }\n  .form-horizontal .form-group:after {\n    clear: both; }\n\n@media (min-width: 768px) {\n  .form-horizontal .control-label {\n    text-align: right;\n    margin-bottom: 0;\n    padding-top: 7px; } }\n\n.form-horizontal .has-feedback .form-control-feedback {\n  right: 15px; }\n\n@media (min-width: 768px) {\n  .form-horizontal .form-group-lg .control-label {\n    padding-top: 11px;\n    font-size: 18px; } }\n\n@media (min-width: 768px) {\n  .form-horizontal .form-group-sm .control-label {\n    padding-top: 6px;\n    font-size: 12px; } }\n\n.btn {\n  display: inline-block;\n  margin-bottom: 0;\n  font-weight: normal;\n  text-align: center;\n  vertical-align: middle;\n  touch-action: manipulation;\n  cursor: pointer;\n  background-image: none;\n  border: 1px solid transparent;\n  white-space: nowrap;\n  padding: 6px 12px;\n  font-size: 14px;\n  line-height: 1.42857;\n  border-radius: 4px;\n  -webkit-user-select: none;\n  -moz-user-select: none;\n  -ms-user-select: none;\n  user-select: none; }\n  .btn:focus, .btn.focus, .btn:active:focus, .btn:active.focus, .btn.active:focus, .btn.active.focus {\n    outline: 5px auto -webkit-focus-ring-color;\n    outline-offset: -2px; }\n  .btn:hover, .btn:focus, .btn.focus {\n    color: #333;\n    text-decoration: none; }\n  .btn:active, .btn.active {\n    outline: 0;\n    background-image: none;\n    -webkit-box-shadow: inset 0 3px 5px rgba(0, 0, 0, 0.125);\n    box-shadow: inset 0 3px 5px rgba(0, 0, 0, 0.125); }\n  .btn.disabled, .btn[disabled],\n  fieldset[disabled] .btn {\n    cursor: not-allowed;\n    opacity: 0.65;\n    filter: alpha(opacity=65);\n    -webkit-box-shadow: none;\n    box-shadow: none; }\n\na.btn.disabled,\nfieldset[disabled] a.btn {\n  pointer-events: none; }\n\n.btn-default {\n  color: #333;\n  background-color: #fff;\n  border-color: #ccc; }\n  .btn-default:focus, .btn-default.focus {\n    color: #333;\n    background-color: #e6e6e6;\n    border-color: #8c8c8c; }\n  .btn-default:hover {\n    color: #333;\n    background-color: #e6e6e6;\n    border-color: #adadad; }\n  .btn-default:active, .btn-default.active,\n  .open > .btn-default.dropdown-toggle {\n    color: #333;\n    background-color: #e6e6e6;\n    border-color: #adadad; }\n    .btn-default:active:hover, .btn-default:active:focus, .btn-default:active.focus, .btn-default.active:hover, .btn-default.active:focus, .btn-default.active.focus,\n    .open > .btn-default.dropdown-toggle:hover,\n    .open > .btn-default.dropdown-toggle:focus,\n    .open > .btn-default.dropdown-toggle.focus {\n      color: #333;\n      background-color: #d4d4d4;\n      border-color: #8c8c8c; }\n  .btn-default:active, .btn-default.active,\n  .open > .btn-default.dropdown-toggle {\n    background-image: none; }\n  .btn-default.disabled:hover, .btn-default.disabled:focus, .btn-default.disabled.focus, .btn-default[disabled]:hover, .btn-default[disabled]:focus, .btn-default[disabled].focus,\n  fieldset[disabled] .btn-default:hover,\n  fieldset[disabled] .btn-default:focus,\n  fieldset[disabled] .btn-default.focus {\n    background-color: #fff;\n    border-color: #ccc; }\n  .btn-default .badge {\n    color: #fff;\n    background-color: #333; }\n\n.btn-primary {\n  color: #fff;\n  background-color: #21be88;\n  border-color: #1da878; }\n  .btn-primary:focus, .btn-primary.focus {\n    color: #fff;\n    background-color: #199369;\n    border-color: #0a3c2b; }\n  .btn-primary:hover {\n    color: #fff;\n    background-color: #199369;\n    border-color: #147453; }\n  .btn-primary:active, .btn-primary.active,\n  .open > .btn-primary.dropdown-toggle {\n    color: #fff;\n    background-color: #199369;\n    border-color: #147453; }\n    .btn-primary:active:hover, .btn-primary:active:focus, .btn-primary:active.focus, .btn-primary.active:hover, .btn-primary.active:focus, .btn-primary.active.focus,\n    .open > .btn-primary.dropdown-toggle:hover,\n    .open > .btn-primary.dropdown-toggle:focus,\n    .open > .btn-primary.dropdown-toggle.focus {\n      color: #fff;\n      background-color: #147453;\n      border-color: #0a3c2b; }\n  .btn-primary:active, .btn-primary.active,\n  .open > .btn-primary.dropdown-toggle {\n    background-image: none; }\n  .btn-primary.disabled:hover, .btn-primary.disabled:focus, .btn-primary.disabled.focus, .btn-primary[disabled]:hover, .btn-primary[disabled]:focus, .btn-primary[disabled].focus,\n  fieldset[disabled] .btn-primary:hover,\n  fieldset[disabled] .btn-primary:focus,\n  fieldset[disabled] .btn-primary.focus {\n    background-color: #21be88;\n    border-color: #1da878; }\n  .btn-primary .badge {\n    color: #21be88;\n    background-color: #fff; }\n\n.btn-success {\n  color: #fff;\n  background-color: #0957c3;\n  border-color: #084cab; }\n  .btn-success:focus, .btn-success.focus {\n    color: #fff;\n    background-color: #074192;\n    border-color: #021631; }\n  .btn-success:hover {\n    color: #fff;\n    background-color: #074192;\n    border-color: #053270; }\n  .btn-success:active, .btn-success.active,\n  .open > .btn-success.dropdown-toggle {\n    color: #fff;\n    background-color: #074192;\n    border-color: #053270; }\n    .btn-success:active:hover, .btn-success:active:focus, .btn-success:active.focus, .btn-success.active:hover, .btn-success.active:focus, .btn-success.active.focus,\n    .open > .btn-success.dropdown-toggle:hover,\n    .open > .btn-success.dropdown-toggle:focus,\n    .open > .btn-success.dropdown-toggle.focus {\n      color: #fff;\n      background-color: #053270;\n      border-color: #021631; }\n  .btn-success:active, .btn-success.active,\n  .open > .btn-success.dropdown-toggle {\n    background-image: none; }\n  .btn-success.disabled:hover, .btn-success.disabled:focus, .btn-success.disabled.focus, .btn-success[disabled]:hover, .btn-success[disabled]:focus, .btn-success[disabled].focus,\n  fieldset[disabled] .btn-success:hover,\n  fieldset[disabled] .btn-success:focus,\n  fieldset[disabled] .btn-success.focus {\n    background-color: #0957c3;\n    border-color: #084cab; }\n  .btn-success .badge {\n    color: #0957c3;\n    background-color: #fff; }\n\n.btn-info {\n  color: #fff;\n  background-color: #5bc0de;\n  border-color: #46b8da; }\n  .btn-info:focus, .btn-info.focus {\n    color: #fff;\n    background-color: #31b0d5;\n    border-color: #1b6d85; }\n  .btn-info:hover {\n    color: #fff;\n    background-color: #31b0d5;\n    border-color: #269abc; }\n  .btn-info:active, .btn-info.active,\n  .open > .btn-info.dropdown-toggle {\n    color: #fff;\n    background-color: #31b0d5;\n    border-color: #269abc; }\n    .btn-info:active:hover, .btn-info:active:focus, .btn-info:active.focus, .btn-info.active:hover, .btn-info.active:focus, .btn-info.active.focus,\n    .open > .btn-info.dropdown-toggle:hover,\n    .open > .btn-info.dropdown-toggle:focus,\n    .open > .btn-info.dropdown-toggle.focus {\n      color: #fff;\n      background-color: #269abc;\n      border-color: #1b6d85; }\n  .btn-info:active, .btn-info.active,\n  .open > .btn-info.dropdown-toggle {\n    background-image: none; }\n  .btn-info.disabled:hover, .btn-info.disabled:focus, .btn-info.disabled.focus, .btn-info[disabled]:hover, .btn-info[disabled]:focus, .btn-info[disabled].focus,\n  fieldset[disabled] .btn-info:hover,\n  fieldset[disabled] .btn-info:focus,\n  fieldset[disabled] .btn-info.focus {\n    background-color: #5bc0de;\n    border-color: #46b8da; }\n  .btn-info .badge {\n    color: #5bc0de;\n    background-color: #fff; }\n\n.btn-warning {\n  color: #fff;\n  background-color: #f0ad4e;\n  border-color: #eea236; }\n  .btn-warning:focus, .btn-warning.focus {\n    color: #fff;\n    background-color: #ec971f;\n    border-color: #985f0d; }\n  .btn-warning:hover {\n    color: #fff;\n    background-color: #ec971f;\n    border-color: #d58512; }\n  .btn-warning:active, .btn-warning.active,\n  .open > .btn-warning.dropdown-toggle {\n    color: #fff;\n    background-color: #ec971f;\n    border-color: #d58512; }\n    .btn-warning:active:hover, .btn-warning:active:focus, .btn-warning:active.focus, .btn-warning.active:hover, .btn-warning.active:focus, .btn-warning.active.focus,\n    .open > .btn-warning.dropdown-toggle:hover,\n    .open > .btn-warning.dropdown-toggle:focus,\n    .open > .btn-warning.dropdown-toggle.focus {\n      color: #fff;\n      background-color: #d58512;\n      border-color: #985f0d; }\n  .btn-warning:active, .btn-warning.active,\n  .open > .btn-warning.dropdown-toggle {\n    background-image: none; }\n  .btn-warning.disabled:hover, .btn-warning.disabled:focus, .btn-warning.disabled.focus, .btn-warning[disabled]:hover, .btn-warning[disabled]:focus, .btn-warning[disabled].focus,\n  fieldset[disabled] .btn-warning:hover,\n  fieldset[disabled] .btn-warning:focus,\n  fieldset[disabled] .btn-warning.focus {\n    background-color: #f0ad4e;\n    border-color: #eea236; }\n  .btn-warning .badge {\n    color: #f0ad4e;\n    background-color: #fff; }\n\n.btn-danger {\n  color: #fff;\n  background-color: #d9534f;\n  border-color: #d43f3a; }\n  .btn-danger:focus, .btn-danger.focus {\n    color: #fff;\n    background-color: #c9302c;\n    border-color: #761c19; }\n  .btn-danger:hover {\n    color: #fff;\n    background-color: #c9302c;\n    border-color: #ac2925; }\n  .btn-danger:active, .btn-danger.active,\n  .open > .btn-danger.dropdown-toggle {\n    color: #fff;\n    background-color: #c9302c;\n    border-color: #ac2925; }\n    .btn-danger:active:hover, .btn-danger:active:focus, .btn-danger:active.focus, .btn-danger.active:hover, .btn-danger.active:focus, .btn-danger.active.focus,\n    .open > .btn-danger.dropdown-toggle:hover,\n    .open > .btn-danger.dropdown-toggle:focus,\n    .open > .btn-danger.dropdown-toggle.focus {\n      color: #fff;\n      background-color: #ac2925;\n      border-color: #761c19; }\n  .btn-danger:active, .btn-danger.active,\n  .open > .btn-danger.dropdown-toggle {\n    background-image: none; }\n  .btn-danger.disabled:hover, .btn-danger.disabled:focus, .btn-danger.disabled.focus, .btn-danger[disabled]:hover, .btn-danger[disabled]:focus, .btn-danger[disabled].focus,\n  fieldset[disabled] .btn-danger:hover,\n  fieldset[disabled] .btn-danger:focus,\n  fieldset[disabled] .btn-danger.focus {\n    background-color: #d9534f;\n    border-color: #d43f3a; }\n  .btn-danger .badge {\n    color: #d9534f;\n    background-color: #fff; }\n\n.btn-link {\n  color: #2b2b2b;\n  font-weight: normal;\n  border-radius: 0; }\n  .btn-link, .btn-link:active, .btn-link.active, .btn-link[disabled],\n  fieldset[disabled] .btn-link {\n    background-color: transparent;\n    -webkit-box-shadow: none;\n    box-shadow: none; }\n  .btn-link, .btn-link:hover, .btn-link:focus, .btn-link:active {\n    border-color: transparent; }\n  .btn-link:hover, .btn-link:focus {\n    color: #21be88;\n    text-decoration: underline;\n    background-color: transparent; }\n  .btn-link[disabled]:hover, .btn-link[disabled]:focus,\n  fieldset[disabled] .btn-link:hover,\n  fieldset[disabled] .btn-link:focus {\n    color: #777777;\n    text-decoration: none; }\n\n.btn-lg, .btn-group-lg > .btn {\n  padding: 10px 16px;\n  font-size: 18px;\n  line-height: 1.33333;\n  border-radius: 6px; }\n\n.btn-sm, .btn-group-sm > .btn {\n  padding: 5px 10px;\n  font-size: 12px;\n  line-height: 1.5;\n  border-radius: 3px; }\n\n.btn-xs, .btn-group-xs > .btn {\n  padding: 1px 5px;\n  font-size: 12px;\n  line-height: 1.5;\n  border-radius: 3px; }\n\n.btn-block {\n  display: block;\n  width: 100%; }\n\n.btn-block + .btn-block {\n  margin-top: 5px; }\n\ninput[type=\"submit\"].btn-block,\ninput[type=\"reset\"].btn-block,\ninput[type=\"button\"].btn-block {\n  width: 100%; }\n\n.fade {\n  opacity: 0;\n  -webkit-transition: opacity 0.15s linear;\n  -o-transition: opacity 0.15s linear;\n  transition: opacity 0.15s linear; }\n  .fade.in {\n    opacity: 1; }\n\n.collapse {\n  display: none; }\n  .collapse.in {\n    display: block; }\n\ntr.collapse.in {\n  display: table-row; }\n\ntbody.collapse.in {\n  display: table-row-group; }\n\n.collapsing {\n  position: relative;\n  height: 0;\n  overflow: hidden;\n  -webkit-transition-property: height, visibility;\n  transition-property: height, visibility;\n  -webkit-transition-duration: 0.35s;\n  transition-duration: 0.35s;\n  -webkit-transition-timing-function: ease;\n  transition-timing-function: ease; }\n\n.caret {\n  display: inline-block;\n  width: 0;\n  height: 0;\n  margin-left: 2px;\n  vertical-align: middle;\n  border-top: 4px dashed;\n  border-top: 4px solid \\9;\n  border-right: 4px solid transparent;\n  border-left: 4px solid transparent; }\n\n.dropup,\n.dropdown {\n  position: relative; }\n\n.dropdown-toggle:focus {\n  outline: 0; }\n\n.dropdown-menu {\n  position: absolute;\n  top: 100%;\n  left: 0;\n  z-index: 1000;\n  display: none;\n  float: left;\n  min-width: 160px;\n  padding: 5px 0;\n  margin: 2px 0 0;\n  list-style: none;\n  font-size: 14px;\n  text-align: left;\n  background-color: #fff;\n  border: 1px solid #ccc;\n  border: 1px solid rgba(0, 0, 0, 0.15);\n  border-radius: 4px;\n  -webkit-box-shadow: 0 6px 12px rgba(0, 0, 0, 0.175);\n  box-shadow: 0 6px 12px rgba(0, 0, 0, 0.175);\n  background-clip: padding-box; }\n  .dropdown-menu.pull-right {\n    right: 0;\n    left: auto; }\n  .dropdown-menu .divider {\n    height: 1px;\n    margin: 9px 0;\n    overflow: hidden;\n    background-color: #e5e5e5; }\n  .dropdown-menu > li > a {\n    display: block;\n    padding: 3px 20px;\n    clear: both;\n    font-weight: normal;\n    line-height: 1.42857;\n    color: #333333;\n    white-space: nowrap; }\n\n.dropdown-menu > li > a:hover, .dropdown-menu > li > a:focus {\n  text-decoration: none;\n  color: #262626;\n  background-color: #f5f5f5; }\n\n.dropdown-menu > .active > a, .dropdown-menu > .active > a:hover, .dropdown-menu > .active > a:focus {\n  color: #fff;\n  text-decoration: none;\n  outline: 0;\n  background-color: #21be88; }\n\n.dropdown-menu > .disabled > a, .dropdown-menu > .disabled > a:hover, .dropdown-menu > .disabled > a:focus {\n  color: #777777; }\n\n.dropdown-menu > .disabled > a:hover, .dropdown-menu > .disabled > a:focus {\n  text-decoration: none;\n  background-color: transparent;\n  background-image: none;\n  filter: progid:DXImageTransform.Microsoft.gradient(enabled = false);\n  cursor: not-allowed; }\n\n.open > .dropdown-menu {\n  display: block; }\n\n.open > a {\n  outline: 0; }\n\n.dropdown-menu-right {\n  left: auto;\n  right: 0; }\n\n.dropdown-menu-left {\n  left: 0;\n  right: auto; }\n\n.dropdown-header {\n  display: block;\n  padding: 3px 20px;\n  font-size: 12px;\n  line-height: 1.42857;\n  color: #777777;\n  white-space: nowrap; }\n\n.dropdown-backdrop {\n  position: fixed;\n  left: 0;\n  right: 0;\n  bottom: 0;\n  top: 0;\n  z-index: 990; }\n\n.pull-right > .dropdown-menu {\n  right: 0;\n  left: auto; }\n\n.dropup .caret,\n.navbar-fixed-bottom .dropdown .caret {\n  border-top: 0;\n  border-bottom: 4px dashed;\n  border-bottom: 4px solid \\9;\n  content: \"\"; }\n\n.dropup .dropdown-menu,\n.navbar-fixed-bottom .dropdown .dropdown-menu {\n  top: auto;\n  bottom: 100%;\n  margin-bottom: 2px; }\n\n@media (min-width: 768px) {\n  .navbar-right .dropdown-menu {\n    right: 0;\n    left: auto; }\n  .navbar-right .dropdown-menu-left {\n    left: 0;\n    right: auto; } }\n\n.btn-group,\n.btn-group-vertical {\n  position: relative;\n  display: inline-block;\n  vertical-align: middle; }\n  .btn-group > .btn,\n  .btn-group-vertical > .btn {\n    position: relative;\n    float: left; }\n    .btn-group > .btn:hover, .btn-group > .btn:focus, .btn-group > .btn:active, .btn-group > .btn.active,\n    .btn-group-vertical > .btn:hover,\n    .btn-group-vertical > .btn:focus,\n    .btn-group-vertical > .btn:active,\n    .btn-group-vertical > .btn.active {\n      z-index: 2; }\n\n.btn-group .btn + .btn,\n.btn-group .btn + .btn-group,\n.btn-group .btn-group + .btn,\n.btn-group .btn-group + .btn-group {\n  margin-left: -1px; }\n\n.btn-toolbar {\n  margin-left: -5px; }\n  .btn-toolbar:before, .btn-toolbar:after {\n    content: \" \";\n    display: table; }\n  .btn-toolbar:after {\n    clear: both; }\n  .btn-toolbar .btn,\n  .btn-toolbar .btn-group,\n  .btn-toolbar .input-group {\n    float: left; }\n  .btn-toolbar > .btn,\n  .btn-toolbar > .btn-group,\n  .btn-toolbar > .input-group {\n    margin-left: 5px; }\n\n.btn-group > .btn:not(:first-child):not(:last-child):not(.dropdown-toggle) {\n  border-radius: 0; }\n\n.btn-group > .btn:first-child {\n  margin-left: 0; }\n  .btn-group > .btn:first-child:not(:last-child):not(.dropdown-toggle) {\n    border-bottom-right-radius: 0;\n    border-top-right-radius: 0; }\n\n.btn-group > .btn:last-child:not(:first-child),\n.btn-group > .dropdown-toggle:not(:first-child) {\n  border-bottom-left-radius: 0;\n  border-top-left-radius: 0; }\n\n.btn-group > .btn-group {\n  float: left; }\n\n.btn-group > .btn-group:not(:first-child):not(:last-child) > .btn {\n  border-radius: 0; }\n\n.btn-group > .btn-group:first-child:not(:last-child) > .btn:last-child,\n.btn-group > .btn-group:first-child:not(:last-child) > .dropdown-toggle {\n  border-bottom-right-radius: 0;\n  border-top-right-radius: 0; }\n\n.btn-group > .btn-group:last-child:not(:first-child) > .btn:first-child {\n  border-bottom-left-radius: 0;\n  border-top-left-radius: 0; }\n\n.btn-group .dropdown-toggle:active,\n.btn-group.open .dropdown-toggle {\n  outline: 0; }\n\n.btn-group > .btn + .dropdown-toggle {\n  padding-left: 8px;\n  padding-right: 8px; }\n\n.btn-group > .btn-lg + .dropdown-toggle, .btn-group-lg.btn-group > .btn + .dropdown-toggle {\n  padding-left: 12px;\n  padding-right: 12px; }\n\n.btn-group.open .dropdown-toggle {\n  -webkit-box-shadow: inset 0 3px 5px rgba(0, 0, 0, 0.125);\n  box-shadow: inset 0 3px 5px rgba(0, 0, 0, 0.125); }\n  .btn-group.open .dropdown-toggle.btn-link {\n    -webkit-box-shadow: none;\n    box-shadow: none; }\n\n.btn .caret {\n  margin-left: 0; }\n\n.btn-lg .caret, .btn-group-lg > .btn .caret {\n  border-width: 5px 5px 0;\n  border-bottom-width: 0; }\n\n.dropup .btn-lg .caret, .dropup .btn-group-lg > .btn .caret {\n  border-width: 0 5px 5px; }\n\n.btn-group-vertical > .btn,\n.btn-group-vertical > .btn-group,\n.btn-group-vertical > .btn-group > .btn {\n  display: block;\n  float: none;\n  width: 100%;\n  max-width: 100%; }\n\n.btn-group-vertical > .btn-group:before, .btn-group-vertical > .btn-group:after {\n  content: \" \";\n  display: table; }\n\n.btn-group-vertical > .btn-group:after {\n  clear: both; }\n\n.btn-group-vertical > .btn-group > .btn {\n  float: none; }\n\n.btn-group-vertical > .btn + .btn,\n.btn-group-vertical > .btn + .btn-group,\n.btn-group-vertical > .btn-group + .btn,\n.btn-group-vertical > .btn-group + .btn-group {\n  margin-top: -1px;\n  margin-left: 0; }\n\n.btn-group-vertical > .btn:not(:first-child):not(:last-child) {\n  border-radius: 0; }\n\n.btn-group-vertical > .btn:first-child:not(:last-child) {\n  border-top-right-radius: 4px;\n  border-top-left-radius: 4px;\n  border-bottom-right-radius: 0;\n  border-bottom-left-radius: 0; }\n\n.btn-group-vertical > .btn:last-child:not(:first-child) {\n  border-top-right-radius: 0;\n  border-top-left-radius: 0;\n  border-bottom-right-radius: 4px;\n  border-bottom-left-radius: 4px; }\n\n.btn-group-vertical > .btn-group:not(:first-child):not(:last-child) > .btn {\n  border-radius: 0; }\n\n.btn-group-vertical > .btn-group:first-child:not(:last-child) > .btn:last-child,\n.btn-group-vertical > .btn-group:first-child:not(:last-child) > .dropdown-toggle {\n  border-bottom-right-radius: 0;\n  border-bottom-left-radius: 0; }\n\n.btn-group-vertical > .btn-group:last-child:not(:first-child) > .btn:first-child {\n  border-top-right-radius: 0;\n  border-top-left-radius: 0; }\n\n.btn-group-justified {\n  display: table;\n  width: 100%;\n  table-layout: fixed;\n  border-collapse: separate; }\n  .btn-group-justified > .btn,\n  .btn-group-justified > .btn-group {\n    float: none;\n    display: table-cell;\n    width: 1%; }\n  .btn-group-justified > .btn-group .btn {\n    width: 100%; }\n  .btn-group-justified > .btn-group .dropdown-menu {\n    left: auto; }\n\n[data-toggle=\"buttons\"] > .btn input[type=\"radio\"],\n[data-toggle=\"buttons\"] > .btn input[type=\"checkbox\"],\n[data-toggle=\"buttons\"] > .btn-group > .btn input[type=\"radio\"],\n[data-toggle=\"buttons\"] > .btn-group > .btn input[type=\"checkbox\"] {\n  position: absolute;\n  clip: rect(0, 0, 0, 0);\n  pointer-events: none; }\n\n.input-group {\n  position: relative;\n  display: table;\n  border-collapse: separate; }\n  .input-group[class*=\"col-\"] {\n    float: none;\n    padding-left: 0;\n    padding-right: 0; }\n  .input-group .form-control {\n    position: relative;\n    z-index: 2;\n    float: left;\n    width: 100%;\n    margin-bottom: 0; }\n    .input-group .form-control:focus {\n      z-index: 3; }\n\n.input-group-addon,\n.input-group-btn,\n.input-group .form-control {\n  display: table-cell; }\n  .input-group-addon:not(:first-child):not(:last-child),\n  .input-group-btn:not(:first-child):not(:last-child),\n  .input-group .form-control:not(:first-child):not(:last-child) {\n    border-radius: 0; }\n\n.input-group-addon,\n.input-group-btn {\n  width: 1%;\n  white-space: nowrap;\n  vertical-align: middle; }\n\n.input-group-addon {\n  padding: 6px 12px;\n  font-size: 14px;\n  font-weight: normal;\n  line-height: 1;\n  color: #555555;\n  text-align: center;\n  background-color: #eeeeee;\n  border: 1px solid #ccc;\n  border-radius: 4px; }\n  .input-group-addon.input-sm,\n  .input-group-sm > .input-group-addon,\n  .input-group-sm > .input-group-btn > .input-group-addon.btn {\n    padding: 5px 10px;\n    font-size: 12px;\n    border-radius: 3px; }\n  .input-group-addon.input-lg,\n  .input-group-lg > .input-group-addon,\n  .input-group-lg > .input-group-btn > .input-group-addon.btn {\n    padding: 10px 16px;\n    font-size: 18px;\n    border-radius: 6px; }\n  .input-group-addon input[type=\"radio\"],\n  .input-group-addon input[type=\"checkbox\"] {\n    margin-top: 0; }\n\n.input-group .form-control:first-child,\n.input-group-addon:first-child,\n.input-group-btn:first-child > .btn,\n.input-group-btn:first-child > .btn-group > .btn,\n.input-group-btn:first-child > .dropdown-toggle,\n.input-group-btn:last-child > .btn:not(:last-child):not(.dropdown-toggle),\n.input-group-btn:last-child > .btn-group:not(:last-child) > .btn {\n  border-bottom-right-radius: 0;\n  border-top-right-radius: 0; }\n\n.input-group-addon:first-child {\n  border-right: 0; }\n\n.input-group .form-control:last-child,\n.input-group-addon:last-child,\n.input-group-btn:last-child > .btn,\n.input-group-btn:last-child > .btn-group > .btn,\n.input-group-btn:last-child > .dropdown-toggle,\n.input-group-btn:first-child > .btn:not(:first-child),\n.input-group-btn:first-child > .btn-group:not(:first-child) > .btn {\n  border-bottom-left-radius: 0;\n  border-top-left-radius: 0; }\n\n.input-group-addon:last-child {\n  border-left: 0; }\n\n.input-group-btn {\n  position: relative;\n  font-size: 0;\n  white-space: nowrap; }\n  .input-group-btn > .btn {\n    position: relative; }\n    .input-group-btn > .btn + .btn {\n      margin-left: -1px; }\n    .input-group-btn > .btn:hover, .input-group-btn > .btn:focus, .input-group-btn > .btn:active {\n      z-index: 2; }\n  .input-group-btn:first-child > .btn,\n  .input-group-btn:first-child > .btn-group {\n    margin-right: -1px; }\n  .input-group-btn:last-child > .btn,\n  .input-group-btn:last-child > .btn-group {\n    z-index: 2;\n    margin-left: -1px; }\n\n.nav {\n  margin-bottom: 0;\n  padding-left: 0;\n  list-style: none; }\n  .nav:before, .nav:after {\n    content: \" \";\n    display: table; }\n  .nav:after {\n    clear: both; }\n  .nav > li {\n    position: relative;\n    display: block; }\n    .nav > li > a {\n      position: relative;\n      display: block;\n      padding: 10px 15px; }\n      .nav > li > a:hover, .nav > li > a:focus {\n        text-decoration: none;\n        background-color: #eeeeee; }\n    .nav > li.disabled > a {\n      color: #777777; }\n      .nav > li.disabled > a:hover, .nav > li.disabled > a:focus {\n        color: #777777;\n        text-decoration: none;\n        background-color: transparent;\n        cursor: not-allowed; }\n  .nav .open > a, .nav .open > a:hover, .nav .open > a:focus {\n    background-color: #eeeeee;\n    border-color: #2b2b2b; }\n  .nav .nav-divider {\n    height: 1px;\n    margin: 9px 0;\n    overflow: hidden;\n    background-color: #e5e5e5; }\n  .nav > li > a > img {\n    max-width: none; }\n\n.nav-tabs {\n  border-bottom: 1px solid #ddd; }\n  .nav-tabs > li {\n    float: left;\n    margin-bottom: -1px; }\n    .nav-tabs > li > a {\n      margin-right: 2px;\n      line-height: 1.42857;\n      border: 1px solid transparent;\n      border-radius: 4px 4px 0 0; }\n      .nav-tabs > li > a:hover {\n        border-color: #eeeeee #eeeeee #ddd; }\n    .nav-tabs > li.active > a, .nav-tabs > li.active > a:hover, .nav-tabs > li.active > a:focus {\n      color: #555555;\n      background-color: #fff;\n      border: 1px solid #ddd;\n      border-bottom-color: transparent;\n      cursor: default; }\n\n.nav-pills > li {\n  float: left; }\n  .nav-pills > li > a {\n    border-radius: 4px; }\n  .nav-pills > li + li {\n    margin-left: 2px; }\n  .nav-pills > li.active > a, .nav-pills > li.active > a:hover, .nav-pills > li.active > a:focus {\n    color: #fff;\n    background-color: #21be88; }\n\n.nav-stacked > li {\n  float: none; }\n  .nav-stacked > li + li {\n    margin-top: 2px;\n    margin-left: 0; }\n\n.nav-justified, .nav-tabs.nav-justified {\n  width: 100%; }\n  .nav-justified > li, .nav-tabs.nav-justified > li {\n    float: none; }\n    .nav-justified > li > a, .nav-tabs.nav-justified > li > a {\n      text-align: center;\n      margin-bottom: 5px; }\n  .nav-justified > .dropdown .dropdown-menu {\n    top: auto;\n    left: auto; }\n  @media (min-width: 768px) {\n    .nav-justified > li, .nav-tabs.nav-justified > li {\n      display: table-cell;\n      width: 1%; }\n      .nav-justified > li > a, .nav-tabs.nav-justified > li > a {\n        margin-bottom: 0; } }\n\n.nav-tabs-justified, .nav-tabs.nav-justified {\n  border-bottom: 0; }\n  .nav-tabs-justified > li > a, .nav-tabs.nav-justified > li > a {\n    margin-right: 0;\n    border-radius: 4px; }\n  .nav-tabs-justified > .active > a, .nav-tabs.nav-justified > .active > a,\n  .nav-tabs-justified > .active > a:hover, .nav-tabs.nav-justified > .active > a:hover,\n  .nav-tabs-justified > .active > a:focus, .nav-tabs.nav-justified > .active > a:focus {\n    border: 1px solid #ddd; }\n  @media (min-width: 768px) {\n    .nav-tabs-justified > li > a, .nav-tabs.nav-justified > li > a {\n      border-bottom: 1px solid #ddd;\n      border-radius: 4px 4px 0 0; }\n    .nav-tabs-justified > .active > a, .nav-tabs.nav-justified > .active > a,\n    .nav-tabs-justified > .active > a:hover, .nav-tabs.nav-justified > .active > a:hover,\n    .nav-tabs-justified > .active > a:focus, .nav-tabs.nav-justified > .active > a:focus {\n      border-bottom-color: #fff; } }\n\n.tab-content > .tab-pane {\n  display: none; }\n\n.tab-content > .active {\n  display: block; }\n\n.nav-tabs .dropdown-menu {\n  margin-top: -1px;\n  border-top-right-radius: 0;\n  border-top-left-radius: 0; }\n\n.navbar {\n  position: relative;\n  min-height: 50px;\n  margin-bottom: 20px;\n  border: 1px solid transparent; }\n  .navbar:before, .navbar:after {\n    content: \" \";\n    display: table; }\n  .navbar:after {\n    clear: both; }\n  @media (min-width: 768px) {\n    .navbar {\n      border-radius: 4px; } }\n\n.navbar-header:before, .navbar-header:after {\n  content: \" \";\n  display: table; }\n\n.navbar-header:after {\n  clear: both; }\n\n@media (min-width: 768px) {\n  .navbar-header {\n    float: left; } }\n\n.navbar-collapse {\n  overflow-x: visible;\n  padding-right: 15px;\n  padding-left: 15px;\n  border-top: 1px solid transparent;\n  box-shadow: inset 0 1px 0 rgba(255, 255, 255, 0.1);\n  -webkit-overflow-scrolling: touch; }\n  .navbar-collapse:before, .navbar-collapse:after {\n    content: \" \";\n    display: table; }\n  .navbar-collapse:after {\n    clear: both; }\n  .navbar-collapse.in {\n    overflow-y: auto; }\n  @media (min-width: 768px) {\n    .navbar-collapse {\n      width: auto;\n      border-top: 0;\n      box-shadow: none; }\n      .navbar-collapse.collapse {\n        display: block !important;\n        height: auto !important;\n        padding-bottom: 0;\n        overflow: visible !important; }\n      .navbar-collapse.in {\n        overflow-y: visible; }\n      .navbar-fixed-top .navbar-collapse,\n      .navbar-static-top .navbar-collapse,\n      .navbar-fixed-bottom .navbar-collapse {\n        padding-left: 0;\n        padding-right: 0; } }\n\n.navbar-fixed-top .navbar-collapse,\n.navbar-fixed-bottom .navbar-collapse {\n  max-height: 340px; }\n  @media (max-device-width: 480px) and (orientation: landscape) {\n    .navbar-fixed-top .navbar-collapse,\n    .navbar-fixed-bottom .navbar-collapse {\n      max-height: 200px; } }\n\n.container > .navbar-header,\n.container > .navbar-collapse,\n.container-fluid > .navbar-header,\n.container-fluid > .navbar-collapse {\n  margin-right: -15px;\n  margin-left: -15px; }\n  @media (min-width: 768px) {\n    .container > .navbar-header,\n    .container > .navbar-collapse,\n    .container-fluid > .navbar-header,\n    .container-fluid > .navbar-collapse {\n      margin-right: 0;\n      margin-left: 0; } }\n\n.navbar-static-top {\n  z-index: 1000;\n  border-width: 0 0 1px; }\n  @media (min-width: 768px) {\n    .navbar-static-top {\n      border-radius: 0; } }\n\n.navbar-fixed-top,\n.navbar-fixed-bottom {\n  position: fixed;\n  right: 0;\n  left: 0;\n  z-index: 1030; }\n  @media (min-width: 768px) {\n    .navbar-fixed-top,\n    .navbar-fixed-bottom {\n      border-radius: 0; } }\n\n.navbar-fixed-top {\n  top: 0;\n  border-width: 0 0 1px; }\n\n.navbar-fixed-bottom {\n  bottom: 0;\n  margin-bottom: 0;\n  border-width: 1px 0 0; }\n\n.navbar-brand {\n  float: left;\n  padding: 15px 15px;\n  font-size: 18px;\n  line-height: 20px;\n  height: 50px; }\n  .navbar-brand:hover, .navbar-brand:focus {\n    text-decoration: none; }\n  .navbar-brand > img {\n    display: block; }\n  @media (min-width: 768px) {\n    .navbar > .container .navbar-brand,\n    .navbar > .container-fluid .navbar-brand {\n      margin-left: -15px; } }\n\n.navbar-toggle {\n  position: relative;\n  float: right;\n  margin-right: 15px;\n  padding: 9px 10px;\n  margin-top: 8px;\n  margin-bottom: 8px;\n  background-color: transparent;\n  background-image: none;\n  border: 1px solid transparent;\n  border-radius: 4px; }\n  .navbar-toggle:focus {\n    outline: 0; }\n  .navbar-toggle .icon-bar {\n    display: block;\n    width: 22px;\n    height: 2px;\n    border-radius: 1px; }\n  .navbar-toggle .icon-bar + .icon-bar {\n    margin-top: 4px; }\n  @media (min-width: 768px) {\n    .navbar-toggle {\n      display: none; } }\n\n.navbar-nav {\n  margin: 7.5px -15px; }\n  .navbar-nav > li > a {\n    padding-top: 10px;\n    padding-bottom: 10px;\n    line-height: 20px; }\n  @media (max-width: 767px) {\n    .navbar-nav .open .dropdown-menu {\n      position: static;\n      float: none;\n      width: auto;\n      margin-top: 0;\n      background-color: transparent;\n      border: 0;\n      box-shadow: none; }\n      .navbar-nav .open .dropdown-menu > li > a,\n      .navbar-nav .open .dropdown-menu .dropdown-header {\n        padding: 5px 15px 5px 25px; }\n      .navbar-nav .open .dropdown-menu > li > a {\n        line-height: 20px; }\n        .navbar-nav .open .dropdown-menu > li > a:hover, .navbar-nav .open .dropdown-menu > li > a:focus {\n          background-image: none; } }\n  @media (min-width: 768px) {\n    .navbar-nav {\n      float: left;\n      margin: 0; }\n      .navbar-nav > li {\n        float: left; }\n        .navbar-nav > li > a {\n          padding-top: 15px;\n          padding-bottom: 15px; } }\n\n.navbar-form {\n  margin-left: -15px;\n  margin-right: -15px;\n  padding: 10px 15px;\n  border-top: 1px solid transparent;\n  border-bottom: 1px solid transparent;\n  -webkit-box-shadow: inset 0 1px 0 rgba(255, 255, 255, 0.1), 0 1px 0 rgba(255, 255, 255, 0.1);\n  box-shadow: inset 0 1px 0 rgba(255, 255, 255, 0.1), 0 1px 0 rgba(255, 255, 255, 0.1);\n  margin-top: 8px;\n  margin-bottom: 8px; }\n  @media (min-width: 768px) {\n    .navbar-form .form-group {\n      display: inline-block;\n      margin-bottom: 0;\n      vertical-align: middle; }\n    .navbar-form .form-control {\n      display: inline-block;\n      width: auto;\n      vertical-align: middle; }\n    .navbar-form .form-control-static {\n      display: inline-block; }\n    .navbar-form .input-group {\n      display: inline-table;\n      vertical-align: middle; }\n      .navbar-form .input-group .input-group-addon,\n      .navbar-form .input-group .input-group-btn,\n      .navbar-form .input-group .form-control {\n        width: auto; }\n    .navbar-form .input-group > .form-control {\n      width: 100%; }\n    .navbar-form .control-label {\n      margin-bottom: 0;\n      vertical-align: middle; }\n    .navbar-form .radio,\n    .navbar-form .checkbox {\n      display: inline-block;\n      margin-top: 0;\n      margin-bottom: 0;\n      vertical-align: middle; }\n      .navbar-form .radio label,\n      .navbar-form .checkbox label {\n        padding-left: 0; }\n    .navbar-form .radio input[type=\"radio\"],\n    .navbar-form .checkbox input[type=\"checkbox\"] {\n      position: relative;\n      margin-left: 0; }\n    .navbar-form .has-feedback .form-control-feedback {\n      top: 0; } }\n  @media (max-width: 767px) {\n    .navbar-form .form-group {\n      margin-bottom: 5px; }\n      .navbar-form .form-group:last-child {\n        margin-bottom: 0; } }\n  @media (min-width: 768px) {\n    .navbar-form {\n      width: auto;\n      border: 0;\n      margin-left: 0;\n      margin-right: 0;\n      padding-top: 0;\n      padding-bottom: 0;\n      -webkit-box-shadow: none;\n      box-shadow: none; } }\n\n.navbar-nav > li > .dropdown-menu {\n  margin-top: 0;\n  border-top-right-radius: 0;\n  border-top-left-radius: 0; }\n\n.navbar-fixed-bottom .navbar-nav > li > .dropdown-menu {\n  margin-bottom: 0;\n  border-top-right-radius: 4px;\n  border-top-left-radius: 4px;\n  border-bottom-right-radius: 0;\n  border-bottom-left-radius: 0; }\n\n.navbar-btn {\n  margin-top: 8px;\n  margin-bottom: 8px; }\n  .navbar-btn.btn-sm, .btn-group-sm > .navbar-btn.btn {\n    margin-top: 10px;\n    margin-bottom: 10px; }\n  .navbar-btn.btn-xs, .btn-group-xs > .navbar-btn.btn {\n    margin-top: 14px;\n    margin-bottom: 14px; }\n\n.navbar-text {\n  margin-top: 15px;\n  margin-bottom: 15px; }\n  @media (min-width: 768px) {\n    .navbar-text {\n      float: left;\n      margin-left: 15px;\n      margin-right: 15px; } }\n\n@media (min-width: 768px) {\n  .navbar-left {\n    float: left !important; }\n  .navbar-right {\n    float: right !important;\n    margin-right: -15px; }\n    .navbar-right ~ .navbar-right {\n      margin-right: 0; } }\n\n.navbar-default {\n  background-color: #f8f8f8;\n  border-color: #e7e7e7; }\n  .navbar-default .navbar-brand {\n    color: #777; }\n    .navbar-default .navbar-brand:hover, .navbar-default .navbar-brand:focus {\n      color: #5e5e5e;\n      background-color: transparent; }\n  .navbar-default .navbar-text {\n    color: #777; }\n  .navbar-default .navbar-nav > li > a {\n    color: #777; }\n    .navbar-default .navbar-nav > li > a:hover, .navbar-default .navbar-nav > li > a:focus {\n      color: #333;\n      background-color: transparent; }\n  .navbar-default .navbar-nav > .active > a, .navbar-default .navbar-nav > .active > a:hover, .navbar-default .navbar-nav > .active > a:focus {\n    color: #555;\n    background-color: #e7e7e7; }\n  .navbar-default .navbar-nav > .disabled > a, .navbar-default .navbar-nav > .disabled > a:hover, .navbar-default .navbar-nav > .disabled > a:focus {\n    color: #ccc;\n    background-color: transparent; }\n  .navbar-default .navbar-toggle {\n    border-color: #ddd; }\n    .navbar-default .navbar-toggle:hover, .navbar-default .navbar-toggle:focus {\n      background-color: #ddd; }\n    .navbar-default .navbar-toggle .icon-bar {\n      background-color: #888; }\n  .navbar-default .navbar-collapse,\n  .navbar-default .navbar-form {\n    border-color: #e7e7e7; }\n  .navbar-default .navbar-nav > .open > a, .navbar-default .navbar-nav > .open > a:hover, .navbar-default .navbar-nav > .open > a:focus {\n    background-color: #e7e7e7;\n    color: #555; }\n  @media (max-width: 767px) {\n    .navbar-default .navbar-nav .open .dropdown-menu > li > a {\n      color: #777; }\n      .navbar-default .navbar-nav .open .dropdown-menu > li > a:hover, .navbar-default .navbar-nav .open .dropdown-menu > li > a:focus {\n        color: #333;\n        background-color: transparent; }\n    .navbar-default .navbar-nav .open .dropdown-menu > .active > a, .navbar-default .navbar-nav .open .dropdown-menu > .active > a:hover, .navbar-default .navbar-nav .open .dropdown-menu > .active > a:focus {\n      color: #555;\n      background-color: #e7e7e7; }\n    .navbar-default .navbar-nav .open .dropdown-menu > .disabled > a, .navbar-default .navbar-nav .open .dropdown-menu > .disabled > a:hover, .navbar-default .navbar-nav .open .dropdown-menu > .disabled > a:focus {\n      color: #ccc;\n      background-color: transparent; } }\n  .navbar-default .navbar-link {\n    color: #777; }\n    .navbar-default .navbar-link:hover {\n      color: #333; }\n  .navbar-default .btn-link {\n    color: #777; }\n    .navbar-default .btn-link:hover, .navbar-default .btn-link:focus {\n      color: #333; }\n    .navbar-default .btn-link[disabled]:hover, .navbar-default .btn-link[disabled]:focus,\n    fieldset[disabled] .navbar-default .btn-link:hover,\n    fieldset[disabled] .navbar-default .btn-link:focus {\n      color: #ccc; }\n\n.navbar-inverse {\n  background-color: #222;\n  border-color: #090909; }\n  .navbar-inverse .navbar-brand {\n    color: #9d9d9d; }\n    .navbar-inverse .navbar-brand:hover, .navbar-inverse .navbar-brand:focus {\n      color: #fff;\n      background-color: transparent; }\n  .navbar-inverse .navbar-text {\n    color: #9d9d9d; }\n  .navbar-inverse .navbar-nav > li > a {\n    color: #9d9d9d; }\n    .navbar-inverse .navbar-nav > li > a:hover, .navbar-inverse .navbar-nav > li > a:focus {\n      color: #fff;\n      background-color: transparent; }\n  .navbar-inverse .navbar-nav > .active > a, .navbar-inverse .navbar-nav > .active > a:hover, .navbar-inverse .navbar-nav > .active > a:focus {\n    color: #fff;\n    background-color: #090909; }\n  .navbar-inverse .navbar-nav > .disabled > a, .navbar-inverse .navbar-nav > .disabled > a:hover, .navbar-inverse .navbar-nav > .disabled > a:focus {\n    color: #444;\n    background-color: transparent; }\n  .navbar-inverse .navbar-toggle {\n    border-color: #333; }\n    .navbar-inverse .navbar-toggle:hover, .navbar-inverse .navbar-toggle:focus {\n      background-color: #333; }\n    .navbar-inverse .navbar-toggle .icon-bar {\n      background-color: #fff; }\n  .navbar-inverse .navbar-collapse,\n  .navbar-inverse .navbar-form {\n    border-color: #101010; }\n  .navbar-inverse .navbar-nav > .open > a, .navbar-inverse .navbar-nav > .open > a:hover, .navbar-inverse .navbar-nav > .open > a:focus {\n    background-color: #090909;\n    color: #fff; }\n  @media (max-width: 767px) {\n    .navbar-inverse .navbar-nav .open .dropdown-menu > .dropdown-header {\n      border-color: #090909; }\n    .navbar-inverse .navbar-nav .open .dropdown-menu .divider {\n      background-color: #090909; }\n    .navbar-inverse .navbar-nav .open .dropdown-menu > li > a {\n      color: #9d9d9d; }\n      .navbar-inverse .navbar-nav .open .dropdown-menu > li > a:hover, .navbar-inverse .navbar-nav .open .dropdown-menu > li > a:focus {\n        color: #fff;\n        background-color: transparent; }\n    .navbar-inverse .navbar-nav .open .dropdown-menu > .active > a, .navbar-inverse .navbar-nav .open .dropdown-menu > .active > a:hover, .navbar-inverse .navbar-nav .open .dropdown-menu > .active > a:focus {\n      color: #fff;\n      background-color: #090909; }\n    .navbar-inverse .navbar-nav .open .dropdown-menu > .disabled > a, .navbar-inverse .navbar-nav .open .dropdown-menu > .disabled > a:hover, .navbar-inverse .navbar-nav .open .dropdown-menu > .disabled > a:focus {\n      color: #444;\n      background-color: transparent; } }\n  .navbar-inverse .navbar-link {\n    color: #9d9d9d; }\n    .navbar-inverse .navbar-link:hover {\n      color: #fff; }\n  .navbar-inverse .btn-link {\n    color: #9d9d9d; }\n    .navbar-inverse .btn-link:hover, .navbar-inverse .btn-link:focus {\n      color: #fff; }\n    .navbar-inverse .btn-link[disabled]:hover, .navbar-inverse .btn-link[disabled]:focus,\n    fieldset[disabled] .navbar-inverse .btn-link:hover,\n    fieldset[disabled] .navbar-inverse .btn-link:focus {\n      color: #444; }\n\n.breadcrumb {\n  padding: 8px 15px;\n  margin-bottom: 20px;\n  list-style: none;\n  background-color: #f5f5f5;\n  border-radius: 4px; }\n  .breadcrumb > li {\n    display: inline-block; }\n    .breadcrumb > li + li:before {\n      content: \"/\\A0\";\n      padding: 0 5px;\n      color: #ccc; }\n  .breadcrumb > .active {\n    color: #777777; }\n\n.pagination {\n  display: inline-block;\n  padding-left: 0;\n  margin: 20px 0;\n  border-radius: 4px; }\n  .pagination > li {\n    display: inline; }\n    .pagination > li > a,\n    .pagination > li > span {\n      position: relative;\n      float: left;\n      padding: 6px 12px;\n      line-height: 1.42857;\n      text-decoration: none;\n      color: #2b2b2b;\n      background-color: #fff;\n      border: 1px solid #ddd;\n      margin-left: -1px; }\n    .pagination > li:first-child > a,\n    .pagination > li:first-child > span {\n      margin-left: 0;\n      border-bottom-left-radius: 4px;\n      border-top-left-radius: 4px; }\n    .pagination > li:last-child > a,\n    .pagination > li:last-child > span {\n      border-bottom-right-radius: 4px;\n      border-top-right-radius: 4px; }\n  .pagination > li > a:hover, .pagination > li > a:focus,\n  .pagination > li > span:hover,\n  .pagination > li > span:focus {\n    z-index: 2;\n    color: #21be88;\n    background-color: #eeeeee;\n    border-color: #ddd; }\n  .pagination > .active > a, .pagination > .active > a:hover, .pagination > .active > a:focus,\n  .pagination > .active > span,\n  .pagination > .active > span:hover,\n  .pagination > .active > span:focus {\n    z-index: 3;\n    color: #fff;\n    background-color: #21be88;\n    border-color: #21be88;\n    cursor: default; }\n  .pagination > .disabled > span,\n  .pagination > .disabled > span:hover,\n  .pagination > .disabled > span:focus,\n  .pagination > .disabled > a,\n  .pagination > .disabled > a:hover,\n  .pagination > .disabled > a:focus {\n    color: #777777;\n    background-color: #fff;\n    border-color: #ddd;\n    cursor: not-allowed; }\n\n.pagination-lg > li > a,\n.pagination-lg > li > span {\n  padding: 10px 16px;\n  font-size: 18px;\n  line-height: 1.33333; }\n\n.pagination-lg > li:first-child > a,\n.pagination-lg > li:first-child > span {\n  border-bottom-left-radius: 6px;\n  border-top-left-radius: 6px; }\n\n.pagination-lg > li:last-child > a,\n.pagination-lg > li:last-child > span {\n  border-bottom-right-radius: 6px;\n  border-top-right-radius: 6px; }\n\n.pagination-sm > li > a,\n.pagination-sm > li > span {\n  padding: 5px 10px;\n  font-size: 12px;\n  line-height: 1.5; }\n\n.pagination-sm > li:first-child > a,\n.pagination-sm > li:first-child > span {\n  border-bottom-left-radius: 3px;\n  border-top-left-radius: 3px; }\n\n.pagination-sm > li:last-child > a,\n.pagination-sm > li:last-child > span {\n  border-bottom-right-radius: 3px;\n  border-top-right-radius: 3px; }\n\n.pager {\n  padding-left: 0;\n  margin: 20px 0;\n  list-style: none;\n  text-align: center; }\n  .pager:before, .pager:after {\n    content: \" \";\n    display: table; }\n  .pager:after {\n    clear: both; }\n  .pager li {\n    display: inline; }\n    .pager li > a,\n    .pager li > span {\n      display: inline-block;\n      padding: 5px 14px;\n      background-color: #fff;\n      border: 1px solid #ddd;\n      border-radius: 15px; }\n    .pager li > a:hover,\n    .pager li > a:focus {\n      text-decoration: none;\n      background-color: #eeeeee; }\n  .pager .next > a,\n  .pager .next > span {\n    float: right; }\n  .pager .previous > a,\n  .pager .previous > span {\n    float: left; }\n  .pager .disabled > a,\n  .pager .disabled > a:hover,\n  .pager .disabled > a:focus,\n  .pager .disabled > span {\n    color: #777777;\n    background-color: #fff;\n    cursor: not-allowed; }\n\n.label {\n  display: inline;\n  padding: .2em .6em .3em;\n  font-size: 75%;\n  font-weight: bold;\n  line-height: 1;\n  color: #fff;\n  text-align: center;\n  white-space: nowrap;\n  vertical-align: baseline;\n  border-radius: .25em; }\n  .label:empty {\n    display: none; }\n  .btn .label {\n    position: relative;\n    top: -1px; }\n\na.label:hover, a.label:focus {\n  color: #fff;\n  text-decoration: none;\n  cursor: pointer; }\n\n.label-default {\n  background-color: #777777; }\n  .label-default[href]:hover, .label-default[href]:focus {\n    background-color: #5e5e5e; }\n\n.label-primary {\n  background-color: #21be88; }\n  .label-primary[href]:hover, .label-primary[href]:focus {\n    background-color: #199369; }\n\n.label-success {\n  background-color: #0957c3; }\n  .label-success[href]:hover, .label-success[href]:focus {\n    background-color: #074192; }\n\n.label-info {\n  background-color: #5bc0de; }\n  .label-info[href]:hover, .label-info[href]:focus {\n    background-color: #31b0d5; }\n\n.label-warning {\n  background-color: #f0ad4e; }\n  .label-warning[href]:hover, .label-warning[href]:focus {\n    background-color: #ec971f; }\n\n.label-danger {\n  background-color: #d9534f; }\n  .label-danger[href]:hover, .label-danger[href]:focus {\n    background-color: #c9302c; }\n\n.badge {\n  display: inline-block;\n  min-width: 10px;\n  padding: 3px 7px;\n  font-size: 12px;\n  font-weight: bold;\n  color: #fff;\n  line-height: 1;\n  vertical-align: middle;\n  white-space: nowrap;\n  text-align: center;\n  background-color: #777777;\n  border-radius: 10px; }\n  .badge:empty {\n    display: none; }\n  .btn .badge {\n    position: relative;\n    top: -1px; }\n  .btn-xs .badge, .btn-group-xs > .btn .badge,\n  .btn-group-xs > .btn .badge {\n    top: 0;\n    padding: 1px 5px; }\n  .list-group-item.active > .badge,\n  .nav-pills > .active > a > .badge {\n    color: #2b2b2b;\n    background-color: #fff; }\n  .list-group-item > .badge {\n    float: right; }\n  .list-group-item > .badge + .badge {\n    margin-right: 5px; }\n  .nav-pills > li > a > .badge {\n    margin-left: 3px; }\n\na.badge:hover, a.badge:focus {\n  color: #fff;\n  text-decoration: none;\n  cursor: pointer; }\n\n.jumbotron {\n  padding-top: 30px;\n  padding-bottom: 30px;\n  margin-bottom: 30px;\n  color: inherit;\n  background-color: #eeeeee; }\n  .jumbotron h1,\n  .jumbotron .h1 {\n    color: inherit; }\n  .jumbotron p {\n    margin-bottom: 15px;\n    font-size: 21px;\n    font-weight: 200; }\n  .jumbotron > hr {\n    border-top-color: #d5d5d5; }\n  .container .jumbotron,\n  .container-fluid .jumbotron {\n    border-radius: 6px;\n    padding-left: 15px;\n    padding-right: 15px; }\n  .jumbotron .container {\n    max-width: 100%; }\n  @media screen and (min-width: 768px) {\n    .jumbotron {\n      padding-top: 48px;\n      padding-bottom: 48px; }\n      .container .jumbotron,\n      .container-fluid .jumbotron {\n        padding-left: 60px;\n        padding-right: 60px; }\n      .jumbotron h1,\n      .jumbotron .h1 {\n        font-size: 63px; } }\n\n.thumbnail {\n  display: block;\n  padding: 4px;\n  margin-bottom: 20px;\n  line-height: 1.42857;\n  background-color: #fff;\n  border: 1px solid #ddd;\n  border-radius: 4px;\n  -webkit-transition: border 0.2s ease-in-out;\n  -o-transition: border 0.2s ease-in-out;\n  transition: border 0.2s ease-in-out; }\n  .thumbnail > img,\n  .thumbnail a > img {\n    display: block;\n    max-width: 100%;\n    height: auto;\n    margin-left: auto;\n    margin-right: auto; }\n  .thumbnail .caption {\n    padding: 9px;\n    color: #2b2b2b; }\n\na.thumbnail:hover,\na.thumbnail:focus,\na.thumbnail.active {\n  border-color: #2b2b2b; }\n\n.alert {\n  padding: 15px;\n  margin-bottom: 20px;\n  border: 1px solid transparent;\n  border-radius: 4px; }\n  .alert h4 {\n    margin-top: 0;\n    color: inherit; }\n  .alert .alert-link {\n    font-weight: bold; }\n  .alert > p,\n  .alert > ul {\n    margin-bottom: 0; }\n  .alert > p + p {\n    margin-top: 5px; }\n\n.alert-dismissable,\n.alert-dismissible {\n  padding-right: 35px; }\n  .alert-dismissable .close,\n  .alert-dismissible .close {\n    position: relative;\n    top: -2px;\n    right: -21px;\n    color: inherit; }\n\n.alert-success {\n  background-color: #dff0d8;\n  border-color: #d6e9c6;\n  color: #3c763d; }\n  .alert-success hr {\n    border-top-color: #c9e2b3; }\n  .alert-success .alert-link {\n    color: #2b542c; }\n\n.alert-info {\n  background-color: #d9edf7;\n  border-color: #bce8f1;\n  color: #31708f; }\n  .alert-info hr {\n    border-top-color: #a6e1ec; }\n  .alert-info .alert-link {\n    color: #245269; }\n\n.alert-warning {\n  background-color: #fcf8e3;\n  border-color: #faebcc;\n  color: #8a6d3b; }\n  .alert-warning hr {\n    border-top-color: #f7e1b5; }\n  .alert-warning .alert-link {\n    color: #66512c; }\n\n.alert-danger {\n  background-color: #f2dede;\n  border-color: #ebccd1;\n  color: #a94442; }\n  .alert-danger hr {\n    border-top-color: #e4b9c0; }\n  .alert-danger .alert-link {\n    color: #843534; }\n\n@-webkit-keyframes progress-bar-stripes {\n  from {\n    background-position: 40px 0; }\n  to {\n    background-position: 0 0; } }\n\n@keyframes progress-bar-stripes {\n  from {\n    background-position: 40px 0; }\n  to {\n    background-position: 0 0; } }\n\n.progress {\n  overflow: hidden;\n  height: 20px;\n  margin-bottom: 20px;\n  background-color: #f5f5f5;\n  border-radius: 4px;\n  -webkit-box-shadow: inset 0 1px 2px rgba(0, 0, 0, 0.1);\n  box-shadow: inset 0 1px 2px rgba(0, 0, 0, 0.1); }\n\n.progress-bar {\n  float: left;\n  width: 0%;\n  height: 100%;\n  font-size: 12px;\n  line-height: 20px;\n  color: #fff;\n  text-align: center;\n  background-color: #21be88;\n  -webkit-box-shadow: inset 0 -1px 0 rgba(0, 0, 0, 0.15);\n  box-shadow: inset 0 -1px 0 rgba(0, 0, 0, 0.15);\n  -webkit-transition: width 0.6s ease;\n  -o-transition: width 0.6s ease;\n  transition: width 0.6s ease; }\n\n.progress-striped .progress-bar,\n.progress-bar-striped {\n  background-image: -webkit-linear-gradient(45deg, rgba(255, 255, 255, 0.15) 25%, transparent 25%, transparent 50%, rgba(255, 255, 255, 0.15) 50%, rgba(255, 255, 255, 0.15) 75%, transparent 75%, transparent);\n  background-image: -o-linear-gradient(45deg, rgba(255, 255, 255, 0.15) 25%, transparent 25%, transparent 50%, rgba(255, 255, 255, 0.15) 50%, rgba(255, 255, 255, 0.15) 75%, transparent 75%, transparent);\n  background-image: linear-gradient(45deg, rgba(255, 255, 255, 0.15) 25%, transparent 25%, transparent 50%, rgba(255, 255, 255, 0.15) 50%, rgba(255, 255, 255, 0.15) 75%, transparent 75%, transparent);\n  background-size: 40px 40px; }\n\n.progress.active .progress-bar,\n.progress-bar.active {\n  -webkit-animation: progress-bar-stripes 2s linear infinite;\n  -o-animation: progress-bar-stripes 2s linear infinite;\n  animation: progress-bar-stripes 2s linear infinite; }\n\n.progress-bar-success {\n  background-color: #0957c3; }\n  .progress-striped .progress-bar-success {\n    background-image: -webkit-linear-gradient(45deg, rgba(255, 255, 255, 0.15) 25%, transparent 25%, transparent 50%, rgba(255, 255, 255, 0.15) 50%, rgba(255, 255, 255, 0.15) 75%, transparent 75%, transparent);\n    background-image: -o-linear-gradient(45deg, rgba(255, 255, 255, 0.15) 25%, transparent 25%, transparent 50%, rgba(255, 255, 255, 0.15) 50%, rgba(255, 255, 255, 0.15) 75%, transparent 75%, transparent);\n    background-image: linear-gradient(45deg, rgba(255, 255, 255, 0.15) 25%, transparent 25%, transparent 50%, rgba(255, 255, 255, 0.15) 50%, rgba(255, 255, 255, 0.15) 75%, transparent 75%, transparent); }\n\n.progress-bar-info {\n  background-color: #5bc0de; }\n  .progress-striped .progress-bar-info {\n    background-image: -webkit-linear-gradient(45deg, rgba(255, 255, 255, 0.15) 25%, transparent 25%, transparent 50%, rgba(255, 255, 255, 0.15) 50%, rgba(255, 255, 255, 0.15) 75%, transparent 75%, transparent);\n    background-image: -o-linear-gradient(45deg, rgba(255, 255, 255, 0.15) 25%, transparent 25%, transparent 50%, rgba(255, 255, 255, 0.15) 50%, rgba(255, 255, 255, 0.15) 75%, transparent 75%, transparent);\n    background-image: linear-gradient(45deg, rgba(255, 255, 255, 0.15) 25%, transparent 25%, transparent 50%, rgba(255, 255, 255, 0.15) 50%, rgba(255, 255, 255, 0.15) 75%, transparent 75%, transparent); }\n\n.progress-bar-warning {\n  background-color: #f0ad4e; }\n  .progress-striped .progress-bar-warning {\n    background-image: -webkit-linear-gradient(45deg, rgba(255, 255, 255, 0.15) 25%, transparent 25%, transparent 50%, rgba(255, 255, 255, 0.15) 50%, rgba(255, 255, 255, 0.15) 75%, transparent 75%, transparent);\n    background-image: -o-linear-gradient(45deg, rgba(255, 255, 255, 0.15) 25%, transparent 25%, transparent 50%, rgba(255, 255, 255, 0.15) 50%, rgba(255, 255, 255, 0.15) 75%, transparent 75%, transparent);\n    background-image: linear-gradient(45deg, rgba(255, 255, 255, 0.15) 25%, transparent 25%, transparent 50%, rgba(255, 255, 255, 0.15) 50%, rgba(255, 255, 255, 0.15) 75%, transparent 75%, transparent); }\n\n.progress-bar-danger {\n  background-color: #d9534f; }\n  .progress-striped .progress-bar-danger {\n    background-image: -webkit-linear-gradient(45deg, rgba(255, 255, 255, 0.15) 25%, transparent 25%, transparent 50%, rgba(255, 255, 255, 0.15) 50%, rgba(255, 255, 255, 0.15) 75%, transparent 75%, transparent);\n    background-image: -o-linear-gradient(45deg, rgba(255, 255, 255, 0.15) 25%, transparent 25%, transparent 50%, rgba(255, 255, 255, 0.15) 50%, rgba(255, 255, 255, 0.15) 75%, transparent 75%, transparent);\n    background-image: linear-gradient(45deg, rgba(255, 255, 255, 0.15) 25%, transparent 25%, transparent 50%, rgba(255, 255, 255, 0.15) 50%, rgba(255, 255, 255, 0.15) 75%, transparent 75%, transparent); }\n\n.media {\n  margin-top: 15px; }\n  .media:first-child {\n    margin-top: 0; }\n\n.media,\n.media-body {\n  zoom: 1;\n  overflow: hidden; }\n\n.media-body {\n  width: 10000px; }\n\n.media-object {\n  display: block; }\n  .media-object.img-thumbnail {\n    max-width: none; }\n\n.media-right,\n.media > .pull-right {\n  padding-left: 10px; }\n\n.media-left,\n.media > .pull-left {\n  padding-right: 10px; }\n\n.media-left,\n.media-right,\n.media-body {\n  display: table-cell;\n  vertical-align: top; }\n\n.media-middle {\n  vertical-align: middle; }\n\n.media-bottom {\n  vertical-align: bottom; }\n\n.media-heading {\n  margin-top: 0;\n  margin-bottom: 5px; }\n\n.media-list {\n  padding-left: 0;\n  list-style: none; }\n\n.list-group {\n  margin-bottom: 20px;\n  padding-left: 0; }\n\n.list-group-item {\n  position: relative;\n  display: block;\n  padding: 10px 15px;\n  margin-bottom: -1px;\n  background-color: #fff;\n  border: 1px solid #ddd; }\n  .list-group-item:first-child {\n    border-top-right-radius: 4px;\n    border-top-left-radius: 4px; }\n  .list-group-item:last-child {\n    margin-bottom: 0;\n    border-bottom-right-radius: 4px;\n    border-bottom-left-radius: 4px; }\n\na.list-group-item,\nbutton.list-group-item {\n  color: #555; }\n  a.list-group-item .list-group-item-heading,\n  button.list-group-item .list-group-item-heading {\n    color: #333; }\n  a.list-group-item:hover, a.list-group-item:focus,\n  button.list-group-item:hover,\n  button.list-group-item:focus {\n    text-decoration: none;\n    color: #555;\n    background-color: #f5f5f5; }\n\nbutton.list-group-item {\n  width: 100%;\n  text-align: left; }\n\n.list-group-item.disabled, .list-group-item.disabled:hover, .list-group-item.disabled:focus {\n  background-color: #eeeeee;\n  color: #777777;\n  cursor: not-allowed; }\n  .list-group-item.disabled .list-group-item-heading, .list-group-item.disabled:hover .list-group-item-heading, .list-group-item.disabled:focus .list-group-item-heading {\n    color: inherit; }\n  .list-group-item.disabled .list-group-item-text, .list-group-item.disabled:hover .list-group-item-text, .list-group-item.disabled:focus .list-group-item-text {\n    color: #777777; }\n\n.list-group-item.active, .list-group-item.active:hover, .list-group-item.active:focus {\n  z-index: 2;\n  color: #fff;\n  background-color: #21be88;\n  border-color: #21be88; }\n  .list-group-item.active .list-group-item-heading,\n  .list-group-item.active .list-group-item-heading > small,\n  .list-group-item.active .list-group-item-heading > .small, .list-group-item.active:hover .list-group-item-heading,\n  .list-group-item.active:hover .list-group-item-heading > small,\n  .list-group-item.active:hover .list-group-item-heading > .small, .list-group-item.active:focus .list-group-item-heading,\n  .list-group-item.active:focus .list-group-item-heading > small,\n  .list-group-item.active:focus .list-group-item-heading > .small {\n    color: inherit; }\n  .list-group-item.active .list-group-item-text, .list-group-item.active:hover .list-group-item-text, .list-group-item.active:focus .list-group-item-text {\n    color: #b8f3df; }\n\n.list-group-item-success {\n  color: #3c763d;\n  background-color: #dff0d8; }\n\na.list-group-item-success,\nbutton.list-group-item-success {\n  color: #3c763d; }\n  a.list-group-item-success .list-group-item-heading,\n  button.list-group-item-success .list-group-item-heading {\n    color: inherit; }\n  a.list-group-item-success:hover, a.list-group-item-success:focus,\n  button.list-group-item-success:hover,\n  button.list-group-item-success:focus {\n    color: #3c763d;\n    background-color: #d0e9c6; }\n  a.list-group-item-success.active, a.list-group-item-success.active:hover, a.list-group-item-success.active:focus,\n  button.list-group-item-success.active,\n  button.list-group-item-success.active:hover,\n  button.list-group-item-success.active:focus {\n    color: #fff;\n    background-color: #3c763d;\n    border-color: #3c763d; }\n\n.list-group-item-info {\n  color: #31708f;\n  background-color: #d9edf7; }\n\na.list-group-item-info,\nbutton.list-group-item-info {\n  color: #31708f; }\n  a.list-group-item-info .list-group-item-heading,\n  button.list-group-item-info .list-group-item-heading {\n    color: inherit; }\n  a.list-group-item-info:hover, a.list-group-item-info:focus,\n  button.list-group-item-info:hover,\n  button.list-group-item-info:focus {\n    color: #31708f;\n    background-color: #c4e3f3; }\n  a.list-group-item-info.active, a.list-group-item-info.active:hover, a.list-group-item-info.active:focus,\n  button.list-group-item-info.active,\n  button.list-group-item-info.active:hover,\n  button.list-group-item-info.active:focus {\n    color: #fff;\n    background-color: #31708f;\n    border-color: #31708f; }\n\n.list-group-item-warning {\n  color: #8a6d3b;\n  background-color: #fcf8e3; }\n\na.list-group-item-warning,\nbutton.list-group-item-warning {\n  color: #8a6d3b; }\n  a.list-group-item-warning .list-group-item-heading,\n  button.list-group-item-warning .list-group-item-heading {\n    color: inherit; }\n  a.list-group-item-warning:hover, a.list-group-item-warning:focus,\n  button.list-group-item-warning:hover,\n  button.list-group-item-warning:focus {\n    color: #8a6d3b;\n    background-color: #faf2cc; }\n  a.list-group-item-warning.active, a.list-group-item-warning.active:hover, a.list-group-item-warning.active:focus,\n  button.list-group-item-warning.active,\n  button.list-group-item-warning.active:hover,\n  button.list-group-item-warning.active:focus {\n    color: #fff;\n    background-color: #8a6d3b;\n    border-color: #8a6d3b; }\n\n.list-group-item-danger {\n  color: #a94442;\n  background-color: #f2dede; }\n\na.list-group-item-danger,\nbutton.list-group-item-danger {\n  color: #a94442; }\n  a.list-group-item-danger .list-group-item-heading,\n  button.list-group-item-danger .list-group-item-heading {\n    color: inherit; }\n  a.list-group-item-danger:hover, a.list-group-item-danger:focus,\n  button.list-group-item-danger:hover,\n  button.list-group-item-danger:focus {\n    color: #a94442;\n    background-color: #ebcccc; }\n  a.list-group-item-danger.active, a.list-group-item-danger.active:hover, a.list-group-item-danger.active:focus,\n  button.list-group-item-danger.active,\n  button.list-group-item-danger.active:hover,\n  button.list-group-item-danger.active:focus {\n    color: #fff;\n    background-color: #a94442;\n    border-color: #a94442; }\n\n.list-group-item-heading {\n  margin-top: 0;\n  margin-bottom: 5px; }\n\n.list-group-item-text {\n  margin-bottom: 0;\n  line-height: 1.3; }\n\n.panel {\n  margin-bottom: 20px;\n  background-color: #fff;\n  border: 1px solid transparent;\n  border-radius: 4px;\n  -webkit-box-shadow: 0 1px 1px rgba(0, 0, 0, 0.05);\n  box-shadow: 0 1px 1px rgba(0, 0, 0, 0.05); }\n\n.panel-body {\n  padding: 15px; }\n  .panel-body:before, .panel-body:after {\n    content: \" \";\n    display: table; }\n  .panel-body:after {\n    clear: both; }\n\n.panel-heading {\n  padding: 10px 15px;\n  border-bottom: 1px solid transparent;\n  border-top-right-radius: 3px;\n  border-top-left-radius: 3px; }\n  .panel-heading > .dropdown .dropdown-toggle {\n    color: inherit; }\n\n.panel-title {\n  margin-top: 0;\n  margin-bottom: 0;\n  font-size: 16px;\n  color: inherit; }\n  .panel-title > a,\n  .panel-title > small,\n  .panel-title > .small,\n  .panel-title > small > a,\n  .panel-title > .small > a {\n    color: inherit; }\n\n.panel-footer {\n  padding: 10px 15px;\n  background-color: #f5f5f5;\n  border-top: 1px solid #ddd;\n  border-bottom-right-radius: 3px;\n  border-bottom-left-radius: 3px; }\n\n.panel > .list-group,\n.panel > .panel-collapse > .list-group {\n  margin-bottom: 0; }\n  .panel > .list-group .list-group-item,\n  .panel > .panel-collapse > .list-group .list-group-item {\n    border-width: 1px 0;\n    border-radius: 0; }\n  .panel > .list-group:first-child .list-group-item:first-child,\n  .panel > .panel-collapse > .list-group:first-child .list-group-item:first-child {\n    border-top: 0;\n    border-top-right-radius: 3px;\n    border-top-left-radius: 3px; }\n  .panel > .list-group:last-child .list-group-item:last-child,\n  .panel > .panel-collapse > .list-group:last-child .list-group-item:last-child {\n    border-bottom: 0;\n    border-bottom-right-radius: 3px;\n    border-bottom-left-radius: 3px; }\n\n.panel > .panel-heading + .panel-collapse > .list-group .list-group-item:first-child {\n  border-top-right-radius: 0;\n  border-top-left-radius: 0; }\n\n.panel-heading + .list-group .list-group-item:first-child {\n  border-top-width: 0; }\n\n.list-group + .panel-footer {\n  border-top-width: 0; }\n\n.panel > .table,\n.panel > .table-responsive > .table,\n.panel > .panel-collapse > .table {\n  margin-bottom: 0; }\n  .panel > .table caption,\n  .panel > .table-responsive > .table caption,\n  .panel > .panel-collapse > .table caption {\n    padding-left: 15px;\n    padding-right: 15px; }\n\n.panel > .table:first-child,\n.panel > .table-responsive:first-child > .table:first-child {\n  border-top-right-radius: 3px;\n  border-top-left-radius: 3px; }\n  .panel > .table:first-child > thead:first-child > tr:first-child,\n  .panel > .table:first-child > tbody:first-child > tr:first-child,\n  .panel > .table-responsive:first-child > .table:first-child > thead:first-child > tr:first-child,\n  .panel > .table-responsive:first-child > .table:first-child > tbody:first-child > tr:first-child {\n    border-top-left-radius: 3px;\n    border-top-right-radius: 3px; }\n    .panel > .table:first-child > thead:first-child > tr:first-child td:first-child,\n    .panel > .table:first-child > thead:first-child > tr:first-child th:first-child,\n    .panel > .table:first-child > tbody:first-child > tr:first-child td:first-child,\n    .panel > .table:first-child > tbody:first-child > tr:first-child th:first-child,\n    .panel > .table-responsive:first-child > .table:first-child > thead:first-child > tr:first-child td:first-child,\n    .panel > .table-responsive:first-child > .table:first-child > thead:first-child > tr:first-child th:first-child,\n    .panel > .table-responsive:first-child > .table:first-child > tbody:first-child > tr:first-child td:first-child,\n    .panel > .table-responsive:first-child > .table:first-child > tbody:first-child > tr:first-child th:first-child {\n      border-top-left-radius: 3px; }\n    .panel > .table:first-child > thead:first-child > tr:first-child td:last-child,\n    .panel > .table:first-child > thead:first-child > tr:first-child th:last-child,\n    .panel > .table:first-child > tbody:first-child > tr:first-child td:last-child,\n    .panel > .table:first-child > tbody:first-child > tr:first-child th:last-child,\n    .panel > .table-responsive:first-child > .table:first-child > thead:first-child > tr:first-child td:last-child,\n    .panel > .table-responsive:first-child > .table:first-child > thead:first-child > tr:first-child th:last-child,\n    .panel > .table-responsive:first-child > .table:first-child > tbody:first-child > tr:first-child td:last-child,\n    .panel > .table-responsive:first-child > .table:first-child > tbody:first-child > tr:first-child th:last-child {\n      border-top-right-radius: 3px; }\n\n.panel > .table:last-child,\n.panel > .table-responsive:last-child > .table:last-child {\n  border-bottom-right-radius: 3px;\n  border-bottom-left-radius: 3px; }\n  .panel > .table:last-child > tbody:last-child > tr:last-child,\n  .panel > .table:last-child > tfoot:last-child > tr:last-child,\n  .panel > .table-responsive:last-child > .table:last-child > tbody:last-child > tr:last-child,\n  .panel > .table-responsive:last-child > .table:last-child > tfoot:last-child > tr:last-child {\n    border-bottom-left-radius: 3px;\n    border-bottom-right-radius: 3px; }\n    .panel > .table:last-child > tbody:last-child > tr:last-child td:first-child,\n    .panel > .table:last-child > tbody:last-child > tr:last-child th:first-child,\n    .panel > .table:last-child > tfoot:last-child > tr:last-child td:first-child,\n    .panel > .table:last-child > tfoot:last-child > tr:last-child th:first-child,\n    .panel > .table-responsive:last-child > .table:last-child > tbody:last-child > tr:last-child td:first-child,\n    .panel > .table-responsive:last-child > .table:last-child > tbody:last-child > tr:last-child th:first-child,\n    .panel > .table-responsive:last-child > .table:last-child > tfoot:last-child > tr:last-child td:first-child,\n    .panel > .table-responsive:last-child > .table:last-child > tfoot:last-child > tr:last-child th:first-child {\n      border-bottom-left-radius: 3px; }\n    .panel > .table:last-child > tbody:last-child > tr:last-child td:last-child,\n    .panel > .table:last-child > tbody:last-child > tr:last-child th:last-child,\n    .panel > .table:last-child > tfoot:last-child > tr:last-child td:last-child,\n    .panel > .table:last-child > tfoot:last-child > tr:last-child th:last-child,\n    .panel > .table-responsive:last-child > .table:last-child > tbody:last-child > tr:last-child td:last-child,\n    .panel > .table-responsive:last-child > .table:last-child > tbody:last-child > tr:last-child th:last-child,\n    .panel > .table-responsive:last-child > .table:last-child > tfoot:last-child > tr:last-child td:last-child,\n    .panel > .table-responsive:last-child > .table:last-child > tfoot:last-child > tr:last-child th:last-child {\n      border-bottom-right-radius: 3px; }\n\n.panel > .panel-body + .table,\n.panel > .panel-body + .table-responsive,\n.panel > .table + .panel-body,\n.panel > .table-responsive + .panel-body {\n  border-top: 1px solid #ddd; }\n\n.panel > .table > tbody:first-child > tr:first-child th,\n.panel > .table > tbody:first-child > tr:first-child td {\n  border-top: 0; }\n\n.panel > .table-bordered,\n.panel > .table-responsive > .table-bordered {\n  border: 0; }\n  .panel > .table-bordered > thead > tr > th:first-child,\n  .panel > .table-bordered > thead > tr > td:first-child,\n  .panel > .table-bordered > tbody > tr > th:first-child,\n  .panel > .table-bordered > tbody > tr > td:first-child,\n  .panel > .table-bordered > tfoot > tr > th:first-child,\n  .panel > .table-bordered > tfoot > tr > td:first-child,\n  .panel > .table-responsive > .table-bordered > thead > tr > th:first-child,\n  .panel > .table-responsive > .table-bordered > thead > tr > td:first-child,\n  .panel > .table-responsive > .table-bordered > tbody > tr > th:first-child,\n  .panel > .table-responsive > .table-bordered > tbody > tr > td:first-child,\n  .panel > .table-responsive > .table-bordered > tfoot > tr > th:first-child,\n  .panel > .table-responsive > .table-bordered > tfoot > tr > td:first-child {\n    border-left: 0; }\n  .panel > .table-bordered > thead > tr > th:last-child,\n  .panel > .table-bordered > thead > tr > td:last-child,\n  .panel > .table-bordered > tbody > tr > th:last-child,\n  .panel > .table-bordered > tbody > tr > td:last-child,\n  .panel > .table-bordered > tfoot > tr > th:last-child,\n  .panel > .table-bordered > tfoot > tr > td:last-child,\n  .panel > .table-responsive > .table-bordered > thead > tr > th:last-child,\n  .panel > .table-responsive > .table-bordered > thead > tr > td:last-child,\n  .panel > .table-responsive > .table-bordered > tbody > tr > th:last-child,\n  .panel > .table-responsive > .table-bordered > tbody > tr > td:last-child,\n  .panel > .table-responsive > .table-bordered > tfoot > tr > th:last-child,\n  .panel > .table-responsive > .table-bordered > tfoot > tr > td:last-child {\n    border-right: 0; }\n  .panel > .table-bordered > thead > tr:first-child > td,\n  .panel > .table-bordered > thead > tr:first-child > th,\n  .panel > .table-bordered > tbody > tr:first-child > td,\n  .panel > .table-bordered > tbody > tr:first-child > th,\n  .panel > .table-responsive > .table-bordered > thead > tr:first-child > td,\n  .panel > .table-responsive > .table-bordered > thead > tr:first-child > th,\n  .panel > .table-responsive > .table-bordered > tbody > tr:first-child > td,\n  .panel > .table-responsive > .table-bordered > tbody > tr:first-child > th {\n    border-bottom: 0; }\n  .panel > .table-bordered > tbody > tr:last-child > td,\n  .panel > .table-bordered > tbody > tr:last-child > th,\n  .panel > .table-bordered > tfoot > tr:last-child > td,\n  .panel > .table-bordered > tfoot > tr:last-child > th,\n  .panel > .table-responsive > .table-bordered > tbody > tr:last-child > td,\n  .panel > .table-responsive > .table-bordered > tbody > tr:last-child > th,\n  .panel > .table-responsive > .table-bordered > tfoot > tr:last-child > td,\n  .panel > .table-responsive > .table-bordered > tfoot > tr:last-child > th {\n    border-bottom: 0; }\n\n.panel > .table-responsive {\n  border: 0;\n  margin-bottom: 0; }\n\n.panel-group {\n  margin-bottom: 20px; }\n  .panel-group .panel {\n    margin-bottom: 0;\n    border-radius: 4px; }\n    .panel-group .panel + .panel {\n      margin-top: 5px; }\n  .panel-group .panel-heading {\n    border-bottom: 0; }\n    .panel-group .panel-heading + .panel-collapse > .panel-body,\n    .panel-group .panel-heading + .panel-collapse > .list-group {\n      border-top: 1px solid #ddd; }\n  .panel-group .panel-footer {\n    border-top: 0; }\n    .panel-group .panel-footer + .panel-collapse .panel-body {\n      border-bottom: 1px solid #ddd; }\n\n.panel-default {\n  border-color: #ddd; }\n  .panel-default > .panel-heading {\n    color: #333333;\n    background-color: #f5f5f5;\n    border-color: #ddd; }\n    .panel-default > .panel-heading + .panel-collapse > .panel-body {\n      border-top-color: #ddd; }\n    .panel-default > .panel-heading .badge {\n      color: #f5f5f5;\n      background-color: #333333; }\n  .panel-default > .panel-footer + .panel-collapse > .panel-body {\n    border-bottom-color: #ddd; }\n\n.panel-primary {\n  border-color: #21be88; }\n  .panel-primary > .panel-heading {\n    color: #fff;\n    background-color: #21be88;\n    border-color: #21be88; }\n    .panel-primary > .panel-heading + .panel-collapse > .panel-body {\n      border-top-color: #21be88; }\n    .panel-primary > .panel-heading .badge {\n      color: #21be88;\n      background-color: #fff; }\n  .panel-primary > .panel-footer + .panel-collapse > .panel-body {\n    border-bottom-color: #21be88; }\n\n.panel-success {\n  border-color: #d6e9c6; }\n  .panel-success > .panel-heading {\n    color: #3c763d;\n    background-color: #dff0d8;\n    border-color: #d6e9c6; }\n    .panel-success > .panel-heading + .panel-collapse > .panel-body {\n      border-top-color: #d6e9c6; }\n    .panel-success > .panel-heading .badge {\n      color: #dff0d8;\n      background-color: #3c763d; }\n  .panel-success > .panel-footer + .panel-collapse > .panel-body {\n    border-bottom-color: #d6e9c6; }\n\n.panel-info {\n  border-color: #bce8f1; }\n  .panel-info > .panel-heading {\n    color: #31708f;\n    background-color: #d9edf7;\n    border-color: #bce8f1; }\n    .panel-info > .panel-heading + .panel-collapse > .panel-body {\n      border-top-color: #bce8f1; }\n    .panel-info > .panel-heading .badge {\n      color: #d9edf7;\n      background-color: #31708f; }\n  .panel-info > .panel-footer + .panel-collapse > .panel-body {\n    border-bottom-color: #bce8f1; }\n\n.panel-warning {\n  border-color: #faebcc; }\n  .panel-warning > .panel-heading {\n    color: #8a6d3b;\n    background-color: #fcf8e3;\n    border-color: #faebcc; }\n    .panel-warning > .panel-heading + .panel-collapse > .panel-body {\n      border-top-color: #faebcc; }\n    .panel-warning > .panel-heading .badge {\n      color: #fcf8e3;\n      background-color: #8a6d3b; }\n  .panel-warning > .panel-footer + .panel-collapse > .panel-body {\n    border-bottom-color: #faebcc; }\n\n.panel-danger {\n  border-color: #ebccd1; }\n  .panel-danger > .panel-heading {\n    color: #a94442;\n    background-color: #f2dede;\n    border-color: #ebccd1; }\n    .panel-danger > .panel-heading + .panel-collapse > .panel-body {\n      border-top-color: #ebccd1; }\n    .panel-danger > .panel-heading .badge {\n      color: #f2dede;\n      background-color: #a94442; }\n  .panel-danger > .panel-footer + .panel-collapse > .panel-body {\n    border-bottom-color: #ebccd1; }\n\n.embed-responsive {\n  position: relative;\n  display: block;\n  height: 0;\n  padding: 0;\n  overflow: hidden; }\n  .embed-responsive .embed-responsive-item,\n  .embed-responsive iframe,\n  .embed-responsive embed,\n  .embed-responsive object,\n  .embed-responsive video {\n    position: absolute;\n    top: 0;\n    left: 0;\n    bottom: 0;\n    height: 100%;\n    width: 100%;\n    border: 0; }\n\n.embed-responsive-16by9 {\n  padding-bottom: 56.25%; }\n\n.embed-responsive-4by3 {\n  padding-bottom: 75%; }\n\n.well {\n  min-height: 20px;\n  padding: 19px;\n  margin-bottom: 20px;\n  background-color: #f5f5f5;\n  border: 1px solid #e3e3e3;\n  border-radius: 4px;\n  -webkit-box-shadow: inset 0 1px 1px rgba(0, 0, 0, 0.05);\n  box-shadow: inset 0 1px 1px rgba(0, 0, 0, 0.05); }\n  .well blockquote {\n    border-color: #ddd;\n    border-color: rgba(0, 0, 0, 0.15); }\n\n.well-lg {\n  padding: 24px;\n  border-radius: 6px; }\n\n.well-sm {\n  padding: 9px;\n  border-radius: 3px; }\n\n.close {\n  float: right;\n  font-size: 21px;\n  font-weight: bold;\n  line-height: 1;\n  color: #000;\n  text-shadow: 0 1px 0 #fff;\n  opacity: 0.2;\n  filter: alpha(opacity=20); }\n  .close:hover, .close:focus {\n    color: #000;\n    text-decoration: none;\n    cursor: pointer;\n    opacity: 0.5;\n    filter: alpha(opacity=50); }\n\nbutton.close {\n  padding: 0;\n  cursor: pointer;\n  background: transparent;\n  border: 0;\n  -webkit-appearance: none; }\n\n.modal-open {\n  overflow: hidden; }\n\n.modal {\n  display: none;\n  overflow: hidden;\n  position: fixed;\n  top: 0;\n  right: 0;\n  bottom: 0;\n  left: 0;\n  z-index: 1050;\n  -webkit-overflow-scrolling: touch;\n  outline: 0; }\n  .modal.fade .modal-dialog {\n    -webkit-transform: translate(0, -25%);\n    -ms-transform: translate(0, -25%);\n    -o-transform: translate(0, -25%);\n    transform: translate(0, -25%);\n    -webkit-transition: -webkit-transform 0.3s ease-out;\n    -moz-transition: -moz-transform 0.3s ease-out;\n    -o-transition: -o-transform 0.3s ease-out;\n    transition: transform 0.3s ease-out; }\n  .modal.in .modal-dialog {\n    -webkit-transform: translate(0, 0);\n    -ms-transform: translate(0, 0);\n    -o-transform: translate(0, 0);\n    transform: translate(0, 0); }\n\n.modal-open .modal {\n  overflow-x: hidden;\n  overflow-y: auto; }\n\n.modal-dialog {\n  position: relative;\n  width: auto;\n  margin: 10px; }\n\n.modal-content {\n  position: relative;\n  background-color: #fff;\n  border: 1px solid #999;\n  border: 1px solid rgba(0, 0, 0, 0.2);\n  border-radius: 6px;\n  -webkit-box-shadow: 0 3px 9px rgba(0, 0, 0, 0.5);\n  box-shadow: 0 3px 9px rgba(0, 0, 0, 0.5);\n  background-clip: padding-box;\n  outline: 0; }\n\n.modal-backdrop {\n  position: fixed;\n  top: 0;\n  right: 0;\n  bottom: 0;\n  left: 0;\n  z-index: 1040;\n  background-color: #000; }\n  .modal-backdrop.fade {\n    opacity: 0;\n    filter: alpha(opacity=0); }\n  .modal-backdrop.in {\n    opacity: 0.5;\n    filter: alpha(opacity=50); }\n\n.modal-header {\n  padding: 15px;\n  border-bottom: 1px solid #e5e5e5; }\n  .modal-header:before, .modal-header:after {\n    content: \" \";\n    display: table; }\n  .modal-header:after {\n    clear: both; }\n\n.modal-header .close {\n  margin-top: -2px; }\n\n.modal-title {\n  margin: 0;\n  line-height: 1.42857; }\n\n.modal-body {\n  position: relative;\n  padding: 15px; }\n\n.modal-footer {\n  padding: 15px;\n  text-align: right;\n  border-top: 1px solid #e5e5e5; }\n  .modal-footer:before, .modal-footer:after {\n    content: \" \";\n    display: table; }\n  .modal-footer:after {\n    clear: both; }\n  .modal-footer .btn + .btn {\n    margin-left: 5px;\n    margin-bottom: 0; }\n  .modal-footer .btn-group .btn + .btn {\n    margin-left: -1px; }\n  .modal-footer .btn-block + .btn-block {\n    margin-left: 0; }\n\n.modal-scrollbar-measure {\n  position: absolute;\n  top: -9999px;\n  width: 50px;\n  height: 50px;\n  overflow: scroll; }\n\n@media (min-width: 768px) {\n  .modal-dialog {\n    width: 600px;\n    margin: 30px auto; }\n  .modal-content {\n    -webkit-box-shadow: 0 5px 15px rgba(0, 0, 0, 0.5);\n    box-shadow: 0 5px 15px rgba(0, 0, 0, 0.5); }\n  .modal-sm {\n    width: 300px; } }\n\n@media (min-width: 992px) {\n  .modal-lg {\n    width: 900px; } }\n\n.tooltip {\n  position: absolute;\n  z-index: 1070;\n  display: block;\n  font-family: \"Helvetica Neue\", Helvetica, Arial, sans-serif;\n  font-style: normal;\n  font-weight: normal;\n  letter-spacing: normal;\n  line-break: auto;\n  line-height: 1.42857;\n  text-align: left;\n  text-align: start;\n  text-decoration: none;\n  text-shadow: none;\n  text-transform: none;\n  white-space: normal;\n  word-break: normal;\n  word-spacing: normal;\n  word-wrap: normal;\n  font-size: 12px;\n  opacity: 0;\n  filter: alpha(opacity=0); }\n  .tooltip.in {\n    opacity: 0.9;\n    filter: alpha(opacity=90); }\n  .tooltip.top {\n    margin-top: -3px;\n    padding: 5px 0; }\n  .tooltip.right {\n    margin-left: 3px;\n    padding: 0 5px; }\n  .tooltip.bottom {\n    margin-top: 3px;\n    padding: 5px 0; }\n  .tooltip.left {\n    margin-left: -3px;\n    padding: 0 5px; }\n\n.tooltip-inner {\n  max-width: 200px;\n  padding: 3px 8px;\n  color: #fff;\n  text-align: center;\n  background-color: #000;\n  border-radius: 4px; }\n\n.tooltip-arrow {\n  position: absolute;\n  width: 0;\n  height: 0;\n  border-color: transparent;\n  border-style: solid; }\n\n.tooltip.top .tooltip-arrow {\n  bottom: 0;\n  left: 50%;\n  margin-left: -5px;\n  border-width: 5px 5px 0;\n  border-top-color: #000; }\n\n.tooltip.top-left .tooltip-arrow {\n  bottom: 0;\n  right: 5px;\n  margin-bottom: -5px;\n  border-width: 5px 5px 0;\n  border-top-color: #000; }\n\n.tooltip.top-right .tooltip-arrow {\n  bottom: 0;\n  left: 5px;\n  margin-bottom: -5px;\n  border-width: 5px 5px 0;\n  border-top-color: #000; }\n\n.tooltip.right .tooltip-arrow {\n  top: 50%;\n  left: 0;\n  margin-top: -5px;\n  border-width: 5px 5px 5px 0;\n  border-right-color: #000; }\n\n.tooltip.left .tooltip-arrow {\n  top: 50%;\n  right: 0;\n  margin-top: -5px;\n  border-width: 5px 0 5px 5px;\n  border-left-color: #000; }\n\n.tooltip.bottom .tooltip-arrow {\n  top: 0;\n  left: 50%;\n  margin-left: -5px;\n  border-width: 0 5px 5px;\n  border-bottom-color: #000; }\n\n.tooltip.bottom-left .tooltip-arrow {\n  top: 0;\n  right: 5px;\n  margin-top: -5px;\n  border-width: 0 5px 5px;\n  border-bottom-color: #000; }\n\n.tooltip.bottom-right .tooltip-arrow {\n  top: 0;\n  left: 5px;\n  margin-top: -5px;\n  border-width: 0 5px 5px;\n  border-bottom-color: #000; }\n\n.popover {\n  position: absolute;\n  top: 0;\n  left: 0;\n  z-index: 1060;\n  display: none;\n  max-width: 276px;\n  padding: 1px;\n  font-family: \"Helvetica Neue\", Helvetica, Arial, sans-serif;\n  font-style: normal;\n  font-weight: normal;\n  letter-spacing: normal;\n  line-break: auto;\n  line-height: 1.42857;\n  text-align: left;\n  text-align: start;\n  text-decoration: none;\n  text-shadow: none;\n  text-transform: none;\n  white-space: normal;\n  word-break: normal;\n  word-spacing: normal;\n  word-wrap: normal;\n  font-size: 14px;\n  background-color: #fff;\n  background-clip: padding-box;\n  border: 1px solid #ccc;\n  border: 1px solid rgba(0, 0, 0, 0.2);\n  border-radius: 6px;\n  -webkit-box-shadow: 0 5px 10px rgba(0, 0, 0, 0.2);\n  box-shadow: 0 5px 10px rgba(0, 0, 0, 0.2); }\n  .popover.top {\n    margin-top: -10px; }\n  .popover.right {\n    margin-left: 10px; }\n  .popover.bottom {\n    margin-top: 10px; }\n  .popover.left {\n    margin-left: -10px; }\n\n.popover-title {\n  margin: 0;\n  padding: 8px 14px;\n  font-size: 14px;\n  background-color: #f7f7f7;\n  border-bottom: 1px solid #ebebeb;\n  border-radius: 5px 5px 0 0; }\n\n.popover-content {\n  padding: 9px 14px; }\n\n.popover > .arrow, .popover > .arrow:after {\n  position: absolute;\n  display: block;\n  width: 0;\n  height: 0;\n  border-color: transparent;\n  border-style: solid; }\n\n.popover > .arrow {\n  border-width: 11px; }\n\n.popover > .arrow:after {\n  border-width: 10px;\n  content: \"\"; }\n\n.popover.top > .arrow {\n  left: 50%;\n  margin-left: -11px;\n  border-bottom-width: 0;\n  border-top-color: #999999;\n  border-top-color: rgba(0, 0, 0, 0.25);\n  bottom: -11px; }\n  .popover.top > .arrow:after {\n    content: \" \";\n    bottom: 1px;\n    margin-left: -10px;\n    border-bottom-width: 0;\n    border-top-color: #fff; }\n\n.popover.right > .arrow {\n  top: 50%;\n  left: -11px;\n  margin-top: -11px;\n  border-left-width: 0;\n  border-right-color: #999999;\n  border-right-color: rgba(0, 0, 0, 0.25); }\n  .popover.right > .arrow:after {\n    content: \" \";\n    left: 1px;\n    bottom: -10px;\n    border-left-width: 0;\n    border-right-color: #fff; }\n\n.popover.bottom > .arrow {\n  left: 50%;\n  margin-left: -11px;\n  border-top-width: 0;\n  border-bottom-color: #999999;\n  border-bottom-color: rgba(0, 0, 0, 0.25);\n  top: -11px; }\n  .popover.bottom > .arrow:after {\n    content: \" \";\n    top: 1px;\n    margin-left: -10px;\n    border-top-width: 0;\n    border-bottom-color: #fff; }\n\n.popover.left > .arrow {\n  top: 50%;\n  right: -11px;\n  margin-top: -11px;\n  border-right-width: 0;\n  border-left-color: #999999;\n  border-left-color: rgba(0, 0, 0, 0.25); }\n  .popover.left > .arrow:after {\n    content: \" \";\n    right: 1px;\n    border-right-width: 0;\n    border-left-color: #fff;\n    bottom: -10px; }\n\n.carousel {\n  position: relative; }\n\n.carousel-inner {\n  position: relative;\n  overflow: hidden;\n  width: 100%; }\n  .carousel-inner > .item {\n    display: none;\n    position: relative;\n    -webkit-transition: 0.6s ease-in-out left;\n    -o-transition: 0.6s ease-in-out left;\n    transition: 0.6s ease-in-out left; }\n    .carousel-inner > .item > img,\n    .carousel-inner > .item > a > img {\n      display: block;\n      max-width: 100%;\n      height: auto;\n      line-height: 1; }\n    @media all and (transform-3d), (-webkit-transform-3d) {\n      .carousel-inner > .item {\n        -webkit-transition: -webkit-transform 0.6s ease-in-out;\n        -moz-transition: -moz-transform 0.6s ease-in-out;\n        -o-transition: -o-transform 0.6s ease-in-out;\n        transition: transform 0.6s ease-in-out;\n        -webkit-backface-visibility: hidden;\n        -moz-backface-visibility: hidden;\n        backface-visibility: hidden;\n        -webkit-perspective: 1000px;\n        -moz-perspective: 1000px;\n        perspective: 1000px; }\n        .carousel-inner > .item.next, .carousel-inner > .item.active.right {\n          -webkit-transform: translate3d(100%, 0, 0);\n          transform: translate3d(100%, 0, 0);\n          left: 0; }\n        .carousel-inner > .item.prev, .carousel-inner > .item.active.left {\n          -webkit-transform: translate3d(-100%, 0, 0);\n          transform: translate3d(-100%, 0, 0);\n          left: 0; }\n        .carousel-inner > .item.next.left, .carousel-inner > .item.prev.right, .carousel-inner > .item.active {\n          -webkit-transform: translate3d(0, 0, 0);\n          transform: translate3d(0, 0, 0);\n          left: 0; } }\n  .carousel-inner > .active,\n  .carousel-inner > .next,\n  .carousel-inner > .prev {\n    display: block; }\n  .carousel-inner > .active {\n    left: 0; }\n  .carousel-inner > .next,\n  .carousel-inner > .prev {\n    position: absolute;\n    top: 0;\n    width: 100%; }\n  .carousel-inner > .next {\n    left: 100%; }\n  .carousel-inner > .prev {\n    left: -100%; }\n  .carousel-inner > .next.left,\n  .carousel-inner > .prev.right {\n    left: 0; }\n  .carousel-inner > .active.left {\n    left: -100%; }\n  .carousel-inner > .active.right {\n    left: 100%; }\n\n.carousel-control {\n  position: absolute;\n  top: 0;\n  left: 0;\n  bottom: 0;\n  width: 15%;\n  opacity: 0.5;\n  filter: alpha(opacity=50);\n  font-size: 20px;\n  color: #fff;\n  text-align: center;\n  text-shadow: 0 1px 2px rgba(0, 0, 0, 0.6);\n  background-color: transparent; }\n  .carousel-control.left {\n    background-image: -webkit-linear-gradient(left, rgba(0, 0, 0, 0.5) 0%, rgba(0, 0, 0, 0.0001) 100%);\n    background-image: -o-linear-gradient(left, rgba(0, 0, 0, 0.5) 0%, rgba(0, 0, 0, 0.0001) 100%);\n    background-image: linear-gradient(to right, rgba(0, 0, 0, 0.5) 0%, rgba(0, 0, 0, 0.0001) 100%);\n    background-repeat: repeat-x;\n    filter: progid:DXImageTransform.Microsoft.gradient(startColorstr='#80000000', endColorstr='#00000000', GradientType=1); }\n  .carousel-control.right {\n    left: auto;\n    right: 0;\n    background-image: -webkit-linear-gradient(left, rgba(0, 0, 0, 0.0001) 0%, rgba(0, 0, 0, 0.5) 100%);\n    background-image: -o-linear-gradient(left, rgba(0, 0, 0, 0.0001) 0%, rgba(0, 0, 0, 0.5) 100%);\n    background-image: linear-gradient(to right, rgba(0, 0, 0, 0.0001) 0%, rgba(0, 0, 0, 0.5) 100%);\n    background-repeat: repeat-x;\n    filter: progid:DXImageTransform.Microsoft.gradient(startColorstr='#00000000', endColorstr='#80000000', GradientType=1); }\n  .carousel-control:hover, .carousel-control:focus {\n    outline: 0;\n    color: #fff;\n    text-decoration: none;\n    opacity: 0.9;\n    filter: alpha(opacity=90); }\n  .carousel-control .icon-prev,\n  .carousel-control .icon-next,\n  .carousel-control .glyphicon-chevron-left,\n  .carousel-control .glyphicon-chevron-right {\n    position: absolute;\n    top: 50%;\n    margin-top: -10px;\n    z-index: 5;\n    display: inline-block; }\n  .carousel-control .icon-prev,\n  .carousel-control .glyphicon-chevron-left {\n    left: 50%;\n    margin-left: -10px; }\n  .carousel-control .icon-next,\n  .carousel-control .glyphicon-chevron-right {\n    right: 50%;\n    margin-right: -10px; }\n  .carousel-control .icon-prev,\n  .carousel-control .icon-next {\n    width: 20px;\n    height: 20px;\n    line-height: 1;\n    font-family: serif; }\n  .carousel-control .icon-prev:before {\n    content: '\\2039'; }\n  .carousel-control .icon-next:before {\n    content: '\\203A'; }\n\n.carousel-indicators {\n  position: absolute;\n  bottom: 10px;\n  left: 50%;\n  z-index: 15;\n  width: 60%;\n  margin-left: -30%;\n  padding-left: 0;\n  list-style: none;\n  text-align: center; }\n  .carousel-indicators li {\n    display: inline-block;\n    width: 10px;\n    height: 10px;\n    margin: 1px;\n    text-indent: -999px;\n    border: 1px solid #fff;\n    border-radius: 10px;\n    cursor: pointer;\n    background-color: #000 \\9;\n    background-color: transparent; }\n  .carousel-indicators .active {\n    margin: 0;\n    width: 12px;\n    height: 12px;\n    background-color: #fff; }\n\n.carousel-caption {\n  position: absolute;\n  left: 15%;\n  right: 15%;\n  bottom: 20px;\n  z-index: 10;\n  padding-top: 20px;\n  padding-bottom: 20px;\n  color: #fff;\n  text-align: center;\n  text-shadow: 0 1px 2px rgba(0, 0, 0, 0.6); }\n  .carousel-caption .btn {\n    text-shadow: none; }\n\n@media screen and (min-width: 768px) {\n  .carousel-control .glyphicon-chevron-left,\n  .carousel-control .glyphicon-chevron-right,\n  .carousel-control .icon-prev,\n  .carousel-control .icon-next {\n    width: 30px;\n    height: 30px;\n    margin-top: -10px;\n    font-size: 30px; }\n  .carousel-control .glyphicon-chevron-left,\n  .carousel-control .icon-prev {\n    margin-left: -10px; }\n  .carousel-control .glyphicon-chevron-right,\n  .carousel-control .icon-next {\n    margin-right: -10px; }\n  .carousel-caption {\n    left: 20%;\n    right: 20%;\n    padding-bottom: 30px; }\n  .carousel-indicators {\n    bottom: 20px; } }\n\n.clearfix:before, .clearfix:after {\n  content: \" \";\n  display: table; }\n\n.clearfix:after {\n  clear: both; }\n\n.center-block {\n  display: block;\n  margin-left: auto;\n  margin-right: auto; }\n\n.pull-right {\n  float: right !important; }\n\n.pull-left {\n  float: left !important; }\n\n.hide {\n  display: none !important; }\n\n.show {\n  display: block !important; }\n\n.invisible {\n  visibility: hidden; }\n\n.text-hide {\n  font: 0/0 a;\n  color: transparent;\n  text-shadow: none;\n  background-color: transparent;\n  border: 0; }\n\n.hidden {\n  display: none !important; }\n\n.affix {\n  position: fixed; }\n\n@-ms-viewport {\n  width: device-width; }\n\n.visible-xs {\n  display: none !important; }\n\n.visible-sm {\n  display: none !important; }\n\n.visible-md {\n  display: none !important; }\n\n.visible-lg {\n  display: none !important; }\n\n.visible-xs-block,\n.visible-xs-inline,\n.visible-xs-inline-block,\n.visible-sm-block,\n.visible-sm-inline,\n.visible-sm-inline-block,\n.visible-md-block,\n.visible-md-inline,\n.visible-md-inline-block,\n.visible-lg-block,\n.visible-lg-inline,\n.visible-lg-inline-block {\n  display: none !important; }\n\n@media (max-width: 767px) {\n  .visible-xs {\n    display: block !important; }\n  table.visible-xs {\n    display: table !important; }\n  tr.visible-xs {\n    display: table-row !important; }\n  th.visible-xs,\n  td.visible-xs {\n    display: table-cell !important; } }\n\n@media (max-width: 767px) {\n  .visible-xs-block {\n    display: block !important; } }\n\n@media (max-width: 767px) {\n  .visible-xs-inline {\n    display: inline !important; } }\n\n@media (max-width: 767px) {\n  .visible-xs-inline-block {\n    display: inline-block !important; } }\n\n@media (min-width: 768px) and (max-width: 991px) {\n  .visible-sm {\n    display: block !important; }\n  table.visible-sm {\n    display: table !important; }\n  tr.visible-sm {\n    display: table-row !important; }\n  th.visible-sm,\n  td.visible-sm {\n    display: table-cell !important; } }\n\n@media (min-width: 768px) and (max-width: 991px) {\n  .visible-sm-block {\n    display: block !important; } }\n\n@media (min-width: 768px) and (max-width: 991px) {\n  .visible-sm-inline {\n    display: inline !important; } }\n\n@media (min-width: 768px) and (max-width: 991px) {\n  .visible-sm-inline-block {\n    display: inline-block !important; } }\n\n@media (min-width: 992px) and (max-width: 1199px) {\n  .visible-md {\n    display: block !important; }\n  table.visible-md {\n    display: table !important; }\n  tr.visible-md {\n    display: table-row !important; }\n  th.visible-md,\n  td.visible-md {\n    display: table-cell !important; } }\n\n@media (min-width: 992px) and (max-width: 1199px) {\n  .visible-md-block {\n    display: block !important; } }\n\n@media (min-width: 992px) and (max-width: 1199px) {\n  .visible-md-inline {\n    display: inline !important; } }\n\n@media (min-width: 992px) and (max-width: 1199px) {\n  .visible-md-inline-block {\n    display: inline-block !important; } }\n\n@media (min-width: 1200px) {\n  .visible-lg {\n    display: block !important; }\n  table.visible-lg {\n    display: table !important; }\n  tr.visible-lg {\n    display: table-row !important; }\n  th.visible-lg,\n  td.visible-lg {\n    display: table-cell !important; } }\n\n@media (min-width: 1200px) {\n  .visible-lg-block {\n    display: block !important; } }\n\n@media (min-width: 1200px) {\n  .visible-lg-inline {\n    display: inline !important; } }\n\n@media (min-width: 1200px) {\n  .visible-lg-inline-block {\n    display: inline-block !important; } }\n\n@media (max-width: 767px) {\n  .hidden-xs {\n    display: none !important; } }\n\n@media (min-width: 768px) and (max-width: 991px) {\n  .hidden-sm {\n    display: none !important; } }\n\n@media (min-width: 992px) and (max-width: 1199px) {\n  .hidden-md {\n    display: none !important; } }\n\n@media (min-width: 1200px) {\n  .hidden-lg {\n    display: none !important; } }\n\n.visible-print {\n  display: none !important; }\n\n@media print {\n  .visible-print {\n    display: block !important; }\n  table.visible-print {\n    display: table !important; }\n  tr.visible-print {\n    display: table-row !important; }\n  th.visible-print,\n  td.visible-print {\n    display: table-cell !important; } }\n\n.visible-print-block {\n  display: none !important; }\n  @media print {\n    .visible-print-block {\n      display: block !important; } }\n\n.visible-print-inline {\n  display: none !important; }\n  @media print {\n    .visible-print-inline {\n      display: inline !important; } }\n\n.visible-print-inline-block {\n  display: none !important; }\n  @media print {\n    .visible-print-inline-block {\n      display: inline-block !important; } }\n\n@media print {\n  .hidden-print {\n    display: none !important; } }\n\n.nav > li > a:hover {\n  background: none;\n  color: #21be88; }\n\n.nav > li > a:focus {\n  background: none; }\n\n.nav .open > a, .nav .open > a:hover, .nav .open > a:focus {\n  background-color: white;\n  color: #21be88; }\n\n.carPreloader {\n  left: 0;\n  top: 0;\n  position: fixed;\n  z-index: 99;\n  width: 100%;\n  height: 100%;\n  background-color: white;\n  opacity: 0.8;\n  transition: all linear 10s !important;\n  display: flex;\n  align-items: center;\n  justify-content: center; }\n\n.spinner {\n  width: 40px;\n  height: 40px;\n  position: relative;\n  margin: 100px auto; }\n\n.double-bounce1, .double-bounce2 {\n  width: 100%;\n  height: 100%;\n  border-radius: 50%;\n  background-color: #50b833;\n  opacity: 0.8;\n  position: absolute;\n  top: 0;\n  left: 0;\n  -webkit-animation: sk-bounce 2.0s infinite ease-in-out;\n  animation: sk-bounce 2.0s infinite ease-in-out; }\n\n.double-bounce2 {\n  -webkit-animation-delay: -1.0s;\n  animation-delay: -1.0s; }\n\n@-webkit-keyframes sk-bounce {\n  0%, 100% {\n    -webkit-transform: scale(0); }\n  50% {\n    -webkit-transform: scale(1); } }\n\n@keyframes sk-bounce {\n  0%, 100% {\n    transform: scale(0);\n    -webkit-transform: scale(0); }\n  50% {\n    transform: scale(1);\n    -webkit-transform: scale(1); } }\n\n/*!\n *  Font Awesome 4.7.0 by @davegandy - http://fontawesome.io - @fontawesome\n *  License - http://fontawesome.io/license (Font: SIL OFL 1.1, CSS: MIT License)\n */\n/* FONT PATH\n * -------------------------- */\n@font-face {\n  font-family: 'FontAwesome';\n  src: url(" + __webpack_require__(37) + ");\n  src: url(" + __webpack_require__(38) + "?#iefix&v=4.7.0) format(\"embedded-opentype\"), url(" + __webpack_require__(39) + ") format(\"woff2\"), url(" + __webpack_require__(40) + ") format(\"woff\"), url(" + __webpack_require__(41) + ") format(\"truetype\"), url(" + __webpack_require__(42) + "#fontawesomeregular) format(\"svg\");\n  font-weight: normal;\n  font-style: normal; }\n\n.fa {\n  display: inline-block;\n  font: normal normal normal 14px/1 FontAwesome;\n  font-size: inherit;\n  text-rendering: auto;\n  -webkit-font-smoothing: antialiased;\n  -moz-osx-font-smoothing: grayscale; }\n\n/* makes the font 33% larger relative to the icon container */\n.fa-lg {\n  font-size: 1.33333em;\n  line-height: 0.75em;\n  vertical-align: -15%; }\n\n.fa-2x {\n  font-size: 2em; }\n\n.fa-3x {\n  font-size: 3em; }\n\n.fa-4x {\n  font-size: 4em; }\n\n.fa-5x {\n  font-size: 5em; }\n\n.fa-fw {\n  width: 1.28571em;\n  text-align: center; }\n\n.fa-ul {\n  padding-left: 0;\n  margin-left: 2.14286em;\n  list-style-type: none; }\n  .fa-ul > li {\n    position: relative; }\n\n.fa-li {\n  position: absolute;\n  left: -2.14286em;\n  width: 2.14286em;\n  top: 0.14286em;\n  text-align: center; }\n  .fa-li.fa-lg {\n    left: -1.85714em; }\n\n.fa-border {\n  padding: .2em .25em .15em;\n  border: solid 0.08em #eee;\n  border-radius: .1em; }\n\n.fa-pull-left {\n  float: left; }\n\n.fa-pull-right {\n  float: right; }\n\n.fa.fa-pull-left {\n  margin-right: .3em; }\n\n.fa.fa-pull-right {\n  margin-left: .3em; }\n\n/* Deprecated as of 4.4.0 */\n.pull-right {\n  float: right; }\n\n.pull-left {\n  float: left; }\n\n.fa.pull-left {\n  margin-right: .3em; }\n\n.fa.pull-right {\n  margin-left: .3em; }\n\n.fa-spin {\n  -webkit-animation: fa-spin 2s infinite linear;\n  animation: fa-spin 2s infinite linear; }\n\n.fa-pulse {\n  -webkit-animation: fa-spin 1s infinite steps(8);\n  animation: fa-spin 1s infinite steps(8); }\n\n@-webkit-keyframes fa-spin {\n  0% {\n    -webkit-transform: rotate(0deg);\n    transform: rotate(0deg); }\n  100% {\n    -webkit-transform: rotate(359deg);\n    transform: rotate(359deg); } }\n\n@keyframes fa-spin {\n  0% {\n    -webkit-transform: rotate(0deg);\n    transform: rotate(0deg); }\n  100% {\n    -webkit-transform: rotate(359deg);\n    transform: rotate(359deg); } }\n\n.fa-rotate-90 {\n  -ms-filter: \"progid:DXImageTransform.Microsoft.BasicImage(rotation=1)\";\n  -webkit-transform: rotate(90deg);\n  -ms-transform: rotate(90deg);\n  transform: rotate(90deg); }\n\n.fa-rotate-180 {\n  -ms-filter: \"progid:DXImageTransform.Microsoft.BasicImage(rotation=2)\";\n  -webkit-transform: rotate(180deg);\n  -ms-transform: rotate(180deg);\n  transform: rotate(180deg); }\n\n.fa-rotate-270 {\n  -ms-filter: \"progid:DXImageTransform.Microsoft.BasicImage(rotation=3)\";\n  -webkit-transform: rotate(270deg);\n  -ms-transform: rotate(270deg);\n  transform: rotate(270deg); }\n\n.fa-flip-horizontal {\n  -ms-filter: \"progid:DXImageTransform.Microsoft.BasicImage(rotation=0, mirror=1)\";\n  -webkit-transform: scale(-1, 1);\n  -ms-transform: scale(-1, 1);\n  transform: scale(-1, 1); }\n\n.fa-flip-vertical {\n  -ms-filter: \"progid:DXImageTransform.Microsoft.BasicImage(rotation=2, mirror=1)\";\n  -webkit-transform: scale(1, -1);\n  -ms-transform: scale(1, -1);\n  transform: scale(1, -1); }\n\n:root .fa-rotate-90,\n:root .fa-rotate-180,\n:root .fa-rotate-270,\n:root .fa-flip-horizontal,\n:root .fa-flip-vertical {\n  filter: none; }\n\n.fa-stack {\n  position: relative;\n  display: inline-block;\n  width: 2em;\n  height: 2em;\n  line-height: 2em;\n  vertical-align: middle; }\n\n.fa-stack-1x, .fa-stack-2x {\n  position: absolute;\n  left: 0;\n  width: 100%;\n  text-align: center; }\n\n.fa-stack-1x {\n  line-height: inherit; }\n\n.fa-stack-2x {\n  font-size: 2em; }\n\n.fa-inverse {\n  color: #fff; }\n\n/* Font Awesome uses the Unicode Private Use Area (PUA) to ensure screen\n   readers do not read off random characters that represent icons */\n.fa-glass:before {\n  content: \"\\F000\"; }\n\n.fa-music:before {\n  content: \"\\F001\"; }\n\n.fa-search:before {\n  content: \"\\F002\"; }\n\n.fa-envelope-o:before {\n  content: \"\\F003\"; }\n\n.fa-heart:before {\n  content: \"\\F004\"; }\n\n.fa-star:before {\n  content: \"\\F005\"; }\n\n.fa-star-o:before {\n  content: \"\\F006\"; }\n\n.fa-user:before {\n  content: \"\\F007\"; }\n\n.fa-film:before {\n  content: \"\\F008\"; }\n\n.fa-th-large:before {\n  content: \"\\F009\"; }\n\n.fa-th:before {\n  content: \"\\F00A\"; }\n\n.fa-th-list:before {\n  content: \"\\F00B\"; }\n\n.fa-check:before {\n  content: \"\\F00C\"; }\n\n.fa-remove:before,\n.fa-close:before,\n.fa-times:before {\n  content: \"\\F00D\"; }\n\n.fa-search-plus:before {\n  content: \"\\F00E\"; }\n\n.fa-search-minus:before {\n  content: \"\\F010\"; }\n\n.fa-power-off:before {\n  content: \"\\F011\"; }\n\n.fa-signal:before {\n  content: \"\\F012\"; }\n\n.fa-gear:before,\n.fa-cog:before {\n  content: \"\\F013\"; }\n\n.fa-trash-o:before {\n  content: \"\\F014\"; }\n\n.fa-home:before {\n  content: \"\\F015\"; }\n\n.fa-file-o:before {\n  content: \"\\F016\"; }\n\n.fa-clock-o:before {\n  content: \"\\F017\"; }\n\n.fa-road:before {\n  content: \"\\F018\"; }\n\n.fa-download:before {\n  content: \"\\F019\"; }\n\n.fa-arrow-circle-o-down:before {\n  content: \"\\F01A\"; }\n\n.fa-arrow-circle-o-up:before {\n  content: \"\\F01B\"; }\n\n.fa-inbox:before {\n  content: \"\\F01C\"; }\n\n.fa-play-circle-o:before {\n  content: \"\\F01D\"; }\n\n.fa-rotate-right:before,\n.fa-repeat:before {\n  content: \"\\F01E\"; }\n\n.fa-refresh:before {\n  content: \"\\F021\"; }\n\n.fa-list-alt:before {\n  content: \"\\F022\"; }\n\n.fa-lock:before {\n  content: \"\\F023\"; }\n\n.fa-flag:before {\n  content: \"\\F024\"; }\n\n.fa-headphones:before {\n  content: \"\\F025\"; }\n\n.fa-volume-off:before {\n  content: \"\\F026\"; }\n\n.fa-volume-down:before {\n  content: \"\\F027\"; }\n\n.fa-volume-up:before {\n  content: \"\\F028\"; }\n\n.fa-qrcode:before {\n  content: \"\\F029\"; }\n\n.fa-barcode:before {\n  content: \"\\F02A\"; }\n\n.fa-tag:before {\n  content: \"\\F02B\"; }\n\n.fa-tags:before {\n  content: \"\\F02C\"; }\n\n.fa-book:before {\n  content: \"\\F02D\"; }\n\n.fa-bookmark:before {\n  content: \"\\F02E\"; }\n\n.fa-print:before {\n  content: \"\\F02F\"; }\n\n.fa-camera:before {\n  content: \"\\F030\"; }\n\n.fa-font:before {\n  content: \"\\F031\"; }\n\n.fa-bold:before {\n  content: \"\\F032\"; }\n\n.fa-italic:before {\n  content: \"\\F033\"; }\n\n.fa-text-height:before {\n  content: \"\\F034\"; }\n\n.fa-text-width:before {\n  content: \"\\F035\"; }\n\n.fa-align-left:before {\n  content: \"\\F036\"; }\n\n.fa-align-center:before {\n  content: \"\\F037\"; }\n\n.fa-align-right:before {\n  content: \"\\F038\"; }\n\n.fa-align-justify:before {\n  content: \"\\F039\"; }\n\n.fa-list:before {\n  content: \"\\F03A\"; }\n\n.fa-dedent:before,\n.fa-outdent:before {\n  content: \"\\F03B\"; }\n\n.fa-indent:before {\n  content: \"\\F03C\"; }\n\n.fa-video-camera:before {\n  content: \"\\F03D\"; }\n\n.fa-photo:before,\n.fa-image:before,\n.fa-picture-o:before {\n  content: \"\\F03E\"; }\n\n.fa-pencil:before {\n  content: \"\\F040\"; }\n\n.fa-map-marker:before {\n  content: \"\\F041\"; }\n\n.fa-adjust:before {\n  content: \"\\F042\"; }\n\n.fa-tint:before {\n  content: \"\\F043\"; }\n\n.fa-edit:before,\n.fa-pencil-square-o:before {\n  content: \"\\F044\"; }\n\n.fa-share-square-o:before {\n  content: \"\\F045\"; }\n\n.fa-check-square-o:before {\n  content: \"\\F046\"; }\n\n.fa-arrows:before {\n  content: \"\\F047\"; }\n\n.fa-step-backward:before {\n  content: \"\\F048\"; }\n\n.fa-fast-backward:before {\n  content: \"\\F049\"; }\n\n.fa-backward:before {\n  content: \"\\F04A\"; }\n\n.fa-play:before {\n  content: \"\\F04B\"; }\n\n.fa-pause:before {\n  content: \"\\F04C\"; }\n\n.fa-stop:before {\n  content: \"\\F04D\"; }\n\n.fa-forward:before {\n  content: \"\\F04E\"; }\n\n.fa-fast-forward:before {\n  content: \"\\F050\"; }\n\n.fa-step-forward:before {\n  content: \"\\F051\"; }\n\n.fa-eject:before {\n  content: \"\\F052\"; }\n\n.fa-chevron-left:before {\n  content: \"\\F053\"; }\n\n.fa-chevron-right:before {\n  content: \"\\F054\"; }\n\n.fa-plus-circle:before {\n  content: \"\\F055\"; }\n\n.fa-minus-circle:before {\n  content: \"\\F056\"; }\n\n.fa-times-circle:before {\n  content: \"\\F057\"; }\n\n.fa-check-circle:before {\n  content: \"\\F058\"; }\n\n.fa-question-circle:before {\n  content: \"\\F059\"; }\n\n.fa-info-circle:before {\n  content: \"\\F05A\"; }\n\n.fa-crosshairs:before {\n  content: \"\\F05B\"; }\n\n.fa-times-circle-o:before {\n  content: \"\\F05C\"; }\n\n.fa-check-circle-o:before {\n  content: \"\\F05D\"; }\n\n.fa-ban:before {\n  content: \"\\F05E\"; }\n\n.fa-arrow-left:before {\n  content: \"\\F060\"; }\n\n.fa-arrow-right:before {\n  content: \"\\F061\"; }\n\n.fa-arrow-up:before {\n  content: \"\\F062\"; }\n\n.fa-arrow-down:before {\n  content: \"\\F063\"; }\n\n.fa-mail-forward:before,\n.fa-share:before {\n  content: \"\\F064\"; }\n\n.fa-expand:before {\n  content: \"\\F065\"; }\n\n.fa-compress:before {\n  content: \"\\F066\"; }\n\n.fa-plus:before {\n  content: \"\\F067\"; }\n\n.fa-minus:before {\n  content: \"\\F068\"; }\n\n.fa-asterisk:before {\n  content: \"\\F069\"; }\n\n.fa-exclamation-circle:before {\n  content: \"\\F06A\"; }\n\n.fa-gift:before {\n  content: \"\\F06B\"; }\n\n.fa-leaf:before {\n  content: \"\\F06C\"; }\n\n.fa-fire:before {\n  content: \"\\F06D\"; }\n\n.fa-eye:before {\n  content: \"\\F06E\"; }\n\n.fa-eye-slash:before {\n  content: \"\\F070\"; }\n\n.fa-warning:before,\n.fa-exclamation-triangle:before {\n  content: \"\\F071\"; }\n\n.fa-plane:before {\n  content: \"\\F072\"; }\n\n.fa-calendar:before {\n  content: \"\\F073\"; }\n\n.fa-random:before {\n  content: \"\\F074\"; }\n\n.fa-comment:before {\n  content: \"\\F075\"; }\n\n.fa-magnet:before {\n  content: \"\\F076\"; }\n\n.fa-chevron-up:before {\n  content: \"\\F077\"; }\n\n.fa-chevron-down:before {\n  content: \"\\F078\"; }\n\n.fa-retweet:before {\n  content: \"\\F079\"; }\n\n.fa-shopping-cart:before {\n  content: \"\\F07A\"; }\n\n.fa-folder:before {\n  content: \"\\F07B\"; }\n\n.fa-folder-open:before {\n  content: \"\\F07C\"; }\n\n.fa-arrows-v:before {\n  content: \"\\F07D\"; }\n\n.fa-arrows-h:before {\n  content: \"\\F07E\"; }\n\n.fa-bar-chart-o:before,\n.fa-bar-chart:before {\n  content: \"\\F080\"; }\n\n.fa-twitter-square:before {\n  content: \"\\F081\"; }\n\n.fa-facebook-square:before {\n  content: \"\\F082\"; }\n\n.fa-camera-retro:before {\n  content: \"\\F083\"; }\n\n.fa-key:before {\n  content: \"\\F084\"; }\n\n.fa-gears:before,\n.fa-cogs:before {\n  content: \"\\F085\"; }\n\n.fa-comments:before {\n  content: \"\\F086\"; }\n\n.fa-thumbs-o-up:before {\n  content: \"\\F087\"; }\n\n.fa-thumbs-o-down:before {\n  content: \"\\F088\"; }\n\n.fa-star-half:before {\n  content: \"\\F089\"; }\n\n.fa-heart-o:before {\n  content: \"\\F08A\"; }\n\n.fa-sign-out:before {\n  content: \"\\F08B\"; }\n\n.fa-linkedin-square:before {\n  content: \"\\F08C\"; }\n\n.fa-thumb-tack:before {\n  content: \"\\F08D\"; }\n\n.fa-external-link:before {\n  content: \"\\F08E\"; }\n\n.fa-sign-in:before {\n  content: \"\\F090\"; }\n\n.fa-trophy:before {\n  content: \"\\F091\"; }\n\n.fa-github-square:before {\n  content: \"\\F092\"; }\n\n.fa-upload:before {\n  content: \"\\F093\"; }\n\n.fa-lemon-o:before {\n  content: \"\\F094\"; }\n\n.fa-phone:before {\n  content: \"\\F095\"; }\n\n.fa-square-o:before {\n  content: \"\\F096\"; }\n\n.fa-bookmark-o:before {\n  content: \"\\F097\"; }\n\n.fa-phone-square:before {\n  content: \"\\F098\"; }\n\n.fa-twitter:before {\n  content: \"\\F099\"; }\n\n.fa-facebook-f:before,\n.fa-facebook:before {\n  content: \"\\F09A\"; }\n\n.fa-github:before {\n  content: \"\\F09B\"; }\n\n.fa-unlock:before {\n  content: \"\\F09C\"; }\n\n.fa-credit-card:before {\n  content: \"\\F09D\"; }\n\n.fa-feed:before,\n.fa-rss:before {\n  content: \"\\F09E\"; }\n\n.fa-hdd-o:before {\n  content: \"\\F0A0\"; }\n\n.fa-bullhorn:before {\n  content: \"\\F0A1\"; }\n\n.fa-bell:before {\n  content: \"\\F0F3\"; }\n\n.fa-certificate:before {\n  content: \"\\F0A3\"; }\n\n.fa-hand-o-right:before {\n  content: \"\\F0A4\"; }\n\n.fa-hand-o-left:before {\n  content: \"\\F0A5\"; }\n\n.fa-hand-o-up:before {\n  content: \"\\F0A6\"; }\n\n.fa-hand-o-down:before {\n  content: \"\\F0A7\"; }\n\n.fa-arrow-circle-left:before {\n  content: \"\\F0A8\"; }\n\n.fa-arrow-circle-right:before {\n  content: \"\\F0A9\"; }\n\n.fa-arrow-circle-up:before {\n  content: \"\\F0AA\"; }\n\n.fa-arrow-circle-down:before {\n  content: \"\\F0AB\"; }\n\n.fa-globe:before {\n  content: \"\\F0AC\"; }\n\n.fa-wrench:before {\n  content: \"\\F0AD\"; }\n\n.fa-tasks:before {\n  content: \"\\F0AE\"; }\n\n.fa-filter:before {\n  content: \"\\F0B0\"; }\n\n.fa-briefcase:before {\n  content: \"\\F0B1\"; }\n\n.fa-arrows-alt:before {\n  content: \"\\F0B2\"; }\n\n.fa-group:before,\n.fa-users:before {\n  content: \"\\F0C0\"; }\n\n.fa-chain:before,\n.fa-link:before {\n  content: \"\\F0C1\"; }\n\n.fa-cloud:before {\n  content: \"\\F0C2\"; }\n\n.fa-flask:before {\n  content: \"\\F0C3\"; }\n\n.fa-cut:before,\n.fa-scissors:before {\n  content: \"\\F0C4\"; }\n\n.fa-copy:before,\n.fa-files-o:before {\n  content: \"\\F0C5\"; }\n\n.fa-paperclip:before {\n  content: \"\\F0C6\"; }\n\n.fa-save:before,\n.fa-floppy-o:before {\n  content: \"\\F0C7\"; }\n\n.fa-square:before {\n  content: \"\\F0C8\"; }\n\n.fa-navicon:before,\n.fa-reorder:before,\n.fa-bars:before {\n  content: \"\\F0C9\"; }\n\n.fa-list-ul:before {\n  content: \"\\F0CA\"; }\n\n.fa-list-ol:before {\n  content: \"\\F0CB\"; }\n\n.fa-strikethrough:before {\n  content: \"\\F0CC\"; }\n\n.fa-underline:before {\n  content: \"\\F0CD\"; }\n\n.fa-table:before {\n  content: \"\\F0CE\"; }\n\n.fa-magic:before {\n  content: \"\\F0D0\"; }\n\n.fa-truck:before {\n  content: \"\\F0D1\"; }\n\n.fa-pinterest:before {\n  content: \"\\F0D2\"; }\n\n.fa-pinterest-square:before {\n  content: \"\\F0D3\"; }\n\n.fa-google-plus-square:before {\n  content: \"\\F0D4\"; }\n\n.fa-google-plus:before {\n  content: \"\\F0D5\"; }\n\n.fa-money:before {\n  content: \"\\F0D6\"; }\n\n.fa-caret-down:before {\n  content: \"\\F0D7\"; }\n\n.fa-caret-up:before {\n  content: \"\\F0D8\"; }\n\n.fa-caret-left:before {\n  content: \"\\F0D9\"; }\n\n.fa-caret-right:before {\n  content: \"\\F0DA\"; }\n\n.fa-columns:before {\n  content: \"\\F0DB\"; }\n\n.fa-unsorted:before,\n.fa-sort:before {\n  content: \"\\F0DC\"; }\n\n.fa-sort-down:before,\n.fa-sort-desc:before {\n  content: \"\\F0DD\"; }\n\n.fa-sort-up:before,\n.fa-sort-asc:before {\n  content: \"\\F0DE\"; }\n\n.fa-envelope:before {\n  content: \"\\F0E0\"; }\n\n.fa-linkedin:before {\n  content: \"\\F0E1\"; }\n\n.fa-rotate-left:before,\n.fa-undo:before {\n  content: \"\\F0E2\"; }\n\n.fa-legal:before,\n.fa-gavel:before {\n  content: \"\\F0E3\"; }\n\n.fa-dashboard:before,\n.fa-tachometer:before {\n  content: \"\\F0E4\"; }\n\n.fa-comment-o:before {\n  content: \"\\F0E5\"; }\n\n.fa-comments-o:before {\n  content: \"\\F0E6\"; }\n\n.fa-flash:before,\n.fa-bolt:before {\n  content: \"\\F0E7\"; }\n\n.fa-sitemap:before {\n  content: \"\\F0E8\"; }\n\n.fa-umbrella:before {\n  content: \"\\F0E9\"; }\n\n.fa-paste:before,\n.fa-clipboard:before {\n  content: \"\\F0EA\"; }\n\n.fa-lightbulb-o:before {\n  content: \"\\F0EB\"; }\n\n.fa-exchange:before {\n  content: \"\\F0EC\"; }\n\n.fa-cloud-download:before {\n  content: \"\\F0ED\"; }\n\n.fa-cloud-upload:before {\n  content: \"\\F0EE\"; }\n\n.fa-user-md:before {\n  content: \"\\F0F0\"; }\n\n.fa-stethoscope:before {\n  content: \"\\F0F1\"; }\n\n.fa-suitcase:before {\n  content: \"\\F0F2\"; }\n\n.fa-bell-o:before {\n  content: \"\\F0A2\"; }\n\n.fa-coffee:before {\n  content: \"\\F0F4\"; }\n\n.fa-cutlery:before {\n  content: \"\\F0F5\"; }\n\n.fa-file-text-o:before {\n  content: \"\\F0F6\"; }\n\n.fa-building-o:before {\n  content: \"\\F0F7\"; }\n\n.fa-hospital-o:before {\n  content: \"\\F0F8\"; }\n\n.fa-ambulance:before {\n  content: \"\\F0F9\"; }\n\n.fa-medkit:before {\n  content: \"\\F0FA\"; }\n\n.fa-fighter-jet:before {\n  content: \"\\F0FB\"; }\n\n.fa-beer:before {\n  content: \"\\F0FC\"; }\n\n.fa-h-square:before {\n  content: \"\\F0FD\"; }\n\n.fa-plus-square:before {\n  content: \"\\F0FE\"; }\n\n.fa-angle-double-left:before {\n  content: \"\\F100\"; }\n\n.fa-angle-double-right:before {\n  content: \"\\F101\"; }\n\n.fa-angle-double-up:before {\n  content: \"\\F102\"; }\n\n.fa-angle-double-down:before {\n  content: \"\\F103\"; }\n\n.fa-angle-left:before {\n  content: \"\\F104\"; }\n\n.fa-angle-right:before {\n  content: \"\\F105\"; }\n\n.fa-angle-up:before {\n  content: \"\\F106\"; }\n\n.fa-angle-down:before {\n  content: \"\\F107\"; }\n\n.fa-desktop:before {\n  content: \"\\F108\"; }\n\n.fa-laptop:before {\n  content: \"\\F109\"; }\n\n.fa-tablet:before {\n  content: \"\\F10A\"; }\n\n.fa-mobile-phone:before,\n.fa-mobile:before {\n  content: \"\\F10B\"; }\n\n.fa-circle-o:before {\n  content: \"\\F10C\"; }\n\n.fa-quote-left:before {\n  content: \"\\F10D\"; }\n\n.fa-quote-right:before {\n  content: \"\\F10E\"; }\n\n.fa-spinner:before {\n  content: \"\\F110\"; }\n\n.fa-circle:before {\n  content: \"\\F111\"; }\n\n.fa-mail-reply:before,\n.fa-reply:before {\n  content: \"\\F112\"; }\n\n.fa-github-alt:before {\n  content: \"\\F113\"; }\n\n.fa-folder-o:before {\n  content: \"\\F114\"; }\n\n.fa-folder-open-o:before {\n  content: \"\\F115\"; }\n\n.fa-smile-o:before {\n  content: \"\\F118\"; }\n\n.fa-frown-o:before {\n  content: \"\\F119\"; }\n\n.fa-meh-o:before {\n  content: \"\\F11A\"; }\n\n.fa-gamepad:before {\n  content: \"\\F11B\"; }\n\n.fa-keyboard-o:before {\n  content: \"\\F11C\"; }\n\n.fa-flag-o:before {\n  content: \"\\F11D\"; }\n\n.fa-flag-checkered:before {\n  content: \"\\F11E\"; }\n\n.fa-terminal:before {\n  content: \"\\F120\"; }\n\n.fa-code:before {\n  content: \"\\F121\"; }\n\n.fa-mail-reply-all:before,\n.fa-reply-all:before {\n  content: \"\\F122\"; }\n\n.fa-star-half-empty:before,\n.fa-star-half-full:before,\n.fa-star-half-o:before {\n  content: \"\\F123\"; }\n\n.fa-location-arrow:before {\n  content: \"\\F124\"; }\n\n.fa-crop:before {\n  content: \"\\F125\"; }\n\n.fa-code-fork:before {\n  content: \"\\F126\"; }\n\n.fa-unlink:before,\n.fa-chain-broken:before {\n  content: \"\\F127\"; }\n\n.fa-question:before {\n  content: \"\\F128\"; }\n\n.fa-info:before {\n  content: \"\\F129\"; }\n\n.fa-exclamation:before {\n  content: \"\\F12A\"; }\n\n.fa-superscript:before {\n  content: \"\\F12B\"; }\n\n.fa-subscript:before {\n  content: \"\\F12C\"; }\n\n.fa-eraser:before {\n  content: \"\\F12D\"; }\n\n.fa-puzzle-piece:before {\n  content: \"\\F12E\"; }\n\n.fa-microphone:before {\n  content: \"\\F130\"; }\n\n.fa-microphone-slash:before {\n  content: \"\\F131\"; }\n\n.fa-shield:before {\n  content: \"\\F132\"; }\n\n.fa-calendar-o:before {\n  content: \"\\F133\"; }\n\n.fa-fire-extinguisher:before {\n  content: \"\\F134\"; }\n\n.fa-rocket:before {\n  content: \"\\F135\"; }\n\n.fa-maxcdn:before {\n  content: \"\\F136\"; }\n\n.fa-chevron-circle-left:before {\n  content: \"\\F137\"; }\n\n.fa-chevron-circle-right:before {\n  content: \"\\F138\"; }\n\n.fa-chevron-circle-up:before {\n  content: \"\\F139\"; }\n\n.fa-chevron-circle-down:before {\n  content: \"\\F13A\"; }\n\n.fa-html5:before {\n  content: \"\\F13B\"; }\n\n.fa-css3:before {\n  content: \"\\F13C\"; }\n\n.fa-anchor:before {\n  content: \"\\F13D\"; }\n\n.fa-unlock-alt:before {\n  content: \"\\F13E\"; }\n\n.fa-bullseye:before {\n  content: \"\\F140\"; }\n\n.fa-ellipsis-h:before {\n  content: \"\\F141\"; }\n\n.fa-ellipsis-v:before {\n  content: \"\\F142\"; }\n\n.fa-rss-square:before {\n  content: \"\\F143\"; }\n\n.fa-play-circle:before {\n  content: \"\\F144\"; }\n\n.fa-ticket:before {\n  content: \"\\F145\"; }\n\n.fa-minus-square:before {\n  content: \"\\F146\"; }\n\n.fa-minus-square-o:before {\n  content: \"\\F147\"; }\n\n.fa-level-up:before {\n  content: \"\\F148\"; }\n\n.fa-level-down:before {\n  content: \"\\F149\"; }\n\n.fa-check-square:before {\n  content: \"\\F14A\"; }\n\n.fa-pencil-square:before {\n  content: \"\\F14B\"; }\n\n.fa-external-link-square:before {\n  content: \"\\F14C\"; }\n\n.fa-share-square:before {\n  content: \"\\F14D\"; }\n\n.fa-compass:before {\n  content: \"\\F14E\"; }\n\n.fa-toggle-down:before,\n.fa-caret-square-o-down:before {\n  content: \"\\F150\"; }\n\n.fa-toggle-up:before,\n.fa-caret-square-o-up:before {\n  content: \"\\F151\"; }\n\n.fa-toggle-right:before,\n.fa-caret-square-o-right:before {\n  content: \"\\F152\"; }\n\n.fa-euro:before,\n.fa-eur:before {\n  content: \"\\F153\"; }\n\n.fa-gbp:before {\n  content: \"\\F154\"; }\n\n.fa-dollar:before,\n.fa-usd:before {\n  content: \"\\F155\"; }\n\n.fa-rupee:before,\n.fa-inr:before {\n  content: \"\\F156\"; }\n\n.fa-cny:before,\n.fa-rmb:before,\n.fa-yen:before,\n.fa-jpy:before {\n  content: \"\\F157\"; }\n\n.fa-ruble:before,\n.fa-rouble:before,\n.fa-rub:before {\n  content: \"\\F158\"; }\n\n.fa-won:before,\n.fa-krw:before {\n  content: \"\\F159\"; }\n\n.fa-bitcoin:before,\n.fa-btc:before {\n  content: \"\\F15A\"; }\n\n.fa-file:before {\n  content: \"\\F15B\"; }\n\n.fa-file-text:before {\n  content: \"\\F15C\"; }\n\n.fa-sort-alpha-asc:before {\n  content: \"\\F15D\"; }\n\n.fa-sort-alpha-desc:before {\n  content: \"\\F15E\"; }\n\n.fa-sort-amount-asc:before {\n  content: \"\\F160\"; }\n\n.fa-sort-amount-desc:before {\n  content: \"\\F161\"; }\n\n.fa-sort-numeric-asc:before {\n  content: \"\\F162\"; }\n\n.fa-sort-numeric-desc:before {\n  content: \"\\F163\"; }\n\n.fa-thumbs-up:before {\n  content: \"\\F164\"; }\n\n.fa-thumbs-down:before {\n  content: \"\\F165\"; }\n\n.fa-youtube-square:before {\n  content: \"\\F166\"; }\n\n.fa-youtube:before {\n  content: \"\\F167\"; }\n\n.fa-xing:before {\n  content: \"\\F168\"; }\n\n.fa-xing-square:before {\n  content: \"\\F169\"; }\n\n.fa-youtube-play:before {\n  content: \"\\F16A\"; }\n\n.fa-dropbox:before {\n  content: \"\\F16B\"; }\n\n.fa-stack-overflow:before {\n  content: \"\\F16C\"; }\n\n.fa-instagram:before {\n  content: \"\\F16D\"; }\n\n.fa-flickr:before {\n  content: \"\\F16E\"; }\n\n.fa-adn:before {\n  content: \"\\F170\"; }\n\n.fa-bitbucket:before {\n  content: \"\\F171\"; }\n\n.fa-bitbucket-square:before {\n  content: \"\\F172\"; }\n\n.fa-tumblr:before {\n  content: \"\\F173\"; }\n\n.fa-tumblr-square:before {\n  content: \"\\F174\"; }\n\n.fa-long-arrow-down:before {\n  content: \"\\F175\"; }\n\n.fa-long-arrow-up:before {\n  content: \"\\F176\"; }\n\n.fa-long-arrow-left:before {\n  content: \"\\F177\"; }\n\n.fa-long-arrow-right:before {\n  content: \"\\F178\"; }\n\n.fa-apple:before {\n  content: \"\\F179\"; }\n\n.fa-windows:before {\n  content: \"\\F17A\"; }\n\n.fa-android:before {\n  content: \"\\F17B\"; }\n\n.fa-linux:before {\n  content: \"\\F17C\"; }\n\n.fa-dribbble:before {\n  content: \"\\F17D\"; }\n\n.fa-skype:before {\n  content: \"\\F17E\"; }\n\n.fa-foursquare:before {\n  content: \"\\F180\"; }\n\n.fa-trello:before {\n  content: \"\\F181\"; }\n\n.fa-female:before {\n  content: \"\\F182\"; }\n\n.fa-male:before {\n  content: \"\\F183\"; }\n\n.fa-gittip:before,\n.fa-gratipay:before {\n  content: \"\\F184\"; }\n\n.fa-sun-o:before {\n  content: \"\\F185\"; }\n\n.fa-moon-o:before {\n  content: \"\\F186\"; }\n\n.fa-archive:before {\n  content: \"\\F187\"; }\n\n.fa-bug:before {\n  content: \"\\F188\"; }\n\n.fa-vk:before {\n  content: \"\\F189\"; }\n\n.fa-weibo:before {\n  content: \"\\F18A\"; }\n\n.fa-renren:before {\n  content: \"\\F18B\"; }\n\n.fa-pagelines:before {\n  content: \"\\F18C\"; }\n\n.fa-stack-exchange:before {\n  content: \"\\F18D\"; }\n\n.fa-arrow-circle-o-right:before {\n  content: \"\\F18E\"; }\n\n.fa-arrow-circle-o-left:before {\n  content: \"\\F190\"; }\n\n.fa-toggle-left:before,\n.fa-caret-square-o-left:before {\n  content: \"\\F191\"; }\n\n.fa-dot-circle-o:before {\n  content: \"\\F192\"; }\n\n.fa-wheelchair:before {\n  content: \"\\F193\"; }\n\n.fa-vimeo-square:before {\n  content: \"\\F194\"; }\n\n.fa-turkish-lira:before,\n.fa-try:before {\n  content: \"\\F195\"; }\n\n.fa-plus-square-o:before {\n  content: \"\\F196\"; }\n\n.fa-space-shuttle:before {\n  content: \"\\F197\"; }\n\n.fa-slack:before {\n  content: \"\\F198\"; }\n\n.fa-envelope-square:before {\n  content: \"\\F199\"; }\n\n.fa-wordpress:before {\n  content: \"\\F19A\"; }\n\n.fa-openid:before {\n  content: \"\\F19B\"; }\n\n.fa-institution:before,\n.fa-bank:before,\n.fa-university:before {\n  content: \"\\F19C\"; }\n\n.fa-mortar-board:before,\n.fa-graduation-cap:before {\n  content: \"\\F19D\"; }\n\n.fa-yahoo:before {\n  content: \"\\F19E\"; }\n\n.fa-google:before {\n  content: \"\\F1A0\"; }\n\n.fa-reddit:before {\n  content: \"\\F1A1\"; }\n\n.fa-reddit-square:before {\n  content: \"\\F1A2\"; }\n\n.fa-stumbleupon-circle:before {\n  content: \"\\F1A3\"; }\n\n.fa-stumbleupon:before {\n  content: \"\\F1A4\"; }\n\n.fa-delicious:before {\n  content: \"\\F1A5\"; }\n\n.fa-digg:before {\n  content: \"\\F1A6\"; }\n\n.fa-pied-piper-pp:before {\n  content: \"\\F1A7\"; }\n\n.fa-pied-piper-alt:before {\n  content: \"\\F1A8\"; }\n\n.fa-drupal:before {\n  content: \"\\F1A9\"; }\n\n.fa-joomla:before {\n  content: \"\\F1AA\"; }\n\n.fa-language:before {\n  content: \"\\F1AB\"; }\n\n.fa-fax:before {\n  content: \"\\F1AC\"; }\n\n.fa-building:before {\n  content: \"\\F1AD\"; }\n\n.fa-child:before {\n  content: \"\\F1AE\"; }\n\n.fa-paw:before {\n  content: \"\\F1B0\"; }\n\n.fa-spoon:before {\n  content: \"\\F1B1\"; }\n\n.fa-cube:before {\n  content: \"\\F1B2\"; }\n\n.fa-cubes:before {\n  content: \"\\F1B3\"; }\n\n.fa-behance:before {\n  content: \"\\F1B4\"; }\n\n.fa-behance-square:before {\n  content: \"\\F1B5\"; }\n\n.fa-steam:before {\n  content: \"\\F1B6\"; }\n\n.fa-steam-square:before {\n  content: \"\\F1B7\"; }\n\n.fa-recycle:before {\n  content: \"\\F1B8\"; }\n\n.fa-automobile:before,\n.fa-car:before {\n  content: \"\\F1B9\"; }\n\n.fa-cab:before,\n.fa-taxi:before {\n  content: \"\\F1BA\"; }\n\n.fa-tree:before {\n  content: \"\\F1BB\"; }\n\n.fa-spotify:before {\n  content: \"\\F1BC\"; }\n\n.fa-deviantart:before {\n  content: \"\\F1BD\"; }\n\n.fa-soundcloud:before {\n  content: \"\\F1BE\"; }\n\n.fa-database:before {\n  content: \"\\F1C0\"; }\n\n.fa-file-pdf-o:before {\n  content: \"\\F1C1\"; }\n\n.fa-file-word-o:before {\n  content: \"\\F1C2\"; }\n\n.fa-file-excel-o:before {\n  content: \"\\F1C3\"; }\n\n.fa-file-powerpoint-o:before {\n  content: \"\\F1C4\"; }\n\n.fa-file-photo-o:before,\n.fa-file-picture-o:before,\n.fa-file-image-o:before {\n  content: \"\\F1C5\"; }\n\n.fa-file-zip-o:before,\n.fa-file-archive-o:before {\n  content: \"\\F1C6\"; }\n\n.fa-file-sound-o:before,\n.fa-file-audio-o:before {\n  content: \"\\F1C7\"; }\n\n.fa-file-movie-o:before,\n.fa-file-video-o:before {\n  content: \"\\F1C8\"; }\n\n.fa-file-code-o:before {\n  content: \"\\F1C9\"; }\n\n.fa-vine:before {\n  content: \"\\F1CA\"; }\n\n.fa-codepen:before {\n  content: \"\\F1CB\"; }\n\n.fa-jsfiddle:before {\n  content: \"\\F1CC\"; }\n\n.fa-life-bouy:before,\n.fa-life-buoy:before,\n.fa-life-saver:before,\n.fa-support:before,\n.fa-life-ring:before {\n  content: \"\\F1CD\"; }\n\n.fa-circle-o-notch:before {\n  content: \"\\F1CE\"; }\n\n.fa-ra:before,\n.fa-resistance:before,\n.fa-rebel:before {\n  content: \"\\F1D0\"; }\n\n.fa-ge:before,\n.fa-empire:before {\n  content: \"\\F1D1\"; }\n\n.fa-git-square:before {\n  content: \"\\F1D2\"; }\n\n.fa-git:before {\n  content: \"\\F1D3\"; }\n\n.fa-y-combinator-square:before,\n.fa-yc-square:before,\n.fa-hacker-news:before {\n  content: \"\\F1D4\"; }\n\n.fa-tencent-weibo:before {\n  content: \"\\F1D5\"; }\n\n.fa-qq:before {\n  content: \"\\F1D6\"; }\n\n.fa-wechat:before,\n.fa-weixin:before {\n  content: \"\\F1D7\"; }\n\n.fa-send:before,\n.fa-paper-plane:before {\n  content: \"\\F1D8\"; }\n\n.fa-send-o:before,\n.fa-paper-plane-o:before {\n  content: \"\\F1D9\"; }\n\n.fa-history:before {\n  content: \"\\F1DA\"; }\n\n.fa-circle-thin:before {\n  content: \"\\F1DB\"; }\n\n.fa-header:before {\n  content: \"\\F1DC\"; }\n\n.fa-paragraph:before {\n  content: \"\\F1DD\"; }\n\n.fa-sliders:before {\n  content: \"\\F1DE\"; }\n\n.fa-share-alt:before {\n  content: \"\\F1E0\"; }\n\n.fa-share-alt-square:before {\n  content: \"\\F1E1\"; }\n\n.fa-bomb:before {\n  content: \"\\F1E2\"; }\n\n.fa-soccer-ball-o:before,\n.fa-futbol-o:before {\n  content: \"\\F1E3\"; }\n\n.fa-tty:before {\n  content: \"\\F1E4\"; }\n\n.fa-binoculars:before {\n  content: \"\\F1E5\"; }\n\n.fa-plug:before {\n  content: \"\\F1E6\"; }\n\n.fa-slideshare:before {\n  content: \"\\F1E7\"; }\n\n.fa-twitch:before {\n  content: \"\\F1E8\"; }\n\n.fa-yelp:before {\n  content: \"\\F1E9\"; }\n\n.fa-newspaper-o:before {\n  content: \"\\F1EA\"; }\n\n.fa-wifi:before {\n  content: \"\\F1EB\"; }\n\n.fa-calculator:before {\n  content: \"\\F1EC\"; }\n\n.fa-paypal:before {\n  content: \"\\F1ED\"; }\n\n.fa-google-wallet:before {\n  content: \"\\F1EE\"; }\n\n.fa-cc-visa:before {\n  content: \"\\F1F0\"; }\n\n.fa-cc-mastercard:before {\n  content: \"\\F1F1\"; }\n\n.fa-cc-discover:before {\n  content: \"\\F1F2\"; }\n\n.fa-cc-amex:before {\n  content: \"\\F1F3\"; }\n\n.fa-cc-paypal:before {\n  content: \"\\F1F4\"; }\n\n.fa-cc-stripe:before {\n  content: \"\\F1F5\"; }\n\n.fa-bell-slash:before {\n  content: \"\\F1F6\"; }\n\n.fa-bell-slash-o:before {\n  content: \"\\F1F7\"; }\n\n.fa-trash:before {\n  content: \"\\F1F8\"; }\n\n.fa-copyright:before {\n  content: \"\\F1F9\"; }\n\n.fa-at:before {\n  content: \"\\F1FA\"; }\n\n.fa-eyedropper:before {\n  content: \"\\F1FB\"; }\n\n.fa-paint-brush:before {\n  content: \"\\F1FC\"; }\n\n.fa-birthday-cake:before {\n  content: \"\\F1FD\"; }\n\n.fa-area-chart:before {\n  content: \"\\F1FE\"; }\n\n.fa-pie-chart:before {\n  content: \"\\F200\"; }\n\n.fa-line-chart:before {\n  content: \"\\F201\"; }\n\n.fa-lastfm:before {\n  content: \"\\F202\"; }\n\n.fa-lastfm-square:before {\n  content: \"\\F203\"; }\n\n.fa-toggle-off:before {\n  content: \"\\F204\"; }\n\n.fa-toggle-on:before {\n  content: \"\\F205\"; }\n\n.fa-bicycle:before {\n  content: \"\\F206\"; }\n\n.fa-bus:before {\n  content: \"\\F207\"; }\n\n.fa-ioxhost:before {\n  content: \"\\F208\"; }\n\n.fa-angellist:before {\n  content: \"\\F209\"; }\n\n.fa-cc:before {\n  content: \"\\F20A\"; }\n\n.fa-shekel:before,\n.fa-sheqel:before,\n.fa-ils:before {\n  content: \"\\F20B\"; }\n\n.fa-meanpath:before {\n  content: \"\\F20C\"; }\n\n.fa-buysellads:before {\n  content: \"\\F20D\"; }\n\n.fa-connectdevelop:before {\n  content: \"\\F20E\"; }\n\n.fa-dashcube:before {\n  content: \"\\F210\"; }\n\n.fa-forumbee:before {\n  content: \"\\F211\"; }\n\n.fa-leanpub:before {\n  content: \"\\F212\"; }\n\n.fa-sellsy:before {\n  content: \"\\F213\"; }\n\n.fa-shirtsinbulk:before {\n  content: \"\\F214\"; }\n\n.fa-simplybuilt:before {\n  content: \"\\F215\"; }\n\n.fa-skyatlas:before {\n  content: \"\\F216\"; }\n\n.fa-cart-plus:before {\n  content: \"\\F217\"; }\n\n.fa-cart-arrow-down:before {\n  content: \"\\F218\"; }\n\n.fa-diamond:before {\n  content: \"\\F219\"; }\n\n.fa-ship:before {\n  content: \"\\F21A\"; }\n\n.fa-user-secret:before {\n  content: \"\\F21B\"; }\n\n.fa-motorcycle:before {\n  content: \"\\F21C\"; }\n\n.fa-street-view:before {\n  content: \"\\F21D\"; }\n\n.fa-heartbeat:before {\n  content: \"\\F21E\"; }\n\n.fa-venus:before {\n  content: \"\\F221\"; }\n\n.fa-mars:before {\n  content: \"\\F222\"; }\n\n.fa-mercury:before {\n  content: \"\\F223\"; }\n\n.fa-intersex:before,\n.fa-transgender:before {\n  content: \"\\F224\"; }\n\n.fa-transgender-alt:before {\n  content: \"\\F225\"; }\n\n.fa-venus-double:before {\n  content: \"\\F226\"; }\n\n.fa-mars-double:before {\n  content: \"\\F227\"; }\n\n.fa-venus-mars:before {\n  content: \"\\F228\"; }\n\n.fa-mars-stroke:before {\n  content: \"\\F229\"; }\n\n.fa-mars-stroke-v:before {\n  content: \"\\F22A\"; }\n\n.fa-mars-stroke-h:before {\n  content: \"\\F22B\"; }\n\n.fa-neuter:before {\n  content: \"\\F22C\"; }\n\n.fa-genderless:before {\n  content: \"\\F22D\"; }\n\n.fa-facebook-official:before {\n  content: \"\\F230\"; }\n\n.fa-pinterest-p:before {\n  content: \"\\F231\"; }\n\n.fa-whatsapp:before {\n  content: \"\\F232\"; }\n\n.fa-server:before {\n  content: \"\\F233\"; }\n\n.fa-user-plus:before {\n  content: \"\\F234\"; }\n\n.fa-user-times:before {\n  content: \"\\F235\"; }\n\n.fa-hotel:before,\n.fa-bed:before {\n  content: \"\\F236\"; }\n\n.fa-viacoin:before {\n  content: \"\\F237\"; }\n\n.fa-train:before {\n  content: \"\\F238\"; }\n\n.fa-subway:before {\n  content: \"\\F239\"; }\n\n.fa-medium:before {\n  content: \"\\F23A\"; }\n\n.fa-yc:before,\n.fa-y-combinator:before {\n  content: \"\\F23B\"; }\n\n.fa-optin-monster:before {\n  content: \"\\F23C\"; }\n\n.fa-opencart:before {\n  content: \"\\F23D\"; }\n\n.fa-expeditedssl:before {\n  content: \"\\F23E\"; }\n\n.fa-battery-4:before,\n.fa-battery:before,\n.fa-battery-full:before {\n  content: \"\\F240\"; }\n\n.fa-battery-3:before,\n.fa-battery-three-quarters:before {\n  content: \"\\F241\"; }\n\n.fa-battery-2:before,\n.fa-battery-half:before {\n  content: \"\\F242\"; }\n\n.fa-battery-1:before,\n.fa-battery-quarter:before {\n  content: \"\\F243\"; }\n\n.fa-battery-0:before,\n.fa-battery-empty:before {\n  content: \"\\F244\"; }\n\n.fa-mouse-pointer:before {\n  content: \"\\F245\"; }\n\n.fa-i-cursor:before {\n  content: \"\\F246\"; }\n\n.fa-object-group:before {\n  content: \"\\F247\"; }\n\n.fa-object-ungroup:before {\n  content: \"\\F248\"; }\n\n.fa-sticky-note:before {\n  content: \"\\F249\"; }\n\n.fa-sticky-note-o:before {\n  content: \"\\F24A\"; }\n\n.fa-cc-jcb:before {\n  content: \"\\F24B\"; }\n\n.fa-cc-diners-club:before {\n  content: \"\\F24C\"; }\n\n.fa-clone:before {\n  content: \"\\F24D\"; }\n\n.fa-balance-scale:before {\n  content: \"\\F24E\"; }\n\n.fa-hourglass-o:before {\n  content: \"\\F250\"; }\n\n.fa-hourglass-1:before,\n.fa-hourglass-start:before {\n  content: \"\\F251\"; }\n\n.fa-hourglass-2:before,\n.fa-hourglass-half:before {\n  content: \"\\F252\"; }\n\n.fa-hourglass-3:before,\n.fa-hourglass-end:before {\n  content: \"\\F253\"; }\n\n.fa-hourglass:before {\n  content: \"\\F254\"; }\n\n.fa-hand-grab-o:before,\n.fa-hand-rock-o:before {\n  content: \"\\F255\"; }\n\n.fa-hand-stop-o:before,\n.fa-hand-paper-o:before {\n  content: \"\\F256\"; }\n\n.fa-hand-scissors-o:before {\n  content: \"\\F257\"; }\n\n.fa-hand-lizard-o:before {\n  content: \"\\F258\"; }\n\n.fa-hand-spock-o:before {\n  content: \"\\F259\"; }\n\n.fa-hand-pointer-o:before {\n  content: \"\\F25A\"; }\n\n.fa-hand-peace-o:before {\n  content: \"\\F25B\"; }\n\n.fa-trademark:before {\n  content: \"\\F25C\"; }\n\n.fa-registered:before {\n  content: \"\\F25D\"; }\n\n.fa-creative-commons:before {\n  content: \"\\F25E\"; }\n\n.fa-gg:before {\n  content: \"\\F260\"; }\n\n.fa-gg-circle:before {\n  content: \"\\F261\"; }\n\n.fa-tripadvisor:before {\n  content: \"\\F262\"; }\n\n.fa-odnoklassniki:before {\n  content: \"\\F263\"; }\n\n.fa-odnoklassniki-square:before {\n  content: \"\\F264\"; }\n\n.fa-get-pocket:before {\n  content: \"\\F265\"; }\n\n.fa-wikipedia-w:before {\n  content: \"\\F266\"; }\n\n.fa-safari:before {\n  content: \"\\F267\"; }\n\n.fa-chrome:before {\n  content: \"\\F268\"; }\n\n.fa-firefox:before {\n  content: \"\\F269\"; }\n\n.fa-opera:before {\n  content: \"\\F26A\"; }\n\n.fa-internet-explorer:before {\n  content: \"\\F26B\"; }\n\n.fa-tv:before,\n.fa-television:before {\n  content: \"\\F26C\"; }\n\n.fa-contao:before {\n  content: \"\\F26D\"; }\n\n.fa-500px:before {\n  content: \"\\F26E\"; }\n\n.fa-amazon:before {\n  content: \"\\F270\"; }\n\n.fa-calendar-plus-o:before {\n  content: \"\\F271\"; }\n\n.fa-calendar-minus-o:before {\n  content: \"\\F272\"; }\n\n.fa-calendar-times-o:before {\n  content: \"\\F273\"; }\n\n.fa-calendar-check-o:before {\n  content: \"\\F274\"; }\n\n.fa-industry:before {\n  content: \"\\F275\"; }\n\n.fa-map-pin:before {\n  content: \"\\F276\"; }\n\n.fa-map-signs:before {\n  content: \"\\F277\"; }\n\n.fa-map-o:before {\n  content: \"\\F278\"; }\n\n.fa-map:before {\n  content: \"\\F279\"; }\n\n.fa-commenting:before {\n  content: \"\\F27A\"; }\n\n.fa-commenting-o:before {\n  content: \"\\F27B\"; }\n\n.fa-houzz:before {\n  content: \"\\F27C\"; }\n\n.fa-vimeo:before {\n  content: \"\\F27D\"; }\n\n.fa-black-tie:before {\n  content: \"\\F27E\"; }\n\n.fa-fonticons:before {\n  content: \"\\F280\"; }\n\n.fa-reddit-alien:before {\n  content: \"\\F281\"; }\n\n.fa-edge:before {\n  content: \"\\F282\"; }\n\n.fa-credit-card-alt:before {\n  content: \"\\F283\"; }\n\n.fa-codiepie:before {\n  content: \"\\F284\"; }\n\n.fa-modx:before {\n  content: \"\\F285\"; }\n\n.fa-fort-awesome:before {\n  content: \"\\F286\"; }\n\n.fa-usb:before {\n  content: \"\\F287\"; }\n\n.fa-product-hunt:before {\n  content: \"\\F288\"; }\n\n.fa-mixcloud:before {\n  content: \"\\F289\"; }\n\n.fa-scribd:before {\n  content: \"\\F28A\"; }\n\n.fa-pause-circle:before {\n  content: \"\\F28B\"; }\n\n.fa-pause-circle-o:before {\n  content: \"\\F28C\"; }\n\n.fa-stop-circle:before {\n  content: \"\\F28D\"; }\n\n.fa-stop-circle-o:before {\n  content: \"\\F28E\"; }\n\n.fa-shopping-bag:before {\n  content: \"\\F290\"; }\n\n.fa-shopping-basket:before {\n  content: \"\\F291\"; }\n\n.fa-hashtag:before {\n  content: \"\\F292\"; }\n\n.fa-bluetooth:before {\n  content: \"\\F293\"; }\n\n.fa-bluetooth-b:before {\n  content: \"\\F294\"; }\n\n.fa-percent:before {\n  content: \"\\F295\"; }\n\n.fa-gitlab:before {\n  content: \"\\F296\"; }\n\n.fa-wpbeginner:before {\n  content: \"\\F297\"; }\n\n.fa-wpforms:before {\n  content: \"\\F298\"; }\n\n.fa-envira:before {\n  content: \"\\F299\"; }\n\n.fa-universal-access:before {\n  content: \"\\F29A\"; }\n\n.fa-wheelchair-alt:before {\n  content: \"\\F29B\"; }\n\n.fa-question-circle-o:before {\n  content: \"\\F29C\"; }\n\n.fa-blind:before {\n  content: \"\\F29D\"; }\n\n.fa-audio-description:before {\n  content: \"\\F29E\"; }\n\n.fa-volume-control-phone:before {\n  content: \"\\F2A0\"; }\n\n.fa-braille:before {\n  content: \"\\F2A1\"; }\n\n.fa-assistive-listening-systems:before {\n  content: \"\\F2A2\"; }\n\n.fa-asl-interpreting:before,\n.fa-american-sign-language-interpreting:before {\n  content: \"\\F2A3\"; }\n\n.fa-deafness:before,\n.fa-hard-of-hearing:before,\n.fa-deaf:before {\n  content: \"\\F2A4\"; }\n\n.fa-glide:before {\n  content: \"\\F2A5\"; }\n\n.fa-glide-g:before {\n  content: \"\\F2A6\"; }\n\n.fa-signing:before,\n.fa-sign-language:before {\n  content: \"\\F2A7\"; }\n\n.fa-low-vision:before {\n  content: \"\\F2A8\"; }\n\n.fa-viadeo:before {\n  content: \"\\F2A9\"; }\n\n.fa-viadeo-square:before {\n  content: \"\\F2AA\"; }\n\n.fa-snapchat:before {\n  content: \"\\F2AB\"; }\n\n.fa-snapchat-ghost:before {\n  content: \"\\F2AC\"; }\n\n.fa-snapchat-square:before {\n  content: \"\\F2AD\"; }\n\n.fa-pied-piper:before {\n  content: \"\\F2AE\"; }\n\n.fa-first-order:before {\n  content: \"\\F2B0\"; }\n\n.fa-yoast:before {\n  content: \"\\F2B1\"; }\n\n.fa-themeisle:before {\n  content: \"\\F2B2\"; }\n\n.fa-google-plus-circle:before,\n.fa-google-plus-official:before {\n  content: \"\\F2B3\"; }\n\n.fa-fa:before,\n.fa-font-awesome:before {\n  content: \"\\F2B4\"; }\n\n.fa-handshake-o:before {\n  content: \"\\F2B5\"; }\n\n.fa-envelope-open:before {\n  content: \"\\F2B6\"; }\n\n.fa-envelope-open-o:before {\n  content: \"\\F2B7\"; }\n\n.fa-linode:before {\n  content: \"\\F2B8\"; }\n\n.fa-address-book:before {\n  content: \"\\F2B9\"; }\n\n.fa-address-book-o:before {\n  content: \"\\F2BA\"; }\n\n.fa-vcard:before,\n.fa-address-card:before {\n  content: \"\\F2BB\"; }\n\n.fa-vcard-o:before,\n.fa-address-card-o:before {\n  content: \"\\F2BC\"; }\n\n.fa-user-circle:before {\n  content: \"\\F2BD\"; }\n\n.fa-user-circle-o:before {\n  content: \"\\F2BE\"; }\n\n.fa-user-o:before {\n  content: \"\\F2C0\"; }\n\n.fa-id-badge:before {\n  content: \"\\F2C1\"; }\n\n.fa-drivers-license:before,\n.fa-id-card:before {\n  content: \"\\F2C2\"; }\n\n.fa-drivers-license-o:before,\n.fa-id-card-o:before {\n  content: \"\\F2C3\"; }\n\n.fa-quora:before {\n  content: \"\\F2C4\"; }\n\n.fa-free-code-camp:before {\n  content: \"\\F2C5\"; }\n\n.fa-telegram:before {\n  content: \"\\F2C6\"; }\n\n.fa-thermometer-4:before,\n.fa-thermometer:before,\n.fa-thermometer-full:before {\n  content: \"\\F2C7\"; }\n\n.fa-thermometer-3:before,\n.fa-thermometer-three-quarters:before {\n  content: \"\\F2C8\"; }\n\n.fa-thermometer-2:before,\n.fa-thermometer-half:before {\n  content: \"\\F2C9\"; }\n\n.fa-thermometer-1:before,\n.fa-thermometer-quarter:before {\n  content: \"\\F2CA\"; }\n\n.fa-thermometer-0:before,\n.fa-thermometer-empty:before {\n  content: \"\\F2CB\"; }\n\n.fa-shower:before {\n  content: \"\\F2CC\"; }\n\n.fa-bathtub:before,\n.fa-s15:before,\n.fa-bath:before {\n  content: \"\\F2CD\"; }\n\n.fa-podcast:before {\n  content: \"\\F2CE\"; }\n\n.fa-window-maximize:before {\n  content: \"\\F2D0\"; }\n\n.fa-window-minimize:before {\n  content: \"\\F2D1\"; }\n\n.fa-window-restore:before {\n  content: \"\\F2D2\"; }\n\n.fa-times-rectangle:before,\n.fa-window-close:before {\n  content: \"\\F2D3\"; }\n\n.fa-times-rectangle-o:before,\n.fa-window-close-o:before {\n  content: \"\\F2D4\"; }\n\n.fa-bandcamp:before {\n  content: \"\\F2D5\"; }\n\n.fa-grav:before {\n  content: \"\\F2D6\"; }\n\n.fa-etsy:before {\n  content: \"\\F2D7\"; }\n\n.fa-imdb:before {\n  content: \"\\F2D8\"; }\n\n.fa-ravelry:before {\n  content: \"\\F2D9\"; }\n\n.fa-eercast:before {\n  content: \"\\F2DA\"; }\n\n.fa-microchip:before {\n  content: \"\\F2DB\"; }\n\n.fa-snowflake-o:before {\n  content: \"\\F2DC\"; }\n\n.fa-superpowers:before {\n  content: \"\\F2DD\"; }\n\n.fa-wpexplorer:before {\n  content: \"\\F2DE\"; }\n\n.fa-meetup:before {\n  content: \"\\F2E0\"; }\n\n.sr-only {\n  position: absolute;\n  width: 1px;\n  height: 1px;\n  padding: 0;\n  margin: -1px;\n  overflow: hidden;\n  clip: rect(0, 0, 0, 0);\n  border: 0; }\n\n.sr-only-focusable:active, .sr-only-focusable:focus {\n  position: static;\n  width: auto;\n  height: auto;\n  margin: 0;\n  overflow: visible;\n  clip: auto; }\n\nbody {\n  font-family: 'Roboto', sans-serif; }\n\n.max-height {\n  height: 100%; }\n\n.max-width {\n  width: 100%; }\n\n.display-flex {\n  display: flex; }\n\n.flex-1 {\n  flex: 1 0; }\n\n.flexbox-center {\n  align-items: center;\n  justify-content: center; }\n\n.no-radius {\n  border-radius: 0px; }\n\n.margin-right-10 {\n  margin-right: 10px; }\n\n.margin-right-20 {\n  margin-right: 10px; }\n\n.margin-right-30 {\n  margin-right: 10px; }\n\n.margin-top-0 {\n  margin-top: 0; }\n\n.margin-top-15 {\n  margin-top: 15px; }\n\n.margin-top-30 {\n  margin-top: 30px; }\n\n.margin-bottom-0 {\n  margin-bottom: 0; }\n\n.margin-bottom-30 {\n  margin-bottom: 30px; }\n\n.cursor-pointer {\n  cursor: pointer; }\n\n.p-no-margin {\n  margin: 0; }\n\n#page-wrapper {\n  overflow: hidden; }\n\n.collapse-button {\n  position: absolute;\n  display: block;\n  top: 10px;\n  left: 20px;\n  z-index: 99;\n  font-size: 18px; }\n  @media (min-width: 768px) {\n    .collapse-button {\n      display: none; } }\n\n.collapse-button-close {\n  position: absolute;\n  top: 10px;\n  left: 220px;\n  color: white;\n  font-size: 18px; }\n\n#subIndex-sidebar {\n  width: 250px;\n  height: 100%;\n  background: #222222;\n  left: -250px;\n  transition: left 0.2s linear;\n  position: fixed;\n  padding: 20px 0;\n  color: white; }\n  @media (min-width: 768px) {\n    #subIndex-sidebar {\n      left: 0; } }\n  #subIndex-sidebar .employee-avatar {\n    width: 110px;\n    height: 110px;\n    background-size: cover;\n    border-radius: 100%;\n    background-position: center center;\n    background-color: white;\n    margin: 0 auto; }\n  #subIndex-sidebar .nav .active {\n    border-left: 5px solid #d91d2f;\n    margin-left: 0px; }\n  #subIndex-sidebar .nav li {\n    margin: 0;\n    border-bottom: 1px solid #272727; }\n    #subIndex-sidebar .nav li a {\n      margin-left: 5px;\n      color: white; }\n      #subIndex-sidebar .nav li a:hover {\n        border-left: 5px solid #11e45b;\n        margin-left: 0px; }\n\n#subIndex-content {\n  transition: all 0.2s linear;\n  width: calc(100% - 250px);\n  padding: 30px 0;\n  margin-left: 250px;\n  min-height: 100%; }\n  @media (max-width: 768px) {\n    #subIndex-content {\n      margin-left: 0px;\n      width: 100%; } }\n  #subIndex-content .employee-info p {\n    margin: 0px; }\n\n.active_sidebar {\n  left: 0 !important; }\n\n.active_content {\n  margin-left: 250px !important; }\n\n.footer-subIndex {\n  background-color: #fbf9f9; }\n\n#login {\n  position: relative;\n  top: 100px;\n  align-items: center;\n  justify-content: center; }\n  #login .login-box {\n    color: white;\n    background-color: #29c585;\n    margin: 0 auto;\n    max-width: 400px;\n    flex: 1; }\n  #login .validation-error {\n    background: #cc141d;\n    color: white;\n    padding: 10px;\n    margin-top: 10px; }\n\nhtml {\n  background-color: #fdfcfc;\n  position: relative;\n  min-height: 100%;\n  padding-bottom: 70px;\n  width: 100%; }\n\nheader {\n  background-color: #0957c3;\n  background-image: url(\"/images/po-bg.png\");\n  background-position: center;\n  background-repeat: none;\n  background-size: cover;\n  height: 430px;\n  text-align: center;\n  color: white; }\n  header h1 {\n    font-size: 26px;\n    margin-bottom: 30px; }\n  header img {\n    margin-top: 50px;\n    max-width: 500px; }\n  header .input-group input, header .input-group button {\n    height: 50px;\n    border-radius: 0px; }\n\n#search {\n  margin-top: 50px; }\n\n#teacherList .btn-group, #searchResult .btn-group {\n  margin: 20px auto; }\n  #teacherList .btn-group button, #searchResult .btn-group button {\n    font-size: 20px; }\n\n#teacherList .teacherList-char, #searchResult .teacherList-char {\n  color: #0957c3;\n  font-size: 23px;\n  border-bottom: 2px solid #0957c3;\n  padding-bottom: 10px;\n  margin-left: 50px;\n  width: 100px; }\n\n#teacherList .employee-item-img, #searchResult .employee-item-img {\n  width: 90px;\n  height: 90px;\n  background-size: cover;\n  background-position: center center; }\n\n#teacherList .employee-item-img-big, #searchResult .employee-item-img-big {\n  max-height: 200px;\n  background-size: cover;\n  background-position: center center; }\n\n#teacherList .employee-item-info, #searchResult .employee-item-info {\n  padding-left: 15px;\n  width: calc(100% - 100px); }\n  #teacherList .employee-item-info .employee-item-title, #searchResult .employee-item-info .employee-item-title {\n    font-size: 17px; }\n\n#admin-body {\n  background-color: #fafcfe; }\n\n#wrapper {\n  height: 100%; }\n\n#page-wrapper {\n  padding: 0 15px;\n  width: 100%; }\n  @media (min-width: 768px) {\n    #page-wrapper {\n      position: inherit;\n      padding: 0 30px;\n      border-left: 1px solid #e7e7e7; } }\n\n.navbar {\n  /* Permalink - use to edit and share this gradient: http://colorzilla.com/gradient-editor/#22be89+0,0cad76+100 */\n  background: #22be89;\n  /* Old browsers */\n  background: -moz-linear-gradient(left, #22be89 0%, #0cad76 100%);\n  /* FF3.6-15 */\n  background: -webkit-linear-gradient(left, #22be89 0%, #0cad76 100%);\n  /* Chrome10-25,Safari5.1-6 */\n  background: linear-gradient(to right, #22be89 0%, #0cad76 100%);\n  /* W3C, IE10+, FF16+, Chrome26+, Opera12+, Safari7+ */\n  filter: progid:DXImageTransform.Microsoft.gradient(startColorstr='#22be89', endColorstr='#0cad76', GradientType=1);\n  /* IE6-9 */\n  padding: 10px 0; }\n  .navbar .navbar-brand {\n    padding: 0 15px; }\n\n.navbar-top-links {\n  margin-right: 0; }\n  .navbar-top-links li {\n    display: inline-block; }\n    .navbar-top-links li:last-child {\n      margin-right: 15px; }\n    .navbar-top-links li a {\n      color: white;\n      padding: 15px;\n      min-height: 50px; }\n      .navbar-top-links li a:hover {\n        background: none; }\n  .navbar-top-links .dropdown-menu li {\n    display: block; }\n    .navbar-top-links .dropdown-menu li:last-child {\n      margin-right: 0; }\n    .navbar-top-links .dropdown-menu li a {\n      color: #2b2b2b;\n      padding: 3px 20px;\n      min-height: 0; }\n      .navbar-top-links .dropdown-menu li a div {\n        white-space: normal; }\n\n.sidebar-content-wrapper {\n  min-height: calc(100% - 71px);\n  flex-wrap: nowrap;\n  justify-content: flex-start;\n  align-items: stretch;\n  align-content: stretch; }\n  @media (min-width: 768px) {\n    .sidebar-content-wrapper {\n      display: flex; } }\n\n.sidebar {\n  background-color: white; }\n\n.sidebar .sidebar-nav.navbar-collapse {\n  padding-left: 0;\n  padding-right: 0; }\n\n.sidebar .sidebar-search {\n  padding: 15px; }\n\n.sidebar ul li {\n  border-bottom: 1px solid #e7e7e7; }\n  .sidebar ul li a {\n    color: #2b2b2b;\n    padding: 15px; }\n  .sidebar ul li .active {\n    color: #21be88;\n    border-right: 2px solid #21be88; }\n\n.sidebar .arrow {\n  float: right; }\n\n.sidebar .fa.arrow:before {\n  content: \"\\F104\"; }\n\n.sidebar .active > a > .fa.arrow:before {\n  content: \"\\F107\"; }\n\n.sidebar .nav-second-level li,\n.sidebar .nav-third-level li {\n  border-bottom: none !important; }\n\n.sidebar .nav-second-level li a {\n  padding-left: 37px; }\n\n.sidebar .nav-third-level li a {\n  padding-left: 52px; }\n\n@media (min-width: 768px) {\n  .sidebar {\n    z-index: 1;\n    width: 250px; }\n  .navbar-top-links .dropdown-messages,\n  .navbar-top-links .dropdown-tasks,\n  .navbar-top-links .dropdown-alerts {\n    margin-left: auto; } }\n\n.login-panel {\n  margin-top: 25%; }\n\nhtml {\n  background-color: #fdfcfc;\n  position: relative;\n  min-height: 100%;\n  padding-bottom: 70px;\n  width: 100%; }\n\nheader {\n  background-color: #0957c3;\n  background-image: url(\"/images/po-bg.png\");\n  background-position: center;\n  background-repeat: none;\n  background-size: cover;\n  height: 430px;\n  text-align: center;\n  color: white; }\n  header h1 {\n    font-size: 26px;\n    margin-bottom: 30px; }\n  header img {\n    margin-top: 50px;\n    max-width: 500px; }\n  header .input-group input, header .input-group button {\n    height: 50px;\n    border-radius: 0px; }\n\n#search {\n  margin-top: 50px; }\n\n#teacherList .btn-group, #searchResult .btn-group {\n  margin: 20px auto; }\n  #teacherList .btn-group button, #searchResult .btn-group button {\n    font-size: 20px; }\n\n#teacherList .teacherList-char, #searchResult .teacherList-char {\n  color: #0957c3;\n  font-size: 23px;\n  border-bottom: 2px solid #0957c3;\n  padding-bottom: 10px;\n  margin-left: 50px;\n  width: 100px; }\n\n#teacherList .employee-item-img, #searchResult .employee-item-img {\n  width: 90px;\n  height: 90px;\n  background-size: cover;\n  background-position: center center; }\n\n#teacherList .employee-item-img-big, #searchResult .employee-item-img-big {\n  max-height: 200px;\n  background-size: cover;\n  background-position: center center;\n  padding-top: 20px; }\n\n#teacherList .employee-item-info, #searchResult .employee-item-info {\n  padding-left: 15px;\n  width: calc(100% - 100px); }\n  #teacherList .employee-item-info .employee-item-title, #searchResult .employee-item-info .employee-item-title {\n    font-size: 17px; }\n\nfooter {\n  position: absolute;\n  left: 0;\n  right: 0;\n  bottom: 0;\n  height: 50px;\n  padding: 20px 0;\n  color: white;\n  background-color: #0957c3; }\n  footer a {\n    color: white; }\n    footer a:hover {\n      color: inherit; }\n", ""]);

	// exports


/***/ },
/* 31 */
/***/ function(module, exports) {

	/*
		MIT License http://www.opensource.org/licenses/mit-license.php
		Author Tobias Koppers @sokra
	*/
	// css base code, injected by the css-loader
	module.exports = function() {
		var list = [];

		// return the list of modules as css string
		list.toString = function toString() {
			var result = [];
			for(var i = 0; i < this.length; i++) {
				var item = this[i];
				if(item[2]) {
					result.push("@media " + item[2] + "{" + item[1] + "}");
				} else {
					result.push(item[1]);
				}
			}
			return result.join("");
		};

		// import a list of modules into the list
		list.i = function(modules, mediaQuery) {
			if(typeof modules === "string")
				modules = [[null, modules, ""]];
			var alreadyImportedModules = {};
			for(var i = 0; i < this.length; i++) {
				var id = this[i][0];
				if(typeof id === "number")
					alreadyImportedModules[id] = true;
			}
			for(i = 0; i < modules.length; i++) {
				var item = modules[i];
				// skip already imported module
				// this implementation is not 100% perfect for weird media query combinations
				//  when a module is imported multiple times with different media queries.
				//  I hope this will never occur (Hey this way we have smaller bundles)
				if(typeof item[0] !== "number" || !alreadyImportedModules[item[0]]) {
					if(mediaQuery && !item[2]) {
						item[2] = mediaQuery;
					} else if(mediaQuery) {
						item[2] = "(" + item[2] + ") and (" + mediaQuery + ")";
					}
					list.push(item);
				}
			}
		};
		return list;
	};


/***/ },
/* 32 */
/***/ function(module, exports) {

	module.exports = "data:application/vnd.ms-fontobject;base64,"

/***/ },
/* 33 */
/***/ function(module, exports) {

	module.exports = "data:application/octet-stream;base64,"

/***/ },
/* 34 */
/***/ function(module, exports) {

	module.exports = "data:application/font-woff;base64,"

/***/ },
/* 35 */
/***/ function(module, exports) {

	module.exports = "data:application/x-font-ttf;base64,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JbwmFCZ+JuYnUCe8J/goNChwKKwpoCnMKiYqSiqEKworeiwILGgsuizsLRwtiC30LiguZi6iLtgvDi9GL34vsi/4MD4whDDSMRIxYDGuMegyJDJeMpoy3jMiMz4zaDO2NBg0YDSoNNI1LDWeNeg2PjZ8Ntw3GjdON5I31DgQOEI4hjjIOQo5SjmIOcw6HDpsOpo63jugO9w8GDxQPKI8+D0yPew+Oj6MPtQ/KD9uP6o/+kBIQIBAxkECQX5CGEKoQu5DGENCQ3ZDoEPKRBBEYESuRPZFWkW2RgZGdEa0RvZHNkd2R7ZH9kgWSDJITkhqSIZIzEkSSThJXkmESapKAkouSlIAAQAAARcApwARAAAAAAACAAAAAQABAAAAQAAuAAAAAAAAABAAxgABAAAAAAATABIAAAADAAEECQAAAGoAEgADAAEECQABACgAfAADAAEECQACAA4ApAADAAEECQADAEwAsgADAAEECQAEADgA/gADAAEECQAFAHgBNgADAAEECQAGADYBrgADAAEECQAIABYB5AADAAEECQAJABYB+gADAAEECQALACQCEAADAAEECQAMACQCNAADAAEECQATACQCWAADAAEECQDIABYCfAADAAEECQDJADACkgADAAEECdkDABoCwnd3dy5nbHlwaGljb25zLmNvbQBDAG8AcAB5AHIAaQBnAGgAdAAgAKkAIAAyADAAMQA0ACAAYgB5ACAASgBhAG4AIABLAG8AdgBhAHIAaQBrAC4AIABBAGwAbAAgAHIAaQBnAGgAdABzACAAcgBlAHMAZQByAHYAZQBkAC4ARwBMAFkAUABIAEkAQwBPAE4AUwAgAEgAYQBsAGYAbABpAG4AZwBzAFIAZQBnAHUAbABhAHIAMQAuADAAMAA5ADsAVQBLAFcATgA7AEcATABZAFAASABJAEMATwBOAFMASABhAGwAZgBsAGkAbgBnAHMALQBSAGUAZwB1AGwAYQByAEcATABZAFAASABJAEMATwBOAFMAIABIAGEAbABmAGwAaQBuAGcAcwAgAFIAZQBnAHUAbABhAHIAVgBlAHIAcwBpAG8AbgAgADEALgAwADAAOQA7AFAAUwAgADAAMAAxAC4AMAAwADkAOwBoAG8AdABjAG8AbgB2ACAAMQAuADAALgA3ADAAOwBtAGEAawBlAG8AdABmAC4AbABpAGIAMgAuADUALgA1ADgAMwAyADkARwBMAFkAUABIAEkAQwBPAE4AUwBIAGEAbABmAGwAaQBuAGcAcwAtAFIAZQBnAHUAbABhAHIASgBhAG4AIABLAG8AdgBhAHIAaQBrAEoAYQBuACAASwBvAHYAYQByAGkAawB3AHcAdwAuAGcAbAB5AHAAaABpAGMAbwBuAHMALgBjAG8AbQB3AHcAdwAuAGcAbAB5AHAAaABpAGMAbwBuAHMALgBjAG8AbQB3AHcAdwAuAGcAbAB5AHAAaABpAGMAbwBuAHMALgBjAG8AbQBXAGUAYgBmAG8AbgB0ACAAMQAuADAAVwBlAGQAIABPAGMAdAAgADIAOQAgADAANgA6ADMANgA6ADAANwAgADIAMAAxADQARgBvAG4AdAAgAFMAcQB1AGkAcgByAGUAbAAAAAIAAAAAAAD/tQAyAAAAAAAAAAAAAAAAAAAAAAAAAAABFwAAAQIBAwADAA0ADgEEAJYBBQEGAQcBCAEJAQoBCwEMAQ0BDgEPARABEQESARMA7wEUARUBFgEXARgBGQEaARsBHAEdAR4BHwEgASEBIgEjASQBJQEmAScBKAEpASoBKwEsAS0BLgEvATABMQEyATMBNAE1ATYBNwE4ATkBOgE7ATwBPQE+AT8BQAFBAUIBQwFEAUUBRgFHAUgBSQFKAUsBTAFNAU4BTwFQAVEBUgFTAVQBVQFWAVcBWAFZAVoBWwFcAV0BXgFfAWABYQFiAWMBZAFlAWYBZwFoAWkBagFrAWwBbQFuAW8BcAFxAXIBcwF0AXUBdgF3AXgBeQF6AXsBfAF9AX4BfwGAAYEBggGDAYQBhQGGAYcBiAGJAYoBiwGMAY0BjgGPAZABkQGSAZMBlAGVAZYBlwGYAZkBmgGbAZwBnQGeAZ8BoAGhAaIBowGkAaUBpgGnAagBqQGqAasBrAGtAa4BrwGwAbEBsgGzAbQBtQG2AbcBuAG5AboBuwG8Ab0BvgG/AcABwQHCAcMBxAHFAcYBxwHIAckBygHLAcwBzQHOAc8B0AHRAdIB0wHUAdUB1gHXAdgB2QHaAdsB3AHdAd4B3wHgAeEB4gHjAeQB5QHmAecB6AHpAeoB6wHsAe0B7gHvAfAB8QHyAfMB9AH1AfYB9wH4AfkB+gH7AfwB/QH+Af8CAAIBAgICAwIEAgUCBgIHAggCCQIKAgsCDAINAg4CDwIQAhECEgZnbHlwaDEGZ2x5cGgyB3VuaTAwQTAHdW5pMjAwMAd1bmkyMDAxB3VuaTIwMDIHdW5pMjAwMwd1bmkyMDA0B3VuaTIwMDUHdW5pMjAwNgd1bmkyMDA3B3VuaTIwMDgHdW5pMjAwOQd1bmkyMDBBB3VuaTIwMkYHdW5pMjA1RgRFdXJvB3VuaTIwQkQHdW5pMjMxQgd1bmkyNUZDB3VuaTI2MDEHdW5pMjZGQQd1bmkyNzA5B3VuaTI3MEYHdW5pRTAwMQd1bmlFMDAyB3VuaUUwMDMHdW5pRTAwNQd1bmlFMDA2B3VuaUUwMDcHdW5pRTAwOAd1bmlFMDA5B3VuaUUwMTAHdW5pRTAxMQd1bmlFMDEyB3VuaUUwMTMHdW5pRTAxNAd1bmlFMDE1B3VuaUUwMTYHdW5pRTAxNwd1bmlFMDE4B3VuaUUwMTkHdW5pRTAyMAd1bmlFMDIxB3VuaUUwMjIHdW5pRTAyMwd1bmlFMDI0B3VuaUUwMjUHdW5pRTAyNgd1bmlFMDI3B3VuaUUwMjgHdW5pRTAyOQd1bmlFMDMwB3VuaUUwMzEHdW5pRTAzMgd1bmlFMDMzB3VuaUUwMzQHdW5pRTAzNQd1bmlFMDM2B3VuaUUwMzcHdW5pRTAzOAd1bmlFMDM5B3VuaUUwNDAHdW5pRTA0MQd1bmlFMDQyB3VuaUUwNDMHdW5pRTA0NAd1bmlFMDQ1B3VuaUUwNDYHdW5pRTA0Nwd1bmlFMDQ4B3VuaUUwNDkHdW5pRTA1MAd1bmlFMDUxB3VuaUUwNTIHdW5pRTA1Mwd1bmlFMDU0B3VuaUUwNTUHdW5pRTA1Ngd1bmlFMDU3B3VuaUUwNTgHdW5pRTA1OQd1bmlFMDYwB3VuaUUwNjIHdW5pRTA2Mwd1bmlFMDY0B3VuaUUwNjUHdW5pRTA2Ngd1bmlFMDY3B3VuaUUwNjgHdW5pRTA2OQd1bmlFMDcwB3VuaUUwNzEHdW5pRTA3Mgd1bmlFMDczB3VuaUUwNzQHdW5pRTA3NQd1bmlFMDc2B3VuaUUwNzcHdW5pRTA3OAd1bmlFMDc5B3VuaUUwODAHdW5pRTA4MQd1bmlFMDgyB3VuaUUwODMHdW5pRTA4NAd1bmlFMDg1B3VuaUUwODYHdW5pRTA4Nwd1bmlFMDg4B3VuaUUwODkHdW5pRTA5MAd1bmlFMDkxB3VuaUUwOTIHdW5pRTA5Mwd1bmlFMDk0B3VuaUUwOTUHdW5pRTA5Ngd1bmlFMDk3B3VuaUUxMDEHdW5pRTEwMgd1bmlFMTAzB3VuaUUxMDQHdW5pRTEwNQd1bmlFMTA2B3VuaUUxMDcHdW5pRTEwOAd1bmlFMTA5B3VuaUUxMTAHdW5pRTExMQd1bmlFMTEyB3VuaUUxMTMHdW5pRTExNAd1bmlFMTE1B3VuaUUxMTYHdW5pRTExNwd1bmlFMTE4B3VuaUUxMTkHdW5pRTEyMAd1bmlFMTIxB3VuaUUxMjIHdW5pRTEyMwd1bmlFMTI0B3VuaUUxMjUHdW5pRTEyNgd1bmlFMTI3B3VuaUUxMjgHdW5pRTEyOQd1bmlFMTMwB3VuaUUxMzEHdW5pRTEzMgd1bmlFMTMzB3VuaUUxMzQHdW5pRTEzNQd1bmlFMTM2B3VuaUUxMzcHdW5pRTEzOAd1bmlFMTM5B3VuaUUxNDAHdW5pRTE0MQd1bmlFMTQyB3VuaUUxNDMHdW5pRTE0NAd1bmlFMTQ1B3VuaUUxNDYHdW5pRTE0OAd1bmlFMTQ5B3VuaUUxNTAHdW5pRTE1MQd1bmlFMTUyB3VuaUUxNTMHdW5pRTE1NAd1bmlFMTU1B3VuaUUxNTYHdW5pRTE1Nwd1bmlFMTU4B3VuaUUxNTkHdW5pRTE2MAd1bmlFMTYxB3VuaUUxNjIHdW5pRTE2Mwd1bmlFMTY0B3VuaUUxNjUHdW5pRTE2Ngd1bmlFMTY3B3VuaUUxNjgHdW5pRTE2OQd1bmlFMTcwB3VuaUUxNzEHdW5pRTE3Mgd1bmlFMTczB3VuaUUxNzQHdW5pRTE3NQd1bmlFMTc2B3VuaUUxNzcHdW5pRTE3OAd1bmlFMTc5B3VuaUUxODAHdW5pRTE4MQd1bmlFMTgyB3VuaUUxODMHdW5pRTE4NAd1bmlFMTg1B3VuaUUxODYHdW5pRTE4Nwd1bmlFMTg4B3VuaUUxODkHdW5pRTE5MAd1bmlFMTkxB3VuaUUxOTIHdW5pRTE5Mwd1bmlFMTk0B3VuaUUxOTUHdW5pRTE5Nwd1bmlFMTk4B3VuaUUxOTkHdW5pRTIwMAd1bmlFMjAxB3VuaUUyMDIHdW5pRTIwMwd1bmlFMjA0B3VuaUUyMDUHdW5pRTIwNgd1bmlFMjA5B3VuaUUyMTAHdW5pRTIxMQd1bmlFMjEyB3VuaUUyMTMHdW5pRTIxNAd1bmlFMjE1B3VuaUUyMTYHdW5pRTIxOAd1bmlFMjE5B3VuaUUyMjEHdW5pRTIyMwd1bmlFMjI0B3VuaUUyMjUHdW5pRTIyNgd1bmlFMjI3B3VuaUUyMzAHdW5pRTIzMQd1bmlFMjMyB3VuaUUyMzMHdW5pRTIzNAd1bmlFMjM1B3VuaUUyMzYHdW5pRTIzNwd1bmlFMjM4B3VuaUUyMzkHdW5pRTI0MAd1bmlFMjQxB3VuaUUyNDIHdW5pRTI0Mwd1bmlFMjQ0B3VuaUUyNDUHdW5pRTI0Ngd1bmlFMjQ3B3VuaUUyNDgHdW5pRTI0OQd1bmlFMjUwB3VuaUUyNTEHdW5pRTI1Mgd1bmlFMjUzB3VuaUUyNTQHdW5pRTI1NQd1bmlFMjU2B3VuaUUyNTcHdW5pRTI1OAd1bmlFMjU5B3VuaUUyNjAHdW5pRjhGRgZ1MUY1MTEGdTFGNkFBAAAAAAFUUMMXAAA="

/***/ },
/* 36 */
/***/ function(module, exports, __webpack_require__) {

	module.exports = __webpack_require__.p + "89889688147bd7575d6327160d64e760.svg";

/***/ },
/* 37 */
/***/ function(module, exports, __webpack_require__) {

	module.exports = __webpack_require__.p + "674f50d287a8c48dc19ba404d20fe713.eot";

/***/ },
/* 38 */
/***/ function(module, exports, __webpack_require__) {

	module.exports = __webpack_require__.p + "674f50d287a8c48dc19ba404d20fe713.eot";

/***/ },
/* 39 */
/***/ function(module, exports) {

	module.exports = "data:application/octet-stream;base64,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"

/***/ },
/* 40 */
/***/ function(module, exports) {

	module.exports = "data:application/font-woff;base64,"

/***/ },
/* 41 */
/***/ function(module, exports, __webpack_require__) {

	module.exports = __webpack_require__.p + "b06871f281fee6b241d60582ae9369b9.ttf";

/***/ },
/* 42 */
/***/ function(module, exports, __webpack_require__) {

	module.exports = __webpack_require__.p + "912ec66d7572ff821749319396470bde.svg";

/***/ },
/* 43 */
/***/ function(module, exports, __webpack_require__) {

	/*
		MIT License http://www.opensource.org/licenses/mit-license.php
		Author Tobias Koppers @sokra
	*/
	var stylesInDom = {},
		memoize = function(fn) {
			var memo;
			return function () {
				if (typeof memo === "undefined") memo = fn.apply(this, arguments);
				return memo;
			};
		},
		isOldIE = memoize(function() {
			return /msie [6-9]\b/.test(window.navigator.userAgent.toLowerCase());
		}),
		getHeadElement = memoize(function () {
			return document.head || document.getElementsByTagName("head")[0];
		}),
		singletonElement = null,
		singletonCounter = 0,
		styleElementsInsertedAtTop = [];

	module.exports = function(list, options) {
		if(false) {
			if(typeof document !== "object") throw new Error("The style-loader cannot be used in a non-browser environment");
		}

		options = options || {};
		// Force single-tag solution on IE6-9, which has a hard limit on the # of <style>
		// tags it will allow on a page
		if (typeof options.singleton === "undefined") options.singleton = isOldIE();

		// By default, add <style> tags to the bottom of <head>.
		if (typeof options.insertAt === "undefined") options.insertAt = "bottom";

		var styles = listToStyles(list);
		addStylesToDom(styles, options);

		return function update(newList) {
			var mayRemove = [];
			for(var i = 0; i < styles.length; i++) {
				var item = styles[i];
				var domStyle = stylesInDom[item.id];
				domStyle.refs--;
				mayRemove.push(domStyle);
			}
			if(newList) {
				var newStyles = listToStyles(newList);
				addStylesToDom(newStyles, options);
			}
			for(var i = 0; i < mayRemove.length; i++) {
				var domStyle = mayRemove[i];
				if(domStyle.refs === 0) {
					for(var j = 0; j < domStyle.parts.length; j++)
						domStyle.parts[j]();
					delete stylesInDom[domStyle.id];
				}
			}
		};
	}

	function addStylesToDom(styles, options) {
		for(var i = 0; i < styles.length; i++) {
			var item = styles[i];
			var domStyle = stylesInDom[item.id];
			if(domStyle) {
				domStyle.refs++;
				for(var j = 0; j < domStyle.parts.length; j++) {
					domStyle.parts[j](item.parts[j]);
				}
				for(; j < item.parts.length; j++) {
					domStyle.parts.push(addStyle(item.parts[j], options));
				}
			} else {
				var parts = [];
				for(var j = 0; j < item.parts.length; j++) {
					parts.push(addStyle(item.parts[j], options));
				}
				stylesInDom[item.id] = {id: item.id, refs: 1, parts: parts};
			}
		}
	}

	function listToStyles(list) {
		var styles = [];
		var newStyles = {};
		for(var i = 0; i < list.length; i++) {
			var item = list[i];
			var id = item[0];
			var css = item[1];
			var media = item[2];
			var sourceMap = item[3];
			var part = {css: css, media: media, sourceMap: sourceMap};
			if(!newStyles[id])
				styles.push(newStyles[id] = {id: id, parts: [part]});
			else
				newStyles[id].parts.push(part);
		}
		return styles;
	}

	function insertStyleElement(options, styleElement) {
		var head = getHeadElement();
		var lastStyleElementInsertedAtTop = styleElementsInsertedAtTop[styleElementsInsertedAtTop.length - 1];
		if (options.insertAt === "top") {
			if(!lastStyleElementInsertedAtTop) {
				head.insertBefore(styleElement, head.firstChild);
			} else if(lastStyleElementInsertedAtTop.nextSibling) {
				head.insertBefore(styleElement, lastStyleElementInsertedAtTop.nextSibling);
			} else {
				head.appendChild(styleElement);
			}
			styleElementsInsertedAtTop.push(styleElement);
		} else if (options.insertAt === "bottom") {
			head.appendChild(styleElement);
		} else {
			throw new Error("Invalid value for parameter 'insertAt'. Must be 'top' or 'bottom'.");
		}
	}

	function removeStyleElement(styleElement) {
		styleElement.parentNode.removeChild(styleElement);
		var idx = styleElementsInsertedAtTop.indexOf(styleElement);
		if(idx >= 0) {
			styleElementsInsertedAtTop.splice(idx, 1);
		}
	}

	function createStyleElement(options) {
		var styleElement = document.createElement("style");
		styleElement.type = "text/css";
		insertStyleElement(options, styleElement);
		return styleElement;
	}

	function createLinkElement(options) {
		var linkElement = document.createElement("link");
		linkElement.rel = "stylesheet";
		insertStyleElement(options, linkElement);
		return linkElement;
	}

	function addStyle(obj, options) {
		var styleElement, update, remove;

		if (options.singleton) {
			var styleIndex = singletonCounter++;
			styleElement = singletonElement || (singletonElement = createStyleElement(options));
			update = applyToSingletonTag.bind(null, styleElement, styleIndex, false);
			remove = applyToSingletonTag.bind(null, styleElement, styleIndex, true);
		} else if(obj.sourceMap &&
			typeof URL === "function" &&
			typeof URL.createObjectURL === "function" &&
			typeof URL.revokeObjectURL === "function" &&
			typeof Blob === "function" &&
			typeof btoa === "function") {
			styleElement = createLinkElement(options);
			update = updateLink.bind(null, styleElement);
			remove = function() {
				removeStyleElement(styleElement);
				if(styleElement.href)
					URL.revokeObjectURL(styleElement.href);
			};
		} else {
			styleElement = createStyleElement(options);
			update = applyToTag.bind(null, styleElement);
			remove = function() {
				removeStyleElement(styleElement);
			};
		}

		update(obj);

		return function updateStyle(newObj) {
			if(newObj) {
				if(newObj.css === obj.css && newObj.media === obj.media && newObj.sourceMap === obj.sourceMap)
					return;
				update(obj = newObj);
			} else {
				remove();
			}
		};
	}

	var replaceText = (function () {
		var textStore = [];

		return function (index, replacement) {
			textStore[index] = replacement;
			return textStore.filter(Boolean).join('\n');
		};
	})();

	function applyToSingletonTag(styleElement, index, remove, obj) {
		var css = remove ? "" : obj.css;

		if (styleElement.styleSheet) {
			styleElement.styleSheet.cssText = replaceText(index, css);
		} else {
			var cssNode = document.createTextNode(css);
			var childNodes = styleElement.childNodes;
			if (childNodes[index]) styleElement.removeChild(childNodes[index]);
			if (childNodes.length) {
				styleElement.insertBefore(cssNode, childNodes[index]);
			} else {
				styleElement.appendChild(cssNode);
			}
		}
	}

	function applyToTag(styleElement, obj) {
		var css = obj.css;
		var media = obj.media;

		if(media) {
			styleElement.setAttribute("media", media)
		}

		if(styleElement.styleSheet) {
			styleElement.styleSheet.cssText = css;
		} else {
			while(styleElement.firstChild) {
				styleElement.removeChild(styleElement.firstChild);
			}
			styleElement.appendChild(document.createTextNode(css));
		}
	}

	function updateLink(linkElement, obj) {
		var css = obj.css;
		var sourceMap = obj.sourceMap;

		if(sourceMap) {
			// http://stackoverflow.com/a/26603875
			css += "\n/*# sourceMappingURL=data:application/json;base64," + btoa(unescape(encodeURIComponent(JSON.stringify(sourceMap)))) + " */";
		}

		var blob = new Blob([css], { type: "text/css" });

		var oldSrc = linkElement.href;

		linkElement.href = URL.createObjectURL(blob);

		if(oldSrc)
			URL.revokeObjectURL(oldSrc);
	}


/***/ },
/* 44 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';

	Object.defineProperty(exports, "__esModule", {
	    value: true
	});

	var _adminTpl = __webpack_require__(45);

	var _adminTpl2 = _interopRequireDefault(_adminTpl);

	var _MainAdminController = __webpack_require__(46);

	var _MainAdminController2 = _interopRequireDefault(_MainAdminController);

	var _ManageAdminsController = __webpack_require__(47);

	var _ManageAdminsController2 = _interopRequireDefault(_ManageAdminsController);

	var _adminAdminsTpl = __webpack_require__(48);

	var _adminAdminsTpl2 = _interopRequireDefault(_adminAdminsTpl);

	var _DashboardAdminController = __webpack_require__(49);

	var _DashboardAdminController2 = _interopRequireDefault(_DashboardAdminController);

	var _adminDashboardTpl = __webpack_require__(50);

	var _adminDashboardTpl2 = _interopRequireDefault(_adminDashboardTpl);

	var _ManageAdminsServices = __webpack_require__(51);

	var _ManageAdminsServices2 = _interopRequireDefault(_ManageAdminsServices);

	var _ManageEmployeesController = __webpack_require__(52);

	var _ManageEmployeesController2 = _interopRequireDefault(_ManageEmployeesController);

	var _adminEmployeesTpl = __webpack_require__(53);

	var _adminEmployeesTpl2 = _interopRequireDefault(_adminEmployeesTpl);

	var _ManageDepartmentsServices = __webpack_require__(54);

	var _ManageDepartmentsServices2 = _interopRequireDefault(_ManageDepartmentsServices);

	var _adminDepartmentsTpl = __webpack_require__(55);

	var _adminDepartmentsTpl2 = _interopRequireDefault(_adminDepartmentsTpl);

	var _ManageDepartmentsController = __webpack_require__(56);

	var _ManageDepartmentsController2 = _interopRequireDefault(_ManageDepartmentsController);

	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

	StateConfig.$inject = ['$stateProvider', '$urlRouterProvider'];
	//import ManageEmployeesServices from '../employees/services/ManageEmployeesServices';


	function StateConfig($stateProvider, $urlRouterProvider) {

	    $urlRouterProvider.otherwise("/");
	    $urlRouterProvider.when('', '/dashboard');

	    $stateProvider.state('admin', {
	        url: '',
	        abstract: true,
	        template: _adminTpl2.default,
	        controller: 'MainAdminController',
	        controllerAs: 'vm'
	    }), $stateProvider.state('admin.dashboard', {
	        url: '/dashboard',
	        template: _adminDashboardTpl2.default,
	        controller: 'DashboardAdminController',
	        controllerAs: 'vm'
	    }), $stateProvider.state('admin.admins', {
	        url: '/admins',
	        template: _adminAdminsTpl2.default,
	        controller: 'ManageAdminsController',
	        controllerAs: 'vm'
	    }), $stateProvider.state('admin.employees', {
	        url: '/employees',
	        template: _adminEmployeesTpl2.default,
	        controller: 'ManageEmployeesController',
	        controllerAs: 'vm'
	    }), $stateProvider.state('admin.departments', {
	        url: '/departments',
	        template: _adminDepartmentsTpl2.default,
	        controller: 'ManageDepartmentsController',
	        controllerAs: 'vm'
	    });
	}

	exports.default = angular.module('academicms.config', []).controller('MainAdminController', _MainAdminController2.default).controller('ManageAdminsController', _ManageAdminsController2.default).controller('DashboardAdminController', _DashboardAdminController2.default).controller('ManageEmployeesController', _ManageEmployeesController2.default).controller('ManageDepartmentsController', _ManageDepartmentsController2.default).factory('ManageAdminsServices', _ManageAdminsServices2.default).factory('ManageDepartmentsServices', _ManageDepartmentsServices2.default).config(StateConfig).name;

/***/ },
/* 45 */
/***/ function(module, exports) {

	module.exports = "<div id=\"wrapper\" on-size-changed=\"vm.colapseMenu()\">\r\n\r\n    <nav class=\"navbar navbar-default navbar-static-top\" role=\"navigation\" style=\"margin-bottom: 0\">\r\n        <div class=\"navbar-header\">\r\n            <button type=\"button\" class=\"navbar-toggle\" ng-click=\"vm.isCollapsed = !vm.isCollapsed\">\r\n                <span class=\"sr-only\">Toggle navigation</span>\r\n                <span class=\"icon-bar\"></span>\r\n                <span class=\"icon-bar\"></span>\r\n                <span class=\"icon-bar\"></span>\r\n            </button>\r\n            <a class=\"navbar-brand\"><img ng-src=\"./images/academicms-logo-white-small.png\"></a>\r\n        </div>\r\n\r\n\r\n        <ul class=\"nav navbar-top-links navbar-right\">\r\n            <li class=\"dropdown\" uib-dropdown>\r\n                <a class=\"dropdown-toggle\" data-toggle=\"dropdown\" href=\"#\" uib-dropdown-toggle>\r\n                    <i class=\"fa fa-user fa-fw\"></i> <span class=\"margin-right-10\"\r\n                                                           ng-bind=\"vm.adminDetails.username\"></span><i\r\n                        class=\"fa fa-caret-down\"></i>\r\n                </a>\r\n                <ul class=\"dropdown-menu dropdown-user\" uib-dropdown-menu role=\"menu\" aria-labelledby=\"single-button\">\r\n                    <li><a href=\"#\"><i class=\"fa fa-user fa-fw\"></i> User Profile</a>\r\n                    </li>\r\n                    <li><a href=\"#\"><i class=\"fa fa-gear fa-fw\"></i> Settings</a>\r\n                    </li>\r\n                    <li class=\"divider\"></li>\r\n                    <li><a href ng-click=\"vm.logout()\"><i class=\"fa fa-sign-out fa-fw\"></i> Logout</a>\r\n                    </li>\r\n                </ul>\r\n            </li>\r\n        </ul>\r\n    </nav>\r\n\r\n\r\n    <div class=\"sidebar-content-wrapper \">\r\n        <div class=\"navbar-default sidebar\" role=\"navigation\" uib-collapse=\"vm.isCollapsed\">\r\n            <div class=\"sidebar-nav navbar-collapse\">\r\n                <ul class=\"nav\" id=\"side-menu\">\r\n                    <li>\r\n                        <a href ui-sref=\"admin.dashboard\" ui-sref-active=\"active\"><i class=\"fa fa-dashboard fa-fw\"></i>\r\n                            Dashboard</a>\r\n                    </li>\r\n                    <li>\r\n                        <a href ui-sref=\"admin.employees\" ui-sref-active=\"active\">\r\n                            <i class=\"fa fa-user fa-fw\" aria-hidden=\"true\"></i>\r\n                            Pracownicy\r\n                        </a>\r\n                    </li>\r\n                    <li>\r\n                        <a href ui-sref=\"admin.admins\" ui-sref-active=\"active\">\r\n                            <i class=\"fa fa-bar-chart-o fa-fw\"></i> Administratorzy\r\n                        </a>\r\n                    </li>\r\n\r\n                    <li>\r\n                        <a href ui-sref=\"admin.departments\" ui-sref-active=\"active\">\r\n                            <i class=\"fa fa-building-o fa-fw\" aria-hidden=\"true\"></i>\r\n                            Wydziały\r\n                        </a>\r\n                    </li>\r\n\r\n\r\n                    <!--<li>-->\r\n                    <!--<a href=\"#\" ng-click=\"vm.isNavCollapsed = !vm.isNavCollapsed\"><i-->\r\n                    <!--class=\"fa fa-bar-chart-o fa-fw\"></i> Charts<span class=\"fa arrow\"></span></a>-->\r\n                    <!--<div uib-collapse=\"vm.isNavCollapsed\">-->\r\n                    <!--<ul class=\"nav nav-second-level\">-->\r\n                    <!--<li>-->\r\n                    <!--<a href=\"flot.html\">Flot Charts</a>-->\r\n                    <!--</li>-->\r\n                    <!--<li>-->\r\n                    <!--<a href=\"morris.html\">Morris.js Charts</a>-->\r\n                    <!--</li>-->\r\n                    <!--</ul>-->\r\n                    <!--</div>-->\r\n                    <!--</li>-->\r\n                    <!--<li>-->\r\n                    <!--<a href=\"tables.html\"><i class=\"fa fa-table fa-fw\"></i> Tables</a>-->\r\n                    <!--</li>-->\r\n                </ul>\r\n            </div>\r\n        </div>\r\n\r\n        <div id=\"page-wrapper\">\r\n            <div class=\"container-fluid\">\r\n                <div class=\"row\">\r\n                    <div class=\"col-lg-12\">\r\n                        <div ui-view=\"\"></div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    </div>\r\n</div>\r\n";

/***/ },
/* 46 */
/***/ function(module, exports) {

	'use strict';

	Object.defineProperty(exports, "__esModule", {
	    value: true
	});
	/**
	 * Created by zajac on 28.12.2016.
	 */
	MainAdminController.$inject = ['$window', 'AuthenticationServices', 'RedirectServices'];

	function MainAdminController($window, AuthenticationServices, RedirectServices) {
	    var vm = this;

	    vm.colapseMenu = colapseMenu;
	    vm.logout = logout;

	    getAdminDetails();
	    //-----------------------------------------

	    function colapseMenu() {
	        $window.innerWidth > 768 ? vm.isCollapsed = false : vm.isCollapsed = true;
	    }

	    function logout() {
	        AuthenticationServices.authentication.logout().then(function (_ref) {
	            var data = _ref.data;

	            RedirectServices.to.index();
	        });
	    }

	    function getAdminDetails() {
	        AuthenticationServices.logged.admin().then(function (_ref2) {
	            var data = _ref2.data;

	            vm.adminDetails = data.admin;
	        });
	    }
	}

	exports.default = MainAdminController;

/***/ },
/* 47 */
/***/ function(module, exports) {

	'use strict';

	Object.defineProperty(exports, "__esModule", {
	    value: true
	});
	ManageAdminsController.$inject = ['ManageAdminsServices', '$scope'];

	function ManageAdminsController(ManageAdminsServices, $scope) {
	    var vm = this;
	    vm.form = {};
	    vm.getAdmins = getAdmins;
	    vm.editAdminAccount = editAdminAccount;
	    vm.addUpdateAdmin = addUpdateAdmin;
	    vm.deleteAdmin = deleteAdmin;
	    vm.clearForm = clearForm;

	    getAdmins();
	    //---------------------------------------

	    function getAdmins() {
	        vm.promise = ManageAdminsServices.list().then(function (_ref) {
	            var data = _ref.data;

	            vm.admins = data.list;
	        });
	    }

	    function editAdminAccount(index) {
	        angular.copy(vm.admins[index], vm.form);
	    }

	    function deleteAdmin(id) {
	        return ManageAdminsServices.delete(id).then(function () {
	            getAdmins();
	        });
	    }

	    function addUpdateAdmin() {
	        return ManageAdminsServices.addOrUpdate({
	            id: vm.form.id || null,
	            username: vm.form.username,
	            password: vm.form.password,
	            email: vm.form.email
	        }).then(function () {
	            getAdmins();
	            clearForm();
	        });
	    }

	    function clearForm() {
	        $scope.addEditAdmin.$setPristine();
	        $scope.addEditAdmin.$setUntouched();
	        vm.form = {};
	    }
	}

	exports.default = ManageAdminsController;

/***/ },
/* 48 */
/***/ function(module, exports) {

	module.exports = "<h2 class=\"page-header\">Administratorzy</h2>\r\n\r\n<div class=\"row\" angular-busy=\"vm.promise\">\r\n    <dash-tile title=\"'Dodaj administratora'\" class=\"col-md-3\">\r\n        <form name=\"addEditAdmin\" ng-submit=\"addEditAdmin.$valid && vm.addUpdateAdmin()\" novalidate>\r\n            <div class=\"form-group\">\r\n                <label for=\"username\">Login</label>\r\n                <input type=\"text\" ng-model=\"vm.form.username\" class=\"form-control\" id=\"username\"\r\n                       name=\"username\" placeholder=\"Login\" required>\r\n                <div class=\"validation-error\"\r\n                     ng-show=\"addEditAdmin.$submitted && !addEditAdmin.username.$valid\">\r\n                    <span ng-show=\"addEditAdmin.username.$error.required\"\r\n                          ng-bind=\"'To pole jest wymagane!'\"></span>\r\n                </div>\r\n            </div>\r\n\r\n            <div class=\"form-group\">\r\n                <label for=\"email\">Email</label>\r\n                <input type=\"email\" ng-model=\"vm.form.email\" class=\"form-control\" name=\"email\"\r\n                       id=\"email\"\r\n                       placeholder=\"email\" required>\r\n                <div class=\"validation-error\"\r\n                     ng-show=\"addEditAdmin.$submitted && !addEditAdmin.email.$valid\">\r\n                    <span ng-show=\"addEditAdmin.email.$error.required\"\r\n                          ng-bind=\"'To pole jest wymagane!'\"></span>\r\n                    <span ng-show=\"addEditAdmin.email.$error.email\"\r\n                          ng-bind=\"'Email musi być poprawny!'\"></span>\r\n\r\n                </div>\r\n            </div>\r\n\r\n            <div class=\"form-group\">\r\n                <label for=\"password\">Hasło</label>\r\n                <input type=\"password\" ng-model=\"vm.form.password\" class=\"form-control\" name=\"password\"\r\n                       id=\"password\"\r\n                       placeholder=\"Hasło\" ng-minlength=\"8\">\r\n                <div class=\"validation-error\"\r\n                     ng-show=\"addEditAdmin.$submitted && !addEditAdmin.password.$valid\">\r\n                    <span ng-show=\"addEditAdmin.password.$error.required\"\r\n                          ng-bind=\"'To pole jest wymagane!'\"></span>\r\n                    <span ng-show=\"addEditAdmin.password.$error.minlength\"\r\n                          ng-bind=\"'Hasło jest za krótkie!'\"></span>\r\n                </div>\r\n            </div>\r\n\r\n            <div class=\"form-group validation-error\"\r\n                 ng-show=\"vm.loginError\">\r\n                <span ng-bind=\"vm.loginError\"></span>\r\n            </div>\r\n\r\n            <div class=\"text-right\">\r\n                <button type=\"reset\" ng-disabled=\"!vm.form\" ng-click=\"vm.clearForm(addEditAdmin)\"\r\n                        class=\"btn btn-default\">Anuluj\r\n                </button>\r\n                <button type=\"submit\" class=\"btn btn-primary\">Wyślij</button>\r\n            </div>\r\n        </form>\r\n    </dash-tile>\r\n    <dash-tile class=\"col-md-9\" title=\"'Administratorzy'\">\r\n        <table class=\"table table-striped\">\r\n            <thead>\r\n            <tr>\r\n                <th>login</th>\r\n                <th>email</th>\r\n                <th>ostatnio zalogowany</th>\r\n                <th style=\"width:50px;\"></th>\r\n                <th style=\"width:50px;\"></th>\r\n            </tr>\r\n            </thead>\r\n            <tbody>\r\n            <tr ng-repeat=\"admin in vm.admins\">\r\n                <td ng-bind=\"admin.username\"></td>\r\n                <td ng-bind=\"admin.email\"></td>\r\n                <td ng-bind=\"admin.last_logged\"></td>\r\n                <td>\r\n                    <div class=\"btn btn-primary\" ng-click=\"vm.editAdminAccount($index)\"><i class=\"fa fa-pencil\"\r\n                                                                                           aria-hidden=\"true\"></i></div>\r\n                </td>\r\n                <td>\r\n                    <div class=\"btn btn-danger\" confirm-modal=\"vm.deleteAdmin(admin.id)\"><i class=\"fa fa-times\"\r\n                                                                                            aria-hidden=\"true\"></i>\r\n                    </div>\r\n                </td>\r\n            </tr>\r\n            </tbody>\r\n\r\n        </table>\r\n\r\n    </dash-tile>\r\n</div>\r\n\r\n";

/***/ },
/* 49 */
/***/ function(module, exports) {

	"use strict";

	Object.defineProperty(exports, "__esModule", {
	    value: true
	});
	DashboardAdminController.$inject = [];

	function DashboardAdminController() {
	    var vm = this;
	}

	exports.default = DashboardAdminController;

/***/ },
/* 50 */
/***/ function(module, exports) {

	module.exports = "<h2 class=\"page-header\">Dashboard</h2>\r\n<dash-tile title=\"'Kafelek'\">Tutaj będzie livereload</dash-tile>";

/***/ },
/* 51 */
/***/ function(module, exports) {

	'use strict';

	Object.defineProperty(exports, "__esModule", {
	    value: true
	});
	ManageAdminsServices.$inject = ['$http'];

	function ManageAdminsServices($http) {
	    return {
	        list: function list() {
	            return $http.post('admin/list');
	        },
	        delete: function _delete(id) {
	            return $http.get('admin/delete/' + id);
	        },
	        addOrUpdate: function addOrUpdate(obj) {
	            return $http.post('admin/add', obj);
	        }
	    };
	}

	exports.default = ManageAdminsServices;

/***/ },
/* 52 */
/***/ function(module, exports) {

	'use strict';

	Object.defineProperty(exports, "__esModule", {
	    value: true
	});
	/**
	 * Created by zajac on 30.12.2016.
	 */
	ManageEmployeesController.$inject = ['ManageEmployeesServices', 'ManageDepartmentsServices', '$scope', '$q', 'Upload'];

	function ManageEmployeesController(ManageEmployeesServices, ManageDepartmentsServices, $scope, $q, Upload) {
	    var vm = this;
	    vm.form = null;
	    vm.pageLimit = 20;
	    vm.currentPage = 1;
	    vm.results = 0;
	    vm.editMode = false;

	    vm.getEmployees = getEmployees;
	    vm.deleteEmployee = deleteEmployee;
	    vm.showEmployee = showEmployee;
	    vm.showEditMode = showEditMode;
	    vm.addUpdateEmployee = addUpdateEmployee;
	    vm.clearForm = clearForm;
	    vm.addNewEmployee = addNewEmployee;
	    vm.deletePhoto = deletePhoto;
	    vm.fileUpload = fileUpload;

	    vm.promise = $q.all([getEmployees(), getDepartments()]);

	    //-------------------------------

	    function getEmployees() {
	        var page = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 1;


	        vm.promise = ManageEmployeesServices.listPaginated({
	            limit: vm.pageLimit,
	            page: page
	        }).then(function (_ref) {
	            var data = _ref.data;

	            vm.employees = data.list;
	            vm.results = data.results;
	        });
	    }

	    function deleteEmployee(id) {
	        return ManageEmployeesServices.delete(id).then(function () {
	            getEmployees(vm.currentPage);
	        });
	    }

	    function deletePhoto() {
	        vm.form.avatarPath = null;
	        vm.file = null;
	    }

	    function showEmployee(index) {
	        vm.editMode = false;
	        vm.form = {};
	        angular.copy(vm.employees[index], vm.form);
	    }

	    function showEditMode() {
	        getDepartments();
	        vm.editMode = true;
	    }

	    function getDepartments() {
	        return ManageDepartmentsServices.list().then(function (_ref2) {
	            var data = _ref2.data;

	            vm.departments = data.list;
	        });
	    }

	    function fileUpload() {
	        Upload.upload({
	            url: 'employees/uploadAvatar',
	            data: { file: vm.file }
	        }).then(function (resp) {
	            vm.form.avatarPath = resp.data.path;
	            vm.progressPercentage = null;
	            addUpdateEmployee();
	        }, function (resp) {}, function (evt) {
	            vm.progressPercentage = parseInt(100.0 * evt.loaded / evt.total);
	            //console.log('progress: ' + progressPercentage + '% ' + evt.config.data.file.name);
	        });
	    };

	    function addUpdateEmployee() {
	        return ManageEmployeesServices.addOrUpdate(vm.form).then(function () {
	            clearForm();
	            getEmployees();
	        });
	    }

	    function clearForm() {
	        vm.form = null;
	        vm.editMode = false;
	    }

	    function addNewEmployee() {
	        vm.form = {};
	        showEditMode();
	    }
	}

	exports.default = ManageEmployeesController;

/***/ },
/* 53 */
/***/ function(module, exports) {

	module.exports = "<h2 class=\"page-header\">Pracownicy</h2>\r\n\r\n<div class=\"row margin-bottom-30\" angular-busy=\"vm.promise\">\r\n\r\n    <dash-tile title=\"'Informacje osobowe'\" class=\"col-sm-6\" ng-show=\"vm.form && !vm.editMode\">\r\n        <h3 class=\"margin-top-0\" ng-bind=\"vm.form.academicTitle +' '+vm.form.firstName + ' ' + vm.form.lastName\"></h3>\r\n        <p><strong>Email: </strong> <span ng-bind=\"vm.form.email\"></span></p>\r\n        <p><strong>Wydział: </strong> <span ng-bind=\"vm.form.department.name\"></span></p>\r\n        <p><strong>Funkcja: </strong> <span ng-bind=\"vm.form.function\"></span></p>\r\n        <p><strong>Telefon: </strong> <span ng-bind=\"vm.form.phoneNumber\"></span></p>\r\n        <p><strong>Adres: </strong> <span ng-bind=\"vm.form.address\"></span></p>\r\n        <p><strong>Budynek: </strong> <span ng-bind=\"vm.form.building\"></span></p>\r\n        <p><strong>Pokój: </strong> <span ng-bind=\"vm.form.room\"></span></p>\r\n\r\n        <div class=\"text-right\">\r\n            <button class=\"btn btn-primary\" ng-click=\"vm.showEditMode()\">\r\n                <i class=\"fa fa-pencil\" aria-hidden=\"true\"></i> Edytuj\r\n            </button>\r\n        </div>\r\n    </dash-tile>\r\n\r\n    <dash-tile title=\"'Inne'\" class=\"col-sm-6\" ng-show=\"vm.form && !vm.editMode \">\r\n        <img ng-src=\"{{vm.form.avatarPath}}\" style=\"max-width:300px;\">\r\n        <p class=\"margin-top-30\"><strong>Subdomena: </strong> <span ng-bind=\"vm.form.subdomain\"></span></p>\r\n        <p><strong>Liczba plików: </strong></p>\r\n        <p><strong>Zajęte MB: </strong></p>\r\n        <p><strong>Ostatnie logowanie: </strong></p>\r\n        <p><strong>Licznik odwiedzin: </strong></p>\r\n    </dash-tile>\r\n\r\n\r\n    <dash-tile title=\"'Nowy pracownik'\" class=\"col-sm-12\" ng-show=\"vm.editMode\">\r\n        <form name=\"addEditEmployee\" ng-submit=\"addEditEmployee.$valid && vm.fileUpload()\" novalidate>\r\n            <div class=\"col-sm-6\">\r\n                <div class=\"form-group\">\r\n                    <label for=\"academicTitle\">Tytuł naukowy</label>\r\n                    <input type=\"text\" ng-model=\"vm.form.academicTitle\" class=\"form-control\" id=\"academicTitle\"\r\n                           name=\"academicTitle\" placeholder=\"Tytuł naukowy\" required>\r\n                    <div class=\"validation-error\"\r\n                         ng-show=\"addEditEmployee.$submitted && !addEditEmployee.academicTitle.$valid\">\r\n                    <span ng-show=\"addEditEmployee.academicTitle.$error.required\"\r\n                          ng-bind=\"'To pole jest wymagane!'\"></span>\r\n                    </div>\r\n                </div>\r\n                <div class=\"form-group\">\r\n                    <label for=\"firstName\">Imie</label>\r\n                    <input type=\"text\" ng-model=\"vm.form.firstName\" class=\"form-control\" id=\"firstName\"\r\n                           name=\"firstName\" placeholder=\"Imie\" required>\r\n                    <div class=\"validation-error\"\r\n                         ng-show=\"addEditEmployee.$submitted && !addEditEmployee.firstName.$valid\">\r\n                    <span ng-show=\"addEditEmployee.firstName.$error.required\"\r\n                          ng-bind=\"'To pole jest wymagane!'\"></span>\r\n                    </div>\r\n                </div>\r\n\r\n                <div class=\"form-group\">\r\n                    <label for=\"firstName\">Nazwisko </label>\r\n                    <input type=\"text\" ng-model=\"vm.form.lastName\" class=\"form-control\" id=\"lastName\"\r\n                           name=\"lastName\" placeholder=\"Nazwisko\" required>\r\n                    <div class=\"validation-error\"\r\n                         ng-show=\"addEditEmployee.$submitted && !addEditEmployee.lastName.$valid\">\r\n                    <span ng-show=\"addEditEmployee.lastName.$error.required\"\r\n                          ng-bind=\"'To pole jest wymagane!'\"></span>\r\n                    </div>\r\n                </div>\r\n\r\n                <div class=\"form-group\">\r\n                    <label for=\"function\">Funkcja</label>\r\n                    <input type=\"text\" ng-model=\"vm.form.function\" class=\"form-control\" id=\"function\"\r\n                           name=\"function\" placeholder=\"Funkcja\">\r\n                </div>\r\n                <div class=\"form-group\">\r\n                    <label for=\"phoneNumber\">Numer telefonu</label>\r\n                    <input type=\"text\" ng-model=\"vm.form.phoneNumber\" class=\"form-control\" name=\"phoneNumber\"\r\n                           id=\"phoneNumber\"\r\n                           placeholder=\"Numer Telefonu\" >\r\n                </div>\r\n                <div class=\"form-group\">\r\n                    <label for=\"address\">Adres</label>\r\n                    <textarea type=\"text\" ng-model=\"vm.form.address\" class=\"form-control\" name=\"address\"\r\n                              id=\"address\"\r\n                              placeholder=\"Adres\"></textarea>\r\n                </div>\r\n                <div class=\"form-group\">\r\n                    <label for=\"building\">Budynek</label>\r\n                    <input type=\"text\" ng-model=\"vm.form.building\" class=\"form-control\" name=\"building\"\r\n                           id=\"building\"\r\n                           placeholder=\"Budynek\">\r\n                </div>\r\n\r\n                <div class=\"form-group\">\r\n                    <label for=\"room\">Pokój</label>\r\n                    <input type=\"text\" ng-model=\"vm.form.room\" class=\"form-control\" name=\"room\"\r\n                           id=\"room\"\r\n                           placeholder=\"Pokój\">\r\n                </div>\r\n\r\n            </div>\r\n\r\n            <div class=\"col-sm-6\">\r\n\r\n                <div class=\"form-group\">\r\n                    <label for=\"subdomain\">Subdomena</label>\r\n                    <input type=\"text\" ng-model=\"vm.form.subdomain\" class=\"form-control\" id=\"subdomain\"\r\n                           name=\"subdomain\" placeholder=\"Subdomena\" required>\r\n                    <div class=\"validation-error\"\r\n                         ng-show=\"addEditEmployee.$submitted && !addEditEmployee.subdomain.$valid\">\r\n                    <span ng-show=\"addEditEmployee.subdomain.$error.required\"\r\n                          ng-bind=\"'To pole jest wymagane!'\"></span>\r\n                    </div>\r\n                </div>\r\n\r\n                <div class=\"form-group\">\r\n                    <label for=\"departments\">Wydziały</label>\r\n                    <select ng-model=\"vm.form.department.id\" class=\"form-control\" id=\"departments\"\r\n                            name=\"departments\"\r\n                            ng-options=\"department.id as department.name for department in vm.departments\"\r\n                            required></select>\r\n                </div>\r\n\r\n                <div class=\"form-group\">\r\n                    <label for=\"email\">Email</label>\r\n                    <input type=\"email\" ng-model=\"vm.form.email\" class=\"form-control\" name=\"email\"\r\n                           id=\"email\"\r\n                           placeholder=\"email\" required>\r\n                    <div class=\"validation-error\"\r\n                         ng-show=\"addEditEmployee.$submitted && !addEditEmployee.email.$valid\">\r\n                    <span ng-show=\"addEditEmployee.email.$error.required\"\r\n                          ng-bind=\"'To pole jest wymagane!'\"></span>\r\n                    <span ng-show=\"addEditEmployee.email.$error.email\"\r\n                          ng-bind=\"'Email musi być poprawny!'\"></span>\r\n\r\n                    </div>\r\n                </div>\r\n\r\n                <div class=\"form-group\">\r\n                    <label for=\"password\">Hasło</label>\r\n                    <input type=\"password\" ng-model=\"vm.form.password\" class=\"form-control\" name=\"password\"\r\n                           id=\"password\"\r\n                           placeholder=\"Hasło\" ng-minlength=\"8\">\r\n                    <div class=\"validation-error\"\r\n                         ng-show=\"addEditEmployee.$submitted && !addEditEmployee.password.$valid\">\r\n\r\n                    <span ng-show=\"addEditEmployee.password.$error.minlength\"\r\n                          ng-bind=\"'Hasło jest za krótkie!'\"></span>\r\n                    </div>\r\n                </div>\r\n\r\n                <div class=\"btn btn-primary\" ngf-select ng-model=\"vm.file\" name=\"file\" ngf-pattern=\"'image/*'\"\r\n                     ngf-resize=\"{height: 300,width:300, quality: 1}\"\r\n                     ngf-accept=\"'image/*'\" ngf-max-size=\"20MB\" ngf-min-height=\"100\"\r\n                     ngf-resize=\"{width: 100, height: 100}\" ng-bind=\"vm.file? 'Zmień zdjęcie': 'Wybierz zdjęcie'\">\r\n                </div>\r\n                <div class=\"btn btn-danger\" ng-click=\"vm.deletePhoto()\" ng-disabled=\"!vm.form.avatarPath\">\r\n                    Usuń zdjęcie\r\n                </div>\r\n                <div class=\"margin-top-30\">\r\n                    <img style=\"max-height:300px; max-width:300px;\" ng-if=\"vm.form.avatarPath || vm.file\"\r\n                         ngf-thumbnail=\"vm.file|| vm.form.avatarPath \">\r\n                </div>\r\n\r\n\r\n            </div>\r\n            <div class=\"row\">\r\n                <div class=\"col-sm-12\">\r\n                    <uib-progressbar max=\"100\" ng-show=\"vm.progressPercentage\" value=\"vm.progressPercentage\"><span\r\n                            style=\"color:white; white-space:nowrap;\">\r\n                </span>\r\n                    </uib-progressbar>\r\n                </div>\r\n            </div>\r\n\r\n\r\n            <div class=\"text-right margin-top-30\">\r\n                <button type=\"reset\" ng-disabled=\"!vm.form\" ng-click=\"vm.clearForm(addEditEmployee)\"\r\n                        class=\"btn btn-default\">Anuluj\r\n                </button>\r\n                <button type=\"submit\" class=\"btn btn-primary\">Dodaj pracownika</button>\r\n            </div>\r\n\r\n\r\n        </form>\r\n    </dash-tile>\r\n\r\n\r\n</div>\r\n\r\n<dash-tile title=\"'Pracownicy'\" class=\"row\">\r\n\r\n    <table class=\"table table-striped\">\r\n        <thead>\r\n        <tr>\r\n            <th>Imie i nazwisko</th>\r\n            <th>email</th>\r\n            <th>wydział</th>\r\n            <th>subdomena</th>\r\n            <th style=\"width:50px;\"></th>\r\n            <th style=\"width:50px;\">\r\n\r\n                <div class=\"btn btn-primary\" ng-click=\"vm.addNewEmployee()\">\r\n                    <i class=\"fa fa-plus\" aria-hidden=\"true\"></i>\r\n                </div>\r\n            </th>\r\n        </tr>\r\n        </thead>\r\n        <tbody>\r\n        <tr ng-repeat=\"employee in vm.employees\">\r\n            <td ng-bind=\"employee.firstName + ' ' + employee.lastName\"></td>\r\n            <td ng-bind=\"employee.email\"></td>\r\n            <td ng-bind=\"employee.department.shortcut\"></td>\r\n            <td ng-bind=\"employee.subdomain\"></td>\r\n            <td>\r\n                <div class=\"btn btn-primary\" ng-click=\"vm.showEmployee($index)\">\r\n                    <i class=\"fa fa-info\" aria-hidden=\"true\"></i>\r\n\r\n                </div>\r\n            </td>\r\n            <td>\r\n                <div class=\"btn btn-danger\" confirm-modal=\"vm.deleteEmployee(employee.id)\">\r\n                    <i class=\"fa fa-times\" aria-hidden=\"true\"></i>\r\n                </div>\r\n            </td>\r\n        </tr>\r\n        </tbody>\r\n    </table>\r\n    <div class=\"text-center\">\r\n        <ul uib-pagination total-items=\"vm.results\" items-per-page=\"vm.pageLimit\" ng-model=\"vm.currentPage\"\r\n            previous-text=\"Poprzednia\" next-text=\"Następna\" ng-change=\"vm.getEmployees(vm.currentPage)\"></ul>\r\n    </div>\r\n\r\n</dash-tile>\r\n\r\n<div class=\"clearfix\"></div>\r\n\r\n";

/***/ },
/* 54 */
/***/ function(module, exports) {

	'use strict';

	Object.defineProperty(exports, "__esModule", {
	    value: true
	});
	/**
	 * Created by zajac on 31.12.2016.
	 */
	ManageDepartmentsServices.$inject = ['$http'];

	function ManageDepartmentsServices($http) {
	    return {
	        list: function list() {
	            return $http.post('departments/list');
	        },
	        delete: function _delete(id) {
	            return $http.get('departments/delete/' + id);
	        },
	        addOrUpdate: function addOrUpdate(obj) {
	            return $http.post('departments/add', obj);
	        }
	    };
	}

	exports.default = ManageDepartmentsServices;

/***/ },
/* 55 */
/***/ function(module, exports) {

	module.exports = "<h2 class=\"page-header\">Wydziały</h2>\r\n\r\n<div class=\"row\" angular-busy=\"vm.promise\">\r\n    <dash-tile title=\"'Dodaj wydział'\" class=\"col-md-3\">\r\n        <form name=\"addEditDepartment\" ng-submit=\"addEditDepartment.$valid && vm.addUpdateDepartment()\" novalidate>\r\n            <div class=\"form-group\">\r\n                <label for=\"name\">Nazwa</label>\r\n                <input type=\"text\" ng-model=\"vm.form.name\" class=\"form-control\" id=\"name\"\r\n                       name=\"name\" placeholder=\"Nazwa\" required>\r\n                <div class=\"validation-error\"\r\n                     ng-show=\"addEditDepartment.$submitted && !addEditDepartment.name.$valid\">\r\n                    <span ng-show=\"addEditDepartment.name.$error.required\"\r\n                          ng-bind=\"'To pole jest wymagane!'\"></span>\r\n                </div>\r\n            </div>\r\n\r\n            <div class=\"form-group\">\r\n                <label for=\"shortcut\">Skrót</label>\r\n                <input type=\"text\" ng-model=\"vm.form.shortcut\" class=\"form-control\" name=\"shortcut\"\r\n                       id=\"shortcut\"\r\n                       placeholder=\"Skrót\" required>\r\n                <div class=\"validation-error\"\r\n                     ng-show=\"addEditDepartment.$submitted && !addEditDepartment.shortcut.$valid\">\r\n                    <span ng-show=\"addEditDepartment.shortcut.$error.required\"\r\n                          ng-bind=\"'To pole jest wymagane!'\"></span>\r\n\r\n                </div>\r\n            </div>\r\n\r\n\r\n            <div class=\"text-right\">\r\n                <button type=\"reset\" ng-disabled=\"!vm.form\" ng-click=\"vm.clearForm(addEditDepartment)\"\r\n                        class=\"btn btn-default\">Anuluj\r\n                </button>\r\n                <button type=\"submit\" class=\"btn btn-primary\">Wyślij</button>\r\n            </div>\r\n        </form>\r\n    </dash-tile>\r\n<dash-tile title=\"'Wydziały'\" class=\"col-md-9\">\r\n    <table class=\"table table-striped\">\r\n        <thead>\r\n        <tr>\r\n            <th>Nazwa</th>\r\n            <th>Skrót</th>\r\n            <th style=\"width:50px;\"></th>\r\n            <th style=\"width:50px;\"></th>\r\n        </tr>\r\n        </thead>\r\n        <tbody>\r\n        <tr ng-repeat=\"department in vm.departments\">\r\n            <td ng-bind=\"department.name\"></td>\r\n            <td ng-bind=\"department.shortcut\"></td>\r\n            <td>\r\n                <div class=\"btn btn-primary\" ng-click=\"vm.editDepartment($index)\"><i class=\"fa fa-pencil\"\r\n                                                                                     aria-hidden=\"true\"></i></div>\r\n            </td>\r\n            <td>\r\n                <div class=\"btn btn-danger\" confirm-modal=\"vm.deleteDepartment(department.id)\"><i class=\"fa fa-times\"\r\n                                                                                                  aria-hidden=\"true\"></i>\r\n                </div>\r\n            </td>\r\n        </tr>\r\n        </tbody>\r\n\r\n    </table>\r\n\r\n</dash-tile>\r\n</div>\r\n\r\n";

/***/ },
/* 56 */
/***/ function(module, exports) {

	'use strict';

	Object.defineProperty(exports, "__esModule", {
	    value: true
	});
	/**
	 * Created by zajac on 02.01.2017.
	 */
	ManageDepartmentsController.$inject = ['ManageDepartmentsServices', '$scope'];

	function ManageDepartmentsController(ManageDepartmentsServices, $scope) {
	    var vm = this;
	    vm.form = {};

	    getDepartments();

	    vm.addUpdateDepartment = addUpdateDepartment;
	    vm.editDepartment = editDepartment;
	    vm.deleteDepartment = deleteDepartment;
	    vm.clearForm = clearForm;

	    //-------------------------------

	    function getDepartments() {
	        vm.promise = ManageDepartmentsServices.list().then(function (_ref) {
	            var data = _ref.data;

	            vm.departments = data.list;
	        });
	    }

	    function editDepartment(index) {
	        angular.copy(vm.departments[index], vm.form);
	    }

	    function deleteDepartment(id) {
	        return ManageDepartmentsServices.delete(id).then(function () {
	            getDepartments();
	        });
	    }

	    function addUpdateDepartment() {
	        return ManageDepartmentsServices.addOrUpdate(vm.form).then(function () {
	            getDepartments();
	            clearForm();
	        });
	    }

	    function clearForm() {
	        $scope.addEditDepartment.$setPristine();
	        $scope.addEditDepartment.$setUntouched();
	        vm.form = {};
	    }
	}

	exports.default = ManageDepartmentsController;

/***/ }
/******/ ]);